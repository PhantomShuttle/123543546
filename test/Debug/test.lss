
test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000026be  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000005fe  00800060  000026be  00002752  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000c6  0080065e  0080065e  00002d50  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002d50  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000e8  00000000  00000000  00002d80  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001a4b  00000000  00000000  00002e68  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000031d  00000000  00000000  000048b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005db  00000000  00000000  00004bd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000004b0  00000000  00000000  000051ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000485  00000000  00000000  0000565c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000025a6  00000000  00000000  00005ae1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d8  00000000  00000000  00008087  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__ctors_end>
       4:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
       8:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
       c:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      10:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      14:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      18:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      1c:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      20:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      24:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      28:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      2c:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      30:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      34:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      38:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      3c:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      40:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      44:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      48:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      4c:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      50:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      54:	03 6e       	ori	r16, 0xE3	; 227
      56:	db 36       	cpi	r29, 0x6B	; 107
      58:	3d 9a       	sbi	0x07, 5	; 7
      5a:	99 99       	sbic	0x13, 1	; 19
      5c:	99 3d       	cpi	r25, 0xD9	; 217
      5e:	ab aa       	std	Y+51, r10	; 0x33
      60:	aa 2a       	or	r10, r26
      62:	3e 00       	.word	0x003e	; ????
      64:	00 00       	nop
      66:	80 3f       	cpi	r24, 0xF0	; 240
      68:	08 4a       	sbci	r16, 0xA8	; 168
      6a:	d7 3b       	cpi	r29, 0xB7	; 183
      6c:	3b ce       	rjmp	.-906    	; 0xfffffce4 <__eeprom_end+0xff7efce4>
      6e:	01 6e       	ori	r16, 0xE1	; 225
      70:	84 bc       	out	0x24, r8	; 36
      72:	bf fd       	.word	0xfdbf	; ????
      74:	c1 2f       	mov	r28, r17
      76:	3d 6c       	ori	r19, 0xCD	; 205
      78:	74 31       	cpi	r23, 0x14	; 20
      7a:	9a bd       	out	0x2a, r25	; 42
      7c:	56 83       	std	Z+6, r21	; 0x06
      7e:	3d da       	rcall	.-2950   	; 0xfffff4fa <__eeprom_end+0xff7ef4fa>
      80:	3d 00       	.word	0x003d	; ????
      82:	c7 7f       	andi	r28, 0xF7	; 247
      84:	11 be       	out	0x31, r1	; 49
      86:	d9 e4       	ldi	r29, 0x49	; 73
      88:	bb 4c       	sbci	r27, 0xCB	; 203
      8a:	3e 91       	ld	r19, -X
      8c:	6b aa       	std	Y+51, r6	; 0x33
      8e:	aa be       	out	0x3a, r10	; 58
      90:	00 00       	nop
      92:	00 80       	ld	r0, Z
      94:	3f 07       	cpc	r19, r31
      96:	2c 7a       	andi	r18, 0xAC	; 172
      98:	a5 ba       	out	0x15, r10	; 21
      9a:	6c c5       	rjmp	.+2776   	; 0xb74 <__stack+0x315>
      9c:	90 da       	rcall	.-2784   	; 0xfffff5be <__eeprom_end+0xff7ef5be>
      9e:	3b 93       	.word	0x933b	; ????
      a0:	65 fc       	sbrc	r6, 5
      a2:	8b bc       	out	0x2b, r8	; 43
      a4:	53 f8       	bld	r5, 3
      a6:	10 fd       	sbrc	r17, 0
      a8:	3c 56       	subi	r19, 0x6C	; 108
      aa:	92 83       	std	Z+2, r25	; 0x02
      ac:	4d bd       	out	0x2d, r20	; 45
      ae:	87 9d       	mul	r24, r7
      b0:	3a b6       	in	r3, 0x3a	; 58
      b2:	3d cb       	rjmp	.-2438   	; 0xfffff72e <__eeprom_end+0xff7ef72e>
      b4:	c9 bf       	out	0x39, r28	; 57
      b6:	5b be       	out	0x3b, r5	; 59
      b8:	73 da       	rcall	.-2842   	; 0xfffff5a0 <__eeprom_end+0xff7ef5a0>
      ba:	0f c9       	rjmp	.-3554   	; 0xfffff2da <__eeprom_end+0xff7ef2da>
      bc:	3f 00       	.word	0x003f	; ????

000000be <__ctors_end>:
      be:	11 24       	eor	r1, r1
      c0:	1f be       	out	0x3f, r1	; 63
      c2:	cf e5       	ldi	r28, 0x5F	; 95
      c4:	d8 e0       	ldi	r29, 0x08	; 8
      c6:	de bf       	out	0x3e, r29	; 62
      c8:	cd bf       	out	0x3d, r28	; 61

000000ca <__do_copy_data>:
      ca:	16 e0       	ldi	r17, 0x06	; 6
      cc:	a0 e6       	ldi	r26, 0x60	; 96
      ce:	b0 e0       	ldi	r27, 0x00	; 0
      d0:	ee eb       	ldi	r30, 0xBE	; 190
      d2:	f6 e2       	ldi	r31, 0x26	; 38
      d4:	02 c0       	rjmp	.+4      	; 0xda <__do_copy_data+0x10>
      d6:	05 90       	lpm	r0, Z+
      d8:	0d 92       	st	X+, r0
      da:	ae 35       	cpi	r26, 0x5E	; 94
      dc:	b1 07       	cpc	r27, r17
      de:	d9 f7       	brne	.-10     	; 0xd6 <__do_copy_data+0xc>

000000e0 <__do_clear_bss>:
      e0:	27 e0       	ldi	r18, 0x07	; 7
      e2:	ae e5       	ldi	r26, 0x5E	; 94
      e4:	b6 e0       	ldi	r27, 0x06	; 6
      e6:	01 c0       	rjmp	.+2      	; 0xea <.do_clear_bss_start>

000000e8 <.do_clear_bss_loop>:
      e8:	1d 92       	st	X+, r1

000000ea <.do_clear_bss_start>:
      ea:	a4 32       	cpi	r26, 0x24	; 36
      ec:	b2 07       	cpc	r27, r18
      ee:	e1 f7       	brne	.-8      	; 0xe8 <.do_clear_bss_loop>
      f0:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <main>
      f4:	0c 94 5d 13 	jmp	0x26ba	; 0x26ba <_exit>

000000f8 <__bad_interrupt>:
      f8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000fc <OledWriteByte>:
	Digit=Digit-d3*10;
	d4=Digit%10;
	
	xianshi1(d0,y,x);
	xianshi1(d1,y,x+6+i);
	xianshi1(d2,y,x+(6+i)*2);
      fc:	61 30       	cpi	r22, 0x01	; 1
      fe:	11 f4       	brne	.+4      	; 0x104 <OledWriteByte+0x8>
     100:	94 9a       	sbi	0x12, 4	; 18
     102:	0d c0       	rjmp	.+26     	; 0x11e <OledWriteByte+0x22>
	xianshi1(d3,y,x+(6+i)*3);
     104:	94 98       	cbi	0x12, 4	; 18
     106:	0b c0       	rjmp	.+22     	; 0x11e <OledWriteByte+0x22>
     108:	97 98       	cbi	0x12, 7	; 18
     10a:	88 23       	and	r24, r24
     10c:	14 f4       	brge	.+4      	; 0x112 <OledWriteByte+0x16>
     10e:	96 9a       	sbi	0x12, 6	; 18
	xianshi1(d4,y,x+(6+i)*4);
     110:	01 c0       	rjmp	.+2      	; 0x114 <OledWriteByte+0x18>
     112:	96 98       	cbi	0x12, 6	; 18
	d1=Digit/1000;
	Digit=Digit-d1*1000;
	d2=Digit/100;
	Digit=Digit-d2*100;
	d3=Digit/10;
	Digit=Digit-d3*10;
     114:	97 9a       	sbi	0x12, 7	; 18
     116:	88 0f       	add	r24, r24
     118:	91 50       	subi	r25, 0x01	; 1
     11a:	b1 f7       	brne	.-20     	; 0x108 <OledWriteByte+0xc>
     11c:	08 95       	ret
     11e:	98 e0       	ldi	r25, 0x08	; 8
     120:	f3 cf       	rjmp	.-26     	; 0x108 <OledWriteByte+0xc>

00000122 <OledClearn>:
     122:	cf 93       	push	r28
     124:	df 93       	push	r29
     126:	d0 eb       	ldi	r29, 0xB0	; 176
     128:	60 e0       	ldi	r22, 0x00	; 0
     12a:	8d 2f       	mov	r24, r29
     12c:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	d4=Digit%10;
     130:	60 e0       	ldi	r22, 0x00	; 0
     132:	80 e0       	ldi	r24, 0x00	; 0
     134:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
     138:	60 e0       	ldi	r22, 0x00	; 0
     13a:	80 e1       	ldi	r24, 0x10	; 16
     13c:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
     140:	c0 e0       	ldi	r28, 0x00	; 0
     142:	61 e0       	ldi	r22, 0x01	; 1
     144:	80 e0       	ldi	r24, 0x00	; 0
     146:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
     14a:	cf 5f       	subi	r28, 0xFF	; 255
     14c:	c0 38       	cpi	r28, 0x80	; 128
     14e:	c9 f7       	brne	.-14     	; 0x142 <OledClearn+0x20>
     150:	df 5f       	subi	r29, 0xFF	; 255
     152:	d8 3b       	cpi	r29, 0xB8	; 184
     154:	49 f7       	brne	.-46     	; 0x128 <OledClearn+0x6>
     156:	df 91       	pop	r29
     158:	cf 91       	pop	r28
	
	xianshi1(d0,y,x);
	xianshi1(d1,y,x+6+i);
	xianshi1(d2,y,x+(6+i)*2);
	xianshi1(d3,y,x+(6+i)*3);
	xianshi1(d4,y,x+(6+i)*4);
     15a:	08 95       	ret

0000015c <OledInit>:
     15c:	95 98       	cbi	0x12, 5	; 18
     15e:	95 9a       	sbi	0x12, 5	; 18
     160:	60 e0       	ldi	r22, 0x00	; 0
     162:	8e ea       	ldi	r24, 0xAE	; 174
     164:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
}
     168:	60 e0       	ldi	r22, 0x00	; 0
     16a:	85 ed       	ldi	r24, 0xD5	; 213
     16c:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
     170:	60 e0       	ldi	r22, 0x00	; 0
     172:	80 e8       	ldi	r24, 0x80	; 128
     174:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
     178:	60 e0       	ldi	r22, 0x00	; 0
     17a:	88 ea       	ldi	r24, 0xA8	; 168
     17c:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	OledWriteByte(SET_DISPLAY_CLOCK,OLED_CMD);
	OledWriteByte(0x80,OLED_CMD);
	
	/*设置驱动路数*/
	OledWriteByte(SET_MULTIPLEX_RATIO,OLED_CMD);			  //驱动路数设置命令
	OledWriteByte(0x3F,OLED_CMD);							  //驱动路数值
     180:	60 e0       	ldi	r22, 0x00	; 0
     182:	8f e3       	ldi	r24, 0x3F	; 63
     184:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>

	/*设置行显示偏移*/
	OledWriteByte(SET_DISPLAY_OFFSET,OLED_CMD);				  //显示偏移设置命令
     188:	60 e0       	ldi	r22, 0x00	; 0
     18a:	83 ed       	ldi	r24, 0xD3	; 211
     18c:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	OledWriteByte(0x00,OLED_CMD);							  //取值范围：0x00-->0x3F
     190:	60 e0       	ldi	r22, 0x00	; 0
     192:	80 e0       	ldi	r24, 0x00	; 0
     194:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>

	/*设置显示起始行*/
	OledWriteByte(0x40,OLED_CMD);							  //取值范围：0x40---0x7F
     198:	60 e0       	ldi	r22, 0x00	; 0
     19a:	80 e4       	ldi	r24, 0x40	; 64
     19c:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	
	/*设置电荷泵*/
	OledWriteByte(CHARGE_PUMP_SET,OLED_CMD); 				  //电荷泵设置命令
     1a0:	60 e0       	ldi	r22, 0x00	; 0
     1a2:	8d e8       	ldi	r24, 0x8D	; 141
     1a4:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	OledWriteByte(0x14,OLED_CMD);							  //开启电荷泵
     1a8:	60 e0       	ldi	r22, 0x00	; 0
     1aa:	84 e1       	ldi	r24, 0x14	; 20
     1ac:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>

	/*设置内存地址模式*/
	OledWriteByte(SET_MEMORY_ADDR_MODE,OLED_CMD);			  //内存地址模式设置命令
     1b0:	60 e0       	ldi	r22, 0x00	; 0
     1b2:	80 e2       	ldi	r24, 0x20	; 32
     1b4:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	OledWriteByte(0x10,OLED_CMD);							  //设置地址模式值：0x00,列地址模式；0x01,行地址模式；
     1b8:	60 e0       	ldi	r22, 0x00	; 0
     1ba:	80 e1       	ldi	r24, 0x10	; 16
     1bc:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	//0x10，页地址模式；
	/*设置列地址映射*/
	OledWriteByte(SET_SEGMENT_REMAP_A1,OLED_CMD); 			  //列地址0映射到SEG127
     1c0:	60 e0       	ldi	r22, 0x00	; 0
     1c2:	81 ea       	ldi	r24, 0xA1	; 161
     1c4:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>

	/*设置行地址映射*/
	OledWriteByte(SET_COM_SCAN_DIRECTION_C8,OLED_CMD); 		  //行地址0映射到COM63
     1c8:	60 e0       	ldi	r22, 0x00	; 0
     1ca:	88 ec       	ldi	r24, 0xC8	; 200
     1cc:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	
	/*设置COM硬件引脚配置*/
	OledWriteByte(SET_COM_PINS_CONFIG,OLED_CMD); 			  //设置COM硬件引脚配置命令
     1d0:	60 e0       	ldi	r22, 0x00	; 0
     1d2:	8a ed       	ldi	r24, 0xDA	; 218
     1d4:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	OledWriteByte(0x12,OLED_CMD);
     1d8:	60 e0       	ldi	r22, 0x00	; 0
     1da:	82 e1       	ldi	r24, 0x12	; 18
     1dc:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>

	/*对比度设置*/
	OledWriteByte(SET_CONTRAST_CONTROL,OLED_CMD); 			   //对比度设置命令
     1e0:	60 e0       	ldi	r22, 0x00	; 0
     1e2:	81 e8       	ldi	r24, 0x81	; 129
     1e4:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	OledWriteByte(0x8F,OLED_CMD); 							   //对比度值，取值范围1-255
     1e8:	60 e0       	ldi	r22, 0x00	; 0
     1ea:	8f e8       	ldi	r24, 0x8F	; 143
     1ec:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	
	/*设置预充电周期*/
	OledWriteByte(SET_PRECHARGE_PERIOD,OLED_CMD);
     1f0:	60 e0       	ldi	r22, 0x00	; 0
     1f2:	89 ed       	ldi	r24, 0xD9	; 217
     1f4:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	OledWriteByte(0xF1,OLED_CMD);
     1f8:	60 e0       	ldi	r22, 0x00	; 0
     1fa:	81 ef       	ldi	r24, 0xF1	; 241
     1fc:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	
	/*设置VCOMH电源倍率*/
	OledWriteByte(SET_VCOMH_DESELECT_L,OLED_CMD);
     200:	60 e0       	ldi	r22, 0x00	; 0
     202:	8b ed       	ldi	r24, 0xDB	; 219
     204:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	OledWriteByte(0x30,OLED_CMD);
     208:	60 e0       	ldi	r22, 0x00	; 0
     20a:	80 e3       	ldi	r24, 0x30	; 48
     20c:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>

	/*关闭全局显示*/
	OledWriteByte(ENTIRE_DISPLAY_ON_A4,OLED_CMD);
     210:	60 e0       	ldi	r22, 0x00	; 0
     212:	84 ea       	ldi	r24, 0xA4	; 164
     214:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>

	/*设置OLED点亮方式*/
	OledWriteByte(NORMAL_DISPLAY,OLED_CMD); 	 				//0：熄灭像素；1：点亮像素
     218:	60 e0       	ldi	r22, 0x00	; 0
     21a:	86 ea       	ldi	r24, 0xA6	; 166
     21c:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>

	/*打开OLED显示*/
	OledWriteByte(SET_DISPLAY_ON,OLED_CMD);
     220:	60 e0       	ldi	r22, 0x00	; 0
     222:	8f ea       	ldi	r24, 0xAF	; 175
     224:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	
	/*清屏操作*/
	OledClearn();
     228:	0e 94 91 00 	call	0x122	; 0x122 <OledClearn>
     22c:	08 95       	ret

0000022e <xianshi1>:
}
void xianshi1(char Digitchar ,char y,char x)
{uchar i,j,addyl,addyh;
     22e:	af 92       	push	r10
     230:	bf 92       	push	r11
     232:	cf 92       	push	r12
     234:	df 92       	push	r13
     236:	ef 92       	push	r14
     238:	ff 92       	push	r15
     23a:	0f 93       	push	r16
     23c:	1f 93       	push	r17
     23e:	cf 93       	push	r28
     240:	df 93       	push	r29
	uchar *databuf;
	

	databuf=(uchar *)(ASCII_1608+Digitchar+16);
     242:	20 e1       	ldi	r18, 0x10	; 16
     244:	82 9f       	mul	r24, r18
     246:	c0 01       	movw	r24, r0
     248:	11 24       	eor	r1, r1
     24a:	9c 01       	movw	r18, r24
     24c:	22 59       	subi	r18, 0x92	; 146
     24e:	3e 4f       	sbci	r19, 0xFE	; 254
     250:	79 01       	movw	r14, r18
	
	/*计算当前字符显示的起始列地址*/
	addyl=x%16;										//计算列低地址
     252:	34 2f       	mov	r19, r20
     254:	3f 70       	andi	r19, 0x0F	; 15
     256:	a3 2e       	mov	r10, r19
	addyh=x/16+0x10;								//计算列高地址
     258:	42 95       	swap	r20
     25a:	4f 70       	andi	r20, 0x0F	; 15
     25c:	68 94       	set
     25e:	bb 24       	eor	r11, r11
     260:	b4 f8       	bld	r11, 4
     262:	b4 0e       	add	r11, r20
     264:	0f 2e       	mov	r0, r31
     266:	f0 eb       	ldi	r31, 0xB0	; 176
     268:	df 2e       	mov	r13, r31
     26a:	f0 2d       	mov	r31, r0
     26c:	d6 0e       	add	r13, r22
     26e:	0f 2e       	mov	r0, r31
     270:	f2 eb       	ldi	r31, 0xB2	; 178
     272:	cf 2e       	mov	r12, r31
     274:	f0 2d       	mov	r31, r0
     276:	c6 0e       	add	r12, r22

	/*显示字符*/
	for(i=0;i<2;i++)
	{
		OledWriteByte(0xb0+y+i,OLED_CMD);			//设置页地址
     278:	60 e0       	ldi	r22, 0x00	; 0
     27a:	8d 2d       	mov	r24, r13
     27c:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
		OledWriteByte(addyl,OLED_CMD);				//设置列低地址
     280:	60 e0       	ldi	r22, 0x00	; 0
     282:	8a 2d       	mov	r24, r10
     284:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
		OledWriteByte(addyh,OLED_CMD);				//设置列高地址
     288:	60 e0       	ldi	r22, 0x00	; 0
     28a:	8b 2d       	mov	r24, r11
     28c:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
     290:	e7 01       	movw	r28, r14
     292:	87 01       	movw	r16, r14
     294:	08 5f       	subi	r16, 0xF8	; 248
     296:	1f 4f       	sbci	r17, 0xFF	; 255

		for(j=0;j<8;j++)
		{
			OledWriteByte(*(databuf++),OLED_DATA);
     298:	61 e0       	ldi	r22, 0x01	; 1
     29a:	89 91       	ld	r24, Y+
     29c:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	{
		OledWriteByte(0xb0+y+i,OLED_CMD);			//设置页地址
		OledWriteByte(addyl,OLED_CMD);				//设置列低地址
		OledWriteByte(addyh,OLED_CMD);				//设置列高地址

		for(j=0;j<8;j++)
     2a0:	c0 17       	cp	r28, r16
     2a2:	d1 07       	cpc	r29, r17
     2a4:	c9 f7       	brne	.-14     	; 0x298 <xianshi1+0x6a>
     2a6:	88 e0       	ldi	r24, 0x08	; 8
     2a8:	e8 0e       	add	r14, r24
     2aa:	f1 1c       	adc	r15, r1
     2ac:	d3 94       	inc	r13
	/*计算当前字符显示的起始列地址*/
	addyl=x%16;										//计算列低地址
	addyh=x/16+0x10;								//计算列高地址

	/*显示字符*/
	for(i=0;i<2;i++)
     2ae:	dc 10       	cpse	r13, r12
     2b0:	e3 cf       	rjmp	.-58     	; 0x278 <xianshi1+0x4a>
		}
	}


	
}
     2b2:	df 91       	pop	r29
     2b4:	cf 91       	pop	r28
     2b6:	1f 91       	pop	r17
     2b8:	0f 91       	pop	r16
     2ba:	ff 90       	pop	r15
     2bc:	ef 90       	pop	r14
     2be:	df 90       	pop	r13
     2c0:	cf 90       	pop	r12
     2c2:	bf 90       	pop	r11
     2c4:	af 90       	pop	r10
     2c6:	08 95       	ret

000002c8 <Cache_MDigit5_int>:
	xianshi1(d2,y,x+(6+i)*2);
	xianshi1(d3,y,x+(6+i)*3);
	xianshi1(d4,y,x+(6+i)*4);
}
void Cache_MDigit5_int(int Digit,char y,char x,char i )//5位数 y0-7 x0-127
{int d0,d1,d2,d3,d4;
     2c8:	6f 92       	push	r6
     2ca:	7f 92       	push	r7
     2cc:	8f 92       	push	r8
     2ce:	9f 92       	push	r9
     2d0:	af 92       	push	r10
     2d2:	bf 92       	push	r11
     2d4:	cf 92       	push	r12
     2d6:	df 92       	push	r13
     2d8:	ef 92       	push	r14
     2da:	ff 92       	push	r15
     2dc:	0f 93       	push	r16
     2de:	1f 93       	push	r17
     2e0:	cf 93       	push	r28
     2e2:	df 93       	push	r29
     2e4:	8c 01       	movw	r16, r24
     2e6:	76 2e       	mov	r7, r22
     2e8:	64 2e       	mov	r6, r20
     2ea:	c2 2f       	mov	r28, r18
if (Digit<0)
     2ec:	99 23       	and	r25, r25
     2ee:	3c f4       	brge	.+14     	; 0x2fe <Cache_MDigit5_int+0x36>
{xianshi1(-3,y,x);
     2f0:	8d ef       	ldi	r24, 0xFD	; 253
     2f2:	0e 94 17 01 	call	0x22e	; 0x22e <xianshi1>
	Digit=-Digit;
     2f6:	11 95       	neg	r17
     2f8:	01 95       	neg	r16
     2fa:	11 09       	sbc	r17, r1
     2fc:	03 c0       	rjmp	.+6      	; 0x304 <Cache_MDigit5_int+0x3c>
}
else{xianshi1(-5,y,x);}
     2fe:	8b ef       	ldi	r24, 0xFB	; 251
     300:	0e 94 17 01 	call	0x22e	; 0x22e <xianshi1>
	d0=Digit/10000;
     304:	c8 01       	movw	r24, r16
     306:	60 e1       	ldi	r22, 0x10	; 16
     308:	77 e2       	ldi	r23, 0x27	; 39
     30a:	0e 94 35 13 	call	0x266a	; 0x266a <__divmodhi4>
     30e:	fb 01       	movw	r30, r22
	Digit=Digit-d0*10000;
     310:	80 ef       	ldi	r24, 0xF0	; 240
     312:	98 ed       	ldi	r25, 0xD8	; 216
     314:	68 9f       	mul	r22, r24
     316:	40 01       	movw	r8, r0
     318:	69 9f       	mul	r22, r25
     31a:	90 0c       	add	r9, r0
     31c:	78 9f       	mul	r23, r24
     31e:	90 0c       	add	r9, r0
     320:	11 24       	eor	r1, r1
     322:	08 0d       	add	r16, r8
     324:	19 1d       	adc	r17, r9
	d1=Digit/1000;
     326:	c8 01       	movw	r24, r16
     328:	68 ee       	ldi	r22, 0xE8	; 232
     32a:	73 e0       	ldi	r23, 0x03	; 3
     32c:	0e 94 35 13 	call	0x266a	; 0x266a <__divmodhi4>
     330:	6b 01       	movw	r12, r22
	Digit=Digit-d1*1000;
     332:	88 e1       	ldi	r24, 0x18	; 24
     334:	9c ef       	ldi	r25, 0xFC	; 252
     336:	68 9f       	mul	r22, r24
     338:	40 01       	movw	r8, r0
     33a:	69 9f       	mul	r22, r25
     33c:	90 0c       	add	r9, r0
     33e:	78 9f       	mul	r23, r24
     340:	90 0c       	add	r9, r0
     342:	11 24       	eor	r1, r1
     344:	08 0d       	add	r16, r8
     346:	19 1d       	adc	r17, r9
	d2=Digit/100;
     348:	c8 01       	movw	r24, r16
     34a:	64 e6       	ldi	r22, 0x64	; 100
     34c:	70 e0       	ldi	r23, 0x00	; 0
     34e:	0e 94 35 13 	call	0x266a	; 0x266a <__divmodhi4>
     352:	7b 01       	movw	r14, r22
	Digit=Digit-d2*100;
     354:	2c e9       	ldi	r18, 0x9C	; 156
     356:	26 03       	mulsu	r18, r22
     358:	40 01       	movw	r8, r0
     35a:	27 9f       	mul	r18, r23
     35c:	90 0c       	add	r9, r0
     35e:	11 24       	eor	r1, r1
     360:	80 0e       	add	r8, r16
     362:	91 1e       	adc	r9, r17
	d3=Digit/10;
     364:	0f 2e       	mov	r0, r31
     366:	fa e0       	ldi	r31, 0x0A	; 10
     368:	af 2e       	mov	r10, r31
     36a:	b1 2c       	mov	r11, r1
     36c:	f0 2d       	mov	r31, r0
     36e:	c4 01       	movw	r24, r8
     370:	b5 01       	movw	r22, r10
     372:	0e 94 35 13 	call	0x266a	; 0x266a <__divmodhi4>
     376:	8b 01       	movw	r16, r22
	Digit=Digit-d3*10;
	d4=Digit%10;
	
	xianshi1(d0,y,x+6+i);
     378:	46 e0       	ldi	r20, 0x06	; 6
     37a:	4c 0f       	add	r20, r28
     37c:	46 0d       	add	r20, r6
     37e:	67 2d       	mov	r22, r7
     380:	8e 2f       	mov	r24, r30
     382:	0e 94 17 01 	call	0x22e	; 0x22e <xianshi1>
	xianshi1(d1,y,x+(6+i)*2);
     386:	d0 e0       	ldi	r29, 0x00	; 0
     388:	26 96       	adiw	r28, 0x06	; 6
     38a:	8c 2f       	mov	r24, r28
     38c:	88 0f       	add	r24, r24
     38e:	68 0e       	add	r6, r24
     390:	46 2d       	mov	r20, r6
     392:	67 2d       	mov	r22, r7
     394:	8c 2d       	mov	r24, r12
     396:	0e 94 17 01 	call	0x22e	; 0x22e <xianshi1>
	xianshi1(d2,y,x+(6+i)*3);
     39a:	6c 0e       	add	r6, r28
     39c:	46 2d       	mov	r20, r6
     39e:	67 2d       	mov	r22, r7
     3a0:	8e 2d       	mov	r24, r14
     3a2:	0e 94 17 01 	call	0x22e	; 0x22e <xianshi1>
	xianshi1(d3,y,x+(6+i)*4);
     3a6:	6c 0e       	add	r6, r28
     3a8:	46 2d       	mov	r20, r6
     3aa:	67 2d       	mov	r22, r7
     3ac:	80 2f       	mov	r24, r16
     3ae:	0e 94 17 01 	call	0x22e	; 0x22e <xianshi1>
	xianshi1(d4,y,x+(6+i)*5);
     3b2:	4c 2f       	mov	r20, r28
     3b4:	46 0d       	add	r20, r6
	d1=Digit/1000;
	Digit=Digit-d1*1000;
	d2=Digit/100;
	Digit=Digit-d2*100;
	d3=Digit/10;
	Digit=Digit-d3*10;
     3b6:	26 ef       	ldi	r18, 0xF6	; 246
     3b8:	20 03       	mulsu	r18, r16
     3ba:	c0 01       	movw	r24, r0
     3bc:	21 9f       	mul	r18, r17
     3be:	90 0d       	add	r25, r0
     3c0:	11 24       	eor	r1, r1
     3c2:	88 0d       	add	r24, r8
     3c4:	99 1d       	adc	r25, r9
	d4=Digit%10;
     3c6:	b5 01       	movw	r22, r10
     3c8:	0e 94 35 13 	call	0x266a	; 0x266a <__divmodhi4>
	
	xianshi1(d0,y,x+6+i);
	xianshi1(d1,y,x+(6+i)*2);
	xianshi1(d2,y,x+(6+i)*3);
	xianshi1(d3,y,x+(6+i)*4);
	xianshi1(d4,y,x+(6+i)*5);
     3cc:	67 2d       	mov	r22, r7
     3ce:	0e 94 17 01 	call	0x22e	; 0x22e <xianshi1>
     3d2:	df 91       	pop	r29
     3d4:	cf 91       	pop	r28
     3d6:	1f 91       	pop	r17
     3d8:	0f 91       	pop	r16
     3da:	ff 90       	pop	r15
     3dc:	ef 90       	pop	r14
     3de:	df 90       	pop	r13
     3e0:	cf 90       	pop	r12
     3e2:	bf 90       	pop	r11
     3e4:	af 90       	pop	r10
     3e6:	9f 90       	pop	r9
     3e8:	8f 90       	pop	r8
     3ea:	7f 90       	pop	r7
     3ec:	6f 90       	pop	r6
     3ee:	08 95       	ret

000003f0 <SPI_write_9250>:

float AK8963_ASA[3];
int AK8963_offset[3]={30,-220,105};
void SPI_write_9250(unsigned char addr, unsigned char data)
{
	SS_L;
     3f0:	c0 98       	cbi	0x18, 0	; 24
	/* 启动数据传输 */
	SPDR = addr;
     3f2:	8f b9       	out	0x0f, r24	; 15
	/* 等待传输结束 */
	while(!(SPSR & (1<<SPIF)));
     3f4:	77 9b       	sbis	0x0e, 7	; 14
     3f6:	fe cf       	rjmp	.-4      	; 0x3f4 <SPI_write_9250+0x4>
	SPDR = data;
     3f8:	6f b9       	out	0x0f, r22	; 15
	/* 等待传输结束 */
	while(!(SPSR & (1<<SPIF)));
     3fa:	77 9b       	sbis	0x0e, 7	; 14
     3fc:	fe cf       	rjmp	.-4      	; 0x3fa <SPI_write_9250+0xa>
	SS_H;
     3fe:	c0 9a       	sbi	0x18, 0	; 24
     400:	08 95       	ret

00000402 <SPI_read_9250>:
}

uchar SPI_read_9250(unsigned char addr)
{  uchar readData=0;
	addr|=0x80;
     402:	80 68       	ori	r24, 0x80	; 128
	SS_L;
     404:	c0 98       	cbi	0x18, 0	; 24
	/* 启动数据传输 */
	SPDR = addr;
     406:	8f b9       	out	0x0f, r24	; 15
	/* 等待传输结束 */
	while(!(SPSR & (1<<SPIF)));
     408:	77 9b       	sbis	0x0e, 7	; 14
     40a:	fe cf       	rjmp	.-4      	; 0x408 <SPI_read_9250+0x6>
	
	SPDR = 0x00;
     40c:	1f b8       	out	0x0f, r1	; 15
	while(!(SPSR & (1<<SPIF)));
     40e:	77 9b       	sbis	0x0e, 7	; 14
     410:	fe cf       	rjmp	.-4      	; 0x40e <SPI_read_9250+0xc>
	/* 读返回数据 */
	readData=SPDR;
     412:	8f b1       	in	r24, 0x0f	; 15
	SS_H;
     414:	c0 9a       	sbi	0x18, 0	; 24
	
	return readData;//返回数据一定要写在最后
	
}
     416:	08 95       	ret

00000418 <SPI_MasterInit>:
	
	//DDRB = 0xb0;
	//PORTB=0xff;
	/* 使能SPI 主机模式，设置时钟速率为fck/8 */
	
	SPCR = 0X51;
     418:	81 e5       	ldi	r24, 0x51	; 81
     41a:	8d b9       	out	0x0d, r24	; 13
	SPSR=0X00;
     41c:	1e b8       	out	0x0e, r1	; 14
     41e:	08 95       	ret

00000420 <MPU9250_Mag_Write>:
   
	
}

void MPU9250_Mag_Write( uchar writeAddr, uchar writeData )
{
     420:	cf 93       	push	r28
     422:	df 93       	push	r29
     424:	d8 2f       	mov	r29, r24
     426:	c6 2f       	mov	r28, r22
	uchar  status = 0;
	

	SPI_write_9250(MPU9250_I2C_SLV4_ADDR, AK8963_I2C_ADDR);
     428:	6c e0       	ldi	r22, 0x0C	; 12
     42a:	81 e3       	ldi	r24, 0x31	; 49
     42c:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	SPI_write_9250(MPU9250_I2C_SLV4_REG, writeAddr);
     430:	6d 2f       	mov	r22, r29
     432:	82 e3       	ldi	r24, 0x32	; 50
     434:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	SPI_write_9250(MPU9250_I2C_SLV4_DO, writeData);
     438:	6c 2f       	mov	r22, r28
     43a:	83 e3       	ldi	r24, 0x33	; 51
     43c:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	SPI_write_9250(MPU9250_I2C_SLV4_CTRL, MPU9250_I2C_SLVx_EN);
     440:	60 e8       	ldi	r22, 0x80	; 128
     442:	84 e3       	ldi	r24, 0x34	; 52
     444:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>

	do {
		status = SPI_read_9250(MPU9250_I2C_MST_STATUS);
     448:	86 e3       	ldi	r24, 0x36	; 54
     44a:	0e 94 01 02 	call	0x402	; 0x402 <SPI_read_9250>
	   } while(((status & MPU9250_I2C_SLV4_DONE) == 0) );
     44e:	86 ff       	sbrs	r24, 6
     450:	fb cf       	rjmp	.-10     	; 0x448 <MPU9250_Mag_Write+0x28>
}
     452:	df 91       	pop	r29
     454:	cf 91       	pop	r28
     456:	08 95       	ret

00000458 <MPU9250_Mag_Read>:

uchar MPU9250_Mag_Read( uchar readAddr )
{
     458:	cf 93       	push	r28
     45a:	c8 2f       	mov	r28, r24
	uchar  status = 0;
	uchar readDate=0;
	
	SPI_write_9250(MPU9250_I2C_SLV4_ADDR,AK8963_I2C_ADDR | 0x80);
     45c:	6c e8       	ldi	r22, 0x8C	; 140
     45e:	81 e3       	ldi	r24, 0x31	; 49
     460:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	SPI_write_9250(MPU9250_I2C_SLV4_REG,readAddr);
     464:	6c 2f       	mov	r22, r28
     466:	82 e3       	ldi	r24, 0x32	; 50
     468:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	SPI_write_9250(MPU9250_I2C_SLV4_CTRL,MPU9250_I2C_SLVx_EN);
     46c:	60 e8       	ldi	r22, 0x80	; 128
     46e:	84 e3       	ldi	r24, 0x34	; 52
     470:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>

	do {
		status = SPI_read_9250(MPU9250_I2C_MST_STATUS);	
     474:	86 e3       	ldi	r24, 0x36	; 54
     476:	0e 94 01 02 	call	0x402	; 0x402 <SPI_read_9250>
	   } while(((status & MPU9250_I2C_SLV4_DONE) == 0) );
     47a:	86 ff       	sbrs	r24, 6
     47c:	fb cf       	rjmp	.-10     	; 0x474 <MPU9250_Mag_Read+0x1c>
	
	readDate= SPI_read_9250(MPU9250_I2C_SLV4_DI);
     47e:	85 e3       	ldi	r24, 0x35	; 53
     480:	0e 94 01 02 	call	0x402	; 0x402 <SPI_read_9250>
	return readDate;
}
     484:	cf 91       	pop	r28
     486:	08 95       	ret

00000488 <MPU9250_Init>:
	SPCR = 0X51;
	SPSR=0X00;
}

void MPU9250_Init(void)
{  
     488:	ff 92       	push	r15
     48a:	0f 93       	push	r16
     48c:	1f 93       	push	r17
     48e:	cf 93       	push	r28
     490:	df 93       	push	r29
// 	 SPI_write_9250(MPU9250_ACCEL_CONFIG_2 ,0x00);//加速度计低通滤波关闭 
// 	 SPI_write_9250(MPU9250_INT_PIN_CFG    ,0x30);//开启中断 高电平 推举式 一直保持 读取清零
// 	 SPI_write_9250(MPU9250_I2C_MST_CTRL  ,0x40);// I2C Speed 
// 	 SPI_write_9250(MPU9250_USER_CTRL      ,0x20);// Enable AUX

 SPI_write_9250(MPU9250_PWR_MGMT_1     ,0x80);// [0]  Reset Device
     492:	60 e8       	ldi	r22, 0x80	; 128
     494:	8b e6       	ldi	r24, 0x6B	; 107
     496:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
 SPI_write_9250(MPU9250_PWR_MGMT_1     ,0x04);// [1]  Clock Source
     49a:	64 e0       	ldi	r22, 0x04	; 4
     49c:	8b e6       	ldi	r24, 0x6B	; 107
     49e:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
 SPI_write_9250(MPU9250_INT_PIN_CFG    ,0x10);// [2]  Set INT_ANYRD_2CLEAR
     4a2:	60 e1       	ldi	r22, 0x10	; 16
     4a4:	87 e3       	ldi	r24, 0x37	; 55
     4a6:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
 SPI_write_9250(MPU9250_INT_ENABLE     ,0x01);// [3]  Set RAW_RDY_EN
     4aa:	61 e0       	ldi	r22, 0x01	; 1
     4ac:	88 e3       	ldi	r24, 0x38	; 56
     4ae:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
 SPI_write_9250(MPU9250_PWR_MGMT_2     ,0x00);// [4]  Enable Acc & Gyro
     4b2:	60 e0       	ldi	r22, 0x00	; 0
     4b4:	8c e6       	ldi	r24, 0x6C	; 108
     4b6:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
 SPI_write_9250(MPU9250_SMPLRT_DIV     ,0x00);// [5]  Sample Rate Divider
     4ba:	60 e0       	ldi	r22, 0x00	; 0
     4bc:	89 e1       	ldi	r24, 0x19	; 25
     4be:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
 SPI_write_9250(MPU9250_GYRO_CONFIG    ,0x18);// [6]  default : +-2000dps
     4c2:	68 e1       	ldi	r22, 0x18	; 24
     4c4:	8b e1       	ldi	r24, 0x1B	; 27
     4c6:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
 SPI_write_9250(MPU9250_ACCEL_CONFIG   ,0x08);// [7]  default : +-4G
     4ca:	68 e0       	ldi	r22, 0x08	; 8
     4cc:	8c e1       	ldi	r24, 0x1C	; 28
     4ce:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
 SPI_write_9250(MPU9250_CONFIG         ,0x01);// [8]  default : LPS_184Hz
     4d2:	61 e0       	ldi	r22, 0x01	; 1
     4d4:	8a e1       	ldi	r24, 0x1A	; 26
     4d6:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
 SPI_write_9250(MPU9250_ACCEL_CONFIG_2 ,0x03);// [9]  default : LPS_41Hz
     4da:	63 e0       	ldi	r22, 0x03	; 3
     4dc:	8d e1       	ldi	r24, 0x1D	; 29
     4de:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
 //SPI_write_9250(MPU9250_I2C_MST_CTRL ,0x40);// I2C Speed
 SPI_write_9250(MPU9250_USER_CTRL      ,0x30);// [10] Set I2C_MST_EN, I2C_IF_DIS
     4e2:	60 e3       	ldi	r22, 0x30	; 48
     4e4:	8a e6       	ldi	r24, 0x6A	; 106
     4e6:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>

   MPU9250_Mag_Write(AK8963_CNTL2,0x01);//磁力计复位 
     4ea:	61 e0       	ldi	r22, 0x01	; 1
     4ec:	8b e0       	ldi	r24, 0x0B	; 11
     4ee:	0e 94 10 02 	call	0x420	; 0x420 <MPU9250_Mag_Write>
   MPU9250_Mag_Write(AK8963_CNTL1, 0x10);       // Power-down mode
     4f2:	60 e1       	ldi	r22, 0x10	; 16
     4f4:	8a e0       	ldi	r24, 0x0A	; 10
     4f6:	0e 94 10 02 	call	0x420	; 0x420 <MPU9250_Mag_Write>
   
   MPU9250_Mag_Write(AK8963_CNTL1, 0x1F);   // Fuse ROM access mode
     4fa:	6f e1       	ldi	r22, 0x1F	; 31
     4fc:	8a e0       	ldi	r24, 0x0A	; 10
     4fe:	0e 94 10 02 	call	0x420	; 0x420 <MPU9250_Mag_Write>
   
   AK8963_ASA[0]= MPU9250_Mag_Read(0x10);  // 读取磁传感器灵敏度的调整值
     502:	80 e1       	ldi	r24, 0x10	; 16
     504:	0e 94 2c 02 	call	0x458	; 0x458 <MPU9250_Mag_Read>
     508:	0c eb       	ldi	r16, 0xBC	; 188
     50a:	16 e0       	ldi	r17, 0x06	; 6
     50c:	68 2f       	mov	r22, r24
     50e:	70 e0       	ldi	r23, 0x00	; 0
     510:	80 e0       	ldi	r24, 0x00	; 0
     512:	90 e0       	ldi	r25, 0x00	; 0
     514:	0e 94 92 11 	call	0x2324	; 0x2324 <__floatunsisf>
     518:	f8 01       	movw	r30, r16
     51a:	60 83       	st	Z, r22
     51c:	71 83       	std	Z+1, r23	; 0x01
     51e:	82 83       	std	Z+2, r24	; 0x02
     520:	93 83       	std	Z+3, r25	; 0x03
   AK8963_ASA[1]= MPU9250_Mag_Read(0x11);
     522:	81 e1       	ldi	r24, 0x11	; 17
     524:	0e 94 2c 02 	call	0x458	; 0x458 <MPU9250_Mag_Read>
     528:	c0 ec       	ldi	r28, 0xC0	; 192
     52a:	d6 e0       	ldi	r29, 0x06	; 6
     52c:	68 2f       	mov	r22, r24
     52e:	70 e0       	ldi	r23, 0x00	; 0
     530:	80 e0       	ldi	r24, 0x00	; 0
     532:	90 e0       	ldi	r25, 0x00	; 0
     534:	0e 94 92 11 	call	0x2324	; 0x2324 <__floatunsisf>
     538:	68 83       	st	Y, r22
     53a:	79 83       	std	Y+1, r23	; 0x01
     53c:	8a 83       	std	Y+2, r24	; 0x02
     53e:	9b 83       	std	Y+3, r25	; 0x03
   AK8963_ASA[2]= MPU9250_Mag_Read(0x12);
     540:	82 e1       	ldi	r24, 0x12	; 18
     542:	0e 94 2c 02 	call	0x458	; 0x458 <MPU9250_Mag_Read>
     546:	f8 2e       	mov	r15, r24
   
   AK8963_ASA[0]=((AK8963_ASA[0]-128)/256)+1; //计算灵敏度调整值
     548:	20 e0       	ldi	r18, 0x00	; 0
     54a:	30 e0       	ldi	r19, 0x00	; 0
     54c:	40 e0       	ldi	r20, 0x00	; 0
     54e:	53 e4       	ldi	r21, 0x43	; 67
     550:	f8 01       	movw	r30, r16
     552:	60 81       	ld	r22, Z
     554:	71 81       	ldd	r23, Z+1	; 0x01
     556:	82 81       	ldd	r24, Z+2	; 0x02
     558:	93 81       	ldd	r25, Z+3	; 0x03
     55a:	0e 94 1b 10 	call	0x2036	; 0x2036 <__subsf3>
     55e:	20 e0       	ldi	r18, 0x00	; 0
     560:	30 e0       	ldi	r19, 0x00	; 0
     562:	40 e8       	ldi	r20, 0x80	; 128
     564:	5b e3       	ldi	r21, 0x3B	; 59
     566:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     56a:	20 e0       	ldi	r18, 0x00	; 0
     56c:	30 e0       	ldi	r19, 0x00	; 0
     56e:	40 e8       	ldi	r20, 0x80	; 128
     570:	5f e3       	ldi	r21, 0x3F	; 63
     572:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     576:	f8 01       	movw	r30, r16
     578:	60 83       	st	Z, r22
     57a:	71 83       	std	Z+1, r23	; 0x01
     57c:	82 83       	std	Z+2, r24	; 0x02
     57e:	93 83       	std	Z+3, r25	; 0x03
   AK8963_ASA[1]=((AK8963_ASA[1]-128)/256)+1;
     580:	20 e0       	ldi	r18, 0x00	; 0
     582:	30 e0       	ldi	r19, 0x00	; 0
     584:	40 e0       	ldi	r20, 0x00	; 0
     586:	53 e4       	ldi	r21, 0x43	; 67
     588:	68 81       	ld	r22, Y
     58a:	79 81       	ldd	r23, Y+1	; 0x01
     58c:	8a 81       	ldd	r24, Y+2	; 0x02
     58e:	9b 81       	ldd	r25, Y+3	; 0x03
     590:	0e 94 1b 10 	call	0x2036	; 0x2036 <__subsf3>
     594:	20 e0       	ldi	r18, 0x00	; 0
     596:	30 e0       	ldi	r19, 0x00	; 0
     598:	40 e8       	ldi	r20, 0x80	; 128
     59a:	5b e3       	ldi	r21, 0x3B	; 59
     59c:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     5a0:	20 e0       	ldi	r18, 0x00	; 0
     5a2:	30 e0       	ldi	r19, 0x00	; 0
     5a4:	40 e8       	ldi	r20, 0x80	; 128
     5a6:	5f e3       	ldi	r21, 0x3F	; 63
     5a8:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     5ac:	68 83       	st	Y, r22
     5ae:	79 83       	std	Y+1, r23	; 0x01
     5b0:	8a 83       	std	Y+2, r24	; 0x02
     5b2:	9b 83       	std	Y+3, r25	; 0x03
   
   MPU9250_Mag_Write(AK8963_CNTL1, 0x1F);   // Fuse ROM access mode
   
   AK8963_ASA[0]= MPU9250_Mag_Read(0x10);  // 读取磁传感器灵敏度的调整值
   AK8963_ASA[1]= MPU9250_Mag_Read(0x11);
   AK8963_ASA[2]= MPU9250_Mag_Read(0x12);
     5b4:	6f 2d       	mov	r22, r15
     5b6:	70 e0       	ldi	r23, 0x00	; 0
     5b8:	80 e0       	ldi	r24, 0x00	; 0
     5ba:	90 e0       	ldi	r25, 0x00	; 0
     5bc:	0e 94 92 11 	call	0x2324	; 0x2324 <__floatunsisf>
   
   AK8963_ASA[0]=((AK8963_ASA[0]-128)/256)+1; //计算灵敏度调整值
   AK8963_ASA[1]=((AK8963_ASA[1]-128)/256)+1;
   AK8963_ASA[2]=((AK8963_ASA[2]-128)/256)+1; 
     5c0:	20 e0       	ldi	r18, 0x00	; 0
     5c2:	30 e0       	ldi	r19, 0x00	; 0
     5c4:	40 e0       	ldi	r20, 0x00	; 0
     5c6:	53 e4       	ldi	r21, 0x43	; 67
     5c8:	0e 94 1b 10 	call	0x2036	; 0x2036 <__subsf3>
     5cc:	20 e0       	ldi	r18, 0x00	; 0
     5ce:	30 e0       	ldi	r19, 0x00	; 0
     5d0:	40 e8       	ldi	r20, 0x80	; 128
     5d2:	5b e3       	ldi	r21, 0x3B	; 59
     5d4:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     5d8:	20 e0       	ldi	r18, 0x00	; 0
     5da:	30 e0       	ldi	r19, 0x00	; 0
     5dc:	40 e8       	ldi	r20, 0x80	; 128
     5de:	5f e3       	ldi	r21, 0x3F	; 63
     5e0:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     5e4:	60 93 c4 06 	sts	0x06C4, r22
     5e8:	70 93 c5 06 	sts	0x06C5, r23
     5ec:	80 93 c6 06 	sts	0x06C6, r24
     5f0:	90 93 c7 06 	sts	0x06C7, r25
   
   
   MPU9250_Mag_Write(AK8963_CNTL1, 0x10);       // Power-down mode 
     5f4:	60 e1       	ldi	r22, 0x10	; 16
     5f6:	8a e0       	ldi	r24, 0x0A	; 10
     5f8:	0e 94 10 02 	call	0x420	; 0x420 <MPU9250_Mag_Write>
   
   SPI_write_9250(MPU9250_I2C_MST_CTRL, 0x5D);
     5fc:	6d e5       	ldi	r22, 0x5D	; 93
     5fe:	84 e2       	ldi	r24, 0x24	; 36
     600:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
   SPI_write_9250(MPU9250_I2C_SLV0_ADDR, AK8963_I2C_ADDR | 0x80); //设置辅助iic读取 器件地址
     604:	6c e8       	ldi	r22, 0x8C	; 140
     606:	85 e2       	ldi	r24, 0x25	; 37
     608:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
   SPI_write_9250(MPU9250_I2C_SLV0_REG, AK8963_ST1);        //开始读的地址  
     60c:	62 e0       	ldi	r22, 0x02	; 2
     60e:	86 e2       	ldi	r24, 0x26	; 38
     610:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
   SPI_write_9250(MPU9250_I2C_SLV0_CTRL, MPU9250_I2C_SLVx_EN | 8); 
     614:	68 e8       	ldi	r22, 0x88	; 136
     616:	87 e2       	ldi	r24, 0x27	; 39
     618:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
  
   MPU9250_Mag_Write(AK8963_CNTL1, 0x16);       // Continuous measurement mode 2
     61c:	66 e1       	ldi	r22, 0x16	; 22
     61e:	8a e0       	ldi	r24, 0x0A	; 10
     620:	0e 94 10 02 	call	0x420	; 0x420 <MPU9250_Mag_Write>
   
   SPI_write_9250(MPU9250_I2C_SLV4_CTRL, 0x09);  //往后连续读的位数 一共读 9+1
     624:	69 e0       	ldi	r22, 0x09	; 9
     626:	84 e3       	ldi	r24, 0x34	; 52
     628:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
   
   SPI_write_9250(MPU9250_I2C_MST_DELAY_CTRL, 0x81);
     62c:	61 e8       	ldi	r22, 0x81	; 129
     62e:	87 e6       	ldi	r24, 0x67	; 103
     630:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
   
	
}
     634:	df 91       	pop	r29
     636:	cf 91       	pop	r28
     638:	1f 91       	pop	r17
     63a:	0f 91       	pop	r16
     63c:	ff 90       	pop	r15
     63e:	08 95       	ret

00000640 <MPU9250_Read>:
	return readDate;
}
void MPU9250_Read( uchar readAddr, int *readData, uchar lens )
{
			
		readAddr|=0x80;
     640:	80 68       	ori	r24, 0x80	; 128
		
		SS_L;
     642:	c0 98       	cbi	0x18, 0	; 24
		/* 启动数据传输 */
		SPDR =readAddr;
     644:	8f b9       	out	0x0f, r24	; 15
		/* 等待传输结束 */
		while(!(SPSR & (1<<SPIF)));
     646:	77 9b       	sbis	0x0e, 7	; 14
     648:	fe cf       	rjmp	.-4      	; 0x646 <MPU9250_Read+0x6>
		
		for(uchar i = 0; i < lens; i++)
     64a:	44 23       	and	r20, r20
     64c:	69 f0       	breq	.+26     	; 0x668 <MPU9250_Read+0x28>
     64e:	e6 2f       	mov	r30, r22
     650:	f7 2f       	mov	r31, r23
     652:	20 e0       	ldi	r18, 0x00	; 0
		{
		SPDR = 0x00;
     654:	1f b8       	out	0x0f, r1	; 15
		while(!(SPSR & (1<<SPIF)));	
     656:	77 9b       	sbis	0x0e, 7	; 14
     658:	fe cf       	rjmp	.-4      	; 0x656 <MPU9250_Read+0x16>
		
		readData[i] = SPDR;
     65a:	8f b1       	in	r24, 0x0f	; 15
     65c:	90 e0       	ldi	r25, 0x00	; 0
     65e:	81 93       	st	Z+, r24
     660:	91 93       	st	Z+, r25
		/* 启动数据传输 */
		SPDR =readAddr;
		/* 等待传输结束 */
		while(!(SPSR & (1<<SPIF)));
		
		for(uchar i = 0; i < lens; i++)
     662:	2f 5f       	subi	r18, 0xFF	; 255
     664:	24 13       	cpse	r18, r20
     666:	f6 cf       	rjmp	.-20     	; 0x654 <MPU9250_Read+0x14>
		
		readData[i] = SPDR;
		
		}
		
		SS_H;
     668:	c0 9a       	sbi	0x18, 0	; 24
     66a:	08 95       	ret

0000066c <MPU9250_getData>:
}

void MPU9250_getData( int16_t *dataIMU )
{
     66c:	cf 92       	push	r12
     66e:	df 92       	push	r13
     670:	ef 92       	push	r14
     672:	ff 92       	push	r15
     674:	0f 93       	push	r16
     676:	1f 93       	push	r17
     678:	cf 93       	push	r28
     67a:	df 93       	push	r29
     67c:	cd b7       	in	r28, 0x3d	; 61
     67e:	de b7       	in	r29, 0x3e	; 62
     680:	ac 97       	sbiw	r28, 0x2c	; 44
     682:	0f b6       	in	r0, 0x3f	; 63
     684:	f8 94       	cli
     686:	de bf       	out	0x3e, r29	; 62
     688:	0f be       	out	0x3f, r0	; 63
     68a:	cd bf       	out	0x3d, r28	; 61
     68c:	8c 01       	movw	r16, r24
	int tmpRead[22] = {0};
     68e:	be 01       	movw	r22, r28
     690:	6f 5f       	subi	r22, 0xFF	; 255
     692:	7f 4f       	sbci	r23, 0xFF	; 255
     694:	8c e2       	ldi	r24, 0x2C	; 44
     696:	fb 01       	movw	r30, r22
     698:	11 92       	st	Z+, r1
     69a:	8a 95       	dec	r24
     69c:	e9 f7       	brne	.-6      	; 0x698 <MPU9250_getData+0x2c>

	
	MPU9250_Read(MPU9250_ACCEL_XOUT_H, tmpRead, 22);
     69e:	46 e1       	ldi	r20, 0x16	; 22
     6a0:	8b e3       	ldi	r24, 0x3B	; 59
     6a2:	0e 94 20 03 	call	0x640	; 0x640 <MPU9250_Read>


	dataIMU[0] =  (tmpRead[6]<<8)+tmpRead[7];     // Temp
     6a6:	80 e0       	ldi	r24, 0x00	; 0
     6a8:	90 e0       	ldi	r25, 0x00	; 0
     6aa:	9d 85       	ldd	r25, Y+13	; 0x0d
     6ac:	2f 85       	ldd	r18, Y+15	; 0x0f
     6ae:	38 89       	ldd	r19, Y+16	; 0x10
     6b0:	82 0f       	add	r24, r18
     6b2:	93 1f       	adc	r25, r19
     6b4:	f8 01       	movw	r30, r16
     6b6:	91 83       	std	Z+1, r25	; 0x01
     6b8:	80 83       	st	Z, r24
	dataIMU[1] =  (tmpRead[0]<<8)+tmpRead[1];     // Acc.X
     6ba:	80 e0       	ldi	r24, 0x00	; 0
     6bc:	90 e0       	ldi	r25, 0x00	; 0
     6be:	99 81       	ldd	r25, Y+1	; 0x01
     6c0:	2b 81       	ldd	r18, Y+3	; 0x03
     6c2:	3c 81       	ldd	r19, Y+4	; 0x04
     6c4:	82 0f       	add	r24, r18
     6c6:	93 1f       	adc	r25, r19
     6c8:	93 83       	std	Z+3, r25	; 0x03
     6ca:	82 83       	std	Z+2, r24	; 0x02
	dataIMU[2] =  (tmpRead[2]<<8)+tmpRead[3];     // Acc.Y
     6cc:	80 e0       	ldi	r24, 0x00	; 0
     6ce:	90 e0       	ldi	r25, 0x00	; 0
     6d0:	9d 81       	ldd	r25, Y+5	; 0x05
     6d2:	2f 81       	ldd	r18, Y+7	; 0x07
     6d4:	38 85       	ldd	r19, Y+8	; 0x08
     6d6:	82 0f       	add	r24, r18
     6d8:	93 1f       	adc	r25, r19
     6da:	95 83       	std	Z+5, r25	; 0x05
     6dc:	84 83       	std	Z+4, r24	; 0x04
	dataIMU[3] =  (tmpRead[4]<<8)+tmpRead[5];     // Acc.Z
     6de:	80 e0       	ldi	r24, 0x00	; 0
     6e0:	90 e0       	ldi	r25, 0x00	; 0
     6e2:	99 85       	ldd	r25, Y+9	; 0x09
     6e4:	2b 85       	ldd	r18, Y+11	; 0x0b
     6e6:	3c 85       	ldd	r19, Y+12	; 0x0c
     6e8:	82 0f       	add	r24, r18
     6ea:	93 1f       	adc	r25, r19
     6ec:	97 83       	std	Z+7, r25	; 0x07
     6ee:	86 83       	std	Z+6, r24	; 0x06
	dataIMU[4] =  (tmpRead[8]<<8)+tmpRead[9];     // Gyr.X
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	99 89       	ldd	r25, Y+17	; 0x11
     6f6:	2b 89       	ldd	r18, Y+19	; 0x13
     6f8:	3c 89       	ldd	r19, Y+20	; 0x14
     6fa:	82 0f       	add	r24, r18
     6fc:	93 1f       	adc	r25, r19
     6fe:	91 87       	std	Z+9, r25	; 0x09
     700:	80 87       	std	Z+8, r24	; 0x08
	dataIMU[5] = (tmpRead[10]<<8)+tmpRead[11];    // Gyr.Y
     702:	80 e0       	ldi	r24, 0x00	; 0
     704:	90 e0       	ldi	r25, 0x00	; 0
     706:	9d 89       	ldd	r25, Y+21	; 0x15
     708:	2f 89       	ldd	r18, Y+23	; 0x17
     70a:	38 8d       	ldd	r19, Y+24	; 0x18
     70c:	82 0f       	add	r24, r18
     70e:	93 1f       	adc	r25, r19
     710:	93 87       	std	Z+11, r25	; 0x0b
     712:	82 87       	std	Z+10, r24	; 0x0a
	dataIMU[6] = (tmpRead[12]<<8)+tmpRead[13];    // Gyr.Z
     714:	80 e0       	ldi	r24, 0x00	; 0
     716:	90 e0       	ldi	r25, 0x00	; 0
     718:	99 8d       	ldd	r25, Y+25	; 0x19
     71a:	2b 8d       	ldd	r18, Y+27	; 0x1b
     71c:	3c 8d       	ldd	r19, Y+28	; 0x1c
     71e:	82 0f       	add	r24, r18
     720:	93 1f       	adc	r25, r19
     722:	95 87       	std	Z+13, r25	; 0x0d
     724:	84 87       	std	Z+12, r24	; 0x0c
// 	dataIMU[7] = (tmpRead[16]<<8)+tmpRead[15];    // Mag.X
// 	dataIMU[8] = (tmpRead[18]<<8)+tmpRead[17];    // Mag.Y
//     dataIMU[9] = (tmpRead[20]<<8)+tmpRead[19];    // Mag.Z


	dataIMU[7] = ((tmpRead[16]<<8)+tmpRead[15])*AK8963_ASA[0]+ AK8963_offset[0];    // Mag.X
     726:	80 e0       	ldi	r24, 0x00	; 0
     728:	90 e0       	ldi	r25, 0x00	; 0
     72a:	99 a1       	ldd	r25, Y+33	; 0x21
     72c:	6f 8d       	ldd	r22, Y+31	; 0x1f
     72e:	78 a1       	ldd	r23, Y+32	; 0x20
     730:	68 0f       	add	r22, r24
     732:	79 1f       	adc	r23, r25
     734:	88 27       	eor	r24, r24
     736:	77 fd       	sbrc	r23, 7
     738:	80 95       	com	r24
     73a:	98 2f       	mov	r25, r24
     73c:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
     740:	20 91 bc 06 	lds	r18, 0x06BC
     744:	30 91 bd 06 	lds	r19, 0x06BD
     748:	40 91 be 06 	lds	r20, 0x06BE
     74c:	50 91 bf 06 	lds	r21, 0x06BF
     750:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     754:	6b 01       	movw	r12, r22
     756:	7c 01       	movw	r14, r24
     758:	60 91 68 00 	lds	r22, 0x0068
     75c:	70 91 69 00 	lds	r23, 0x0069
     760:	88 27       	eor	r24, r24
     762:	77 fd       	sbrc	r23, 7
     764:	80 95       	com	r24
     766:	98 2f       	mov	r25, r24
     768:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
     76c:	9b 01       	movw	r18, r22
     76e:	ac 01       	movw	r20, r24
     770:	c7 01       	movw	r24, r14
     772:	b6 01       	movw	r22, r12
     774:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     778:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__fixsfsi>
     77c:	f8 01       	movw	r30, r16
     77e:	77 87       	std	Z+15, r23	; 0x0f
     780:	66 87       	std	Z+14, r22	; 0x0e
	dataIMU[8] = ((tmpRead[18]<<8)+tmpRead[17])*AK8963_ASA[1]+ AK8963_offset[1];    // Mag.Y
     782:	80 e0       	ldi	r24, 0x00	; 0
     784:	90 e0       	ldi	r25, 0x00	; 0
     786:	9d a1       	ldd	r25, Y+37	; 0x25
     788:	6b a1       	ldd	r22, Y+35	; 0x23
     78a:	7c a1       	ldd	r23, Y+36	; 0x24
     78c:	68 0f       	add	r22, r24
     78e:	79 1f       	adc	r23, r25
     790:	88 27       	eor	r24, r24
     792:	77 fd       	sbrc	r23, 7
     794:	80 95       	com	r24
     796:	98 2f       	mov	r25, r24
     798:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
     79c:	20 91 c0 06 	lds	r18, 0x06C0
     7a0:	30 91 c1 06 	lds	r19, 0x06C1
     7a4:	40 91 c2 06 	lds	r20, 0x06C2
     7a8:	50 91 c3 06 	lds	r21, 0x06C3
     7ac:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     7b0:	6b 01       	movw	r12, r22
     7b2:	7c 01       	movw	r14, r24
     7b4:	60 91 6a 00 	lds	r22, 0x006A
     7b8:	70 91 6b 00 	lds	r23, 0x006B
     7bc:	88 27       	eor	r24, r24
     7be:	77 fd       	sbrc	r23, 7
     7c0:	80 95       	com	r24
     7c2:	98 2f       	mov	r25, r24
     7c4:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
     7c8:	9b 01       	movw	r18, r22
     7ca:	ac 01       	movw	r20, r24
     7cc:	c7 01       	movw	r24, r14
     7ce:	b6 01       	movw	r22, r12
     7d0:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     7d4:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__fixsfsi>
     7d8:	f8 01       	movw	r30, r16
     7da:	71 8b       	std	Z+17, r23	; 0x11
     7dc:	60 8b       	std	Z+16, r22	; 0x10
    dataIMU[9] = ((tmpRead[20]<<8)+tmpRead[19])*AK8963_ASA[2]+ AK8963_offset[2];    // Mag.Z
     7de:	80 e0       	ldi	r24, 0x00	; 0
     7e0:	90 e0       	ldi	r25, 0x00	; 0
     7e2:	99 a5       	ldd	r25, Y+41	; 0x29
     7e4:	6f a1       	ldd	r22, Y+39	; 0x27
     7e6:	78 a5       	ldd	r23, Y+40	; 0x28
     7e8:	68 0f       	add	r22, r24
     7ea:	79 1f       	adc	r23, r25
     7ec:	88 27       	eor	r24, r24
     7ee:	77 fd       	sbrc	r23, 7
     7f0:	80 95       	com	r24
     7f2:	98 2f       	mov	r25, r24
     7f4:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
     7f8:	20 91 c4 06 	lds	r18, 0x06C4
     7fc:	30 91 c5 06 	lds	r19, 0x06C5
     800:	40 91 c6 06 	lds	r20, 0x06C6
     804:	50 91 c7 06 	lds	r21, 0x06C7
     808:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     80c:	6b 01       	movw	r12, r22
     80e:	7c 01       	movw	r14, r24
     810:	60 91 6c 00 	lds	r22, 0x006C
     814:	70 91 6d 00 	lds	r23, 0x006D
     818:	88 27       	eor	r24, r24
     81a:	77 fd       	sbrc	r23, 7
     81c:	80 95       	com	r24
     81e:	98 2f       	mov	r25, r24
     820:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
     824:	9b 01       	movw	r18, r22
     826:	ac 01       	movw	r20, r24
     828:	c7 01       	movw	r24, r14
     82a:	b6 01       	movw	r22, r12
     82c:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     830:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__fixsfsi>
     834:	f8 01       	movw	r30, r16
     836:	73 8b       	std	Z+19, r23	; 0x13
     838:	62 8b       	std	Z+18, r22	; 0x12


     83a:	ac 96       	adiw	r28, 0x2c	; 44
     83c:	0f b6       	in	r0, 0x3f	; 63
     83e:	f8 94       	cli
     840:	de bf       	out	0x3e, r29	; 62
     842:	0f be       	out	0x3f, r0	; 63
     844:	cd bf       	out	0x3d, r28	; 61
     846:	df 91       	pop	r29
     848:	cf 91       	pop	r28
     84a:	1f 91       	pop	r17
     84c:	0f 91       	pop	r16
     84e:	ff 90       	pop	r15
     850:	ef 90       	pop	r14
     852:	df 90       	pop	r13
     854:	cf 90       	pop	r12
     856:	08 95       	ret

00000858 <Quaternions_Count>:

double  q0 = 1, q1 = 0, q2 = 0, q3 = 0; // 四元数元素方位估计
float exInt = 0, eyInt = 0, ezInt = 0; // 缩放积分误差
float yaw,pitch,roll;
void Quaternions_Count( float ax, float ay, float az,float gx, float gy, float gz, float mx, float my, float mz)
 {
     858:	4f 92       	push	r4
     85a:	5f 92       	push	r5
     85c:	6f 92       	push	r6
     85e:	7f 92       	push	r7
     860:	8f 92       	push	r8
     862:	9f 92       	push	r9
     864:	af 92       	push	r10
     866:	bf 92       	push	r11
     868:	cf 92       	push	r12
     86a:	df 92       	push	r13
     86c:	ef 92       	push	r14
     86e:	ff 92       	push	r15
     870:	0f 93       	push	r16
     872:	1f 93       	push	r17
     874:	cf 93       	push	r28
     876:	df 93       	push	r29
     878:	cd b7       	in	r28, 0x3d	; 61
     87a:	de b7       	in	r29, 0x3e	; 62
     87c:	c0 57       	subi	r28, 0x70	; 112
     87e:	d1 09       	sbc	r29, r1
     880:	0f b6       	in	r0, 0x3f	; 63
     882:	f8 94       	cli
     884:	de bf       	out	0x3e, r29	; 62
     886:	0f be       	out	0x3f, r0	; 63
     888:	cd bf       	out	0x3d, r28	; 61
     88a:	6d 8f       	std	Y+29, r22	; 0x1d
     88c:	7e 8f       	std	Y+30, r23	; 0x1e
     88e:	8f 8f       	std	Y+31, r24	; 0x1f
     890:	98 a3       	std	Y+32, r25	; 0x20
     892:	29 01       	movw	r4, r18
     894:	3a 01       	movw	r6, r20
     896:	e9 86       	std	Y+9, r14	; 0x09
     898:	fa 86       	std	Y+10, r15	; 0x0a
     89a:	0b 87       	std	Y+11, r16	; 0x0b
     89c:	1c 87       	std	Y+12, r17	; 0x0c
	double norm;
	float hx, hy, hz, bx, bz;
	float vx, vy, vz, wx, wy, wz;
	float ex, ey, ez;
	///辅助变量，以减少重复操作次数
	float q0q0 = q0*q0;
     89e:	80 91 60 00 	lds	r24, 0x0060
     8a2:	90 91 61 00 	lds	r25, 0x0061
     8a6:	a0 91 62 00 	lds	r26, 0x0062
     8aa:	b0 91 63 00 	lds	r27, 0x0063
     8ae:	8d ab       	std	Y+53, r24	; 0x35
     8b0:	9e ab       	std	Y+54, r25	; 0x36
     8b2:	af ab       	std	Y+55, r26	; 0x37
     8b4:	b8 af       	std	Y+56, r27	; 0x38
	float q0q1 = q0*q1;
     8b6:	80 91 76 06 	lds	r24, 0x0676
     8ba:	90 91 77 06 	lds	r25, 0x0677
     8be:	a0 91 78 06 	lds	r26, 0x0678
     8c2:	b0 91 79 06 	lds	r27, 0x0679
     8c6:	89 8f       	std	Y+25, r24	; 0x19
     8c8:	9a 8f       	std	Y+26, r25	; 0x1a
     8ca:	ab 8f       	std	Y+27, r26	; 0x1b
     8cc:	bc 8f       	std	Y+28, r27	; 0x1c
     8ce:	9c 01       	movw	r18, r24
     8d0:	ad 01       	movw	r20, r26
     8d2:	6d a9       	ldd	r22, Y+53	; 0x35
     8d4:	7e a9       	ldd	r23, Y+54	; 0x36
     8d6:	8f a9       	ldd	r24, Y+55	; 0x37
     8d8:	98 ad       	ldd	r25, Y+56	; 0x38
     8da:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     8de:	69 ab       	std	Y+49, r22	; 0x31
     8e0:	7a ab       	std	Y+50, r23	; 0x32
     8e2:	8b ab       	std	Y+51, r24	; 0x33
     8e4:	9c ab       	std	Y+52, r25	; 0x34
	float q0q2 = q0*q2;
     8e6:	80 91 72 06 	lds	r24, 0x0672
     8ea:	90 91 73 06 	lds	r25, 0x0673
     8ee:	a0 91 74 06 	lds	r26, 0x0674
     8f2:	b0 91 75 06 	lds	r27, 0x0675
     8f6:	8d 8b       	std	Y+21, r24	; 0x15
     8f8:	9e 8b       	std	Y+22, r25	; 0x16
     8fa:	af 8b       	std	Y+23, r26	; 0x17
     8fc:	b8 8f       	std	Y+24, r27	; 0x18
     8fe:	9c 01       	movw	r18, r24
     900:	ad 01       	movw	r20, r26
     902:	6d a9       	ldd	r22, Y+53	; 0x35
     904:	7e a9       	ldd	r23, Y+54	; 0x36
     906:	8f a9       	ldd	r24, Y+55	; 0x37
     908:	98 ad       	ldd	r25, Y+56	; 0x38
     90a:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     90e:	69 af       	std	Y+57, r22	; 0x39
     910:	7a af       	std	Y+58, r23	; 0x3a
     912:	8b af       	std	Y+59, r24	; 0x3b
     914:	9c af       	std	Y+60, r25	; 0x3c
	float q0q3 = q0*q3;
     916:	80 91 6e 06 	lds	r24, 0x066E
     91a:	90 91 6f 06 	lds	r25, 0x066F
     91e:	a0 91 70 06 	lds	r26, 0x0670
     922:	b0 91 71 06 	lds	r27, 0x0671
     926:	8d a3       	std	Y+37, r24	; 0x25
     928:	9e a3       	std	Y+38, r25	; 0x26
     92a:	af a3       	std	Y+39, r26	; 0x27
     92c:	b8 a7       	std	Y+40, r27	; 0x28
     92e:	9c 01       	movw	r18, r24
     930:	ad 01       	movw	r20, r26
     932:	6d a9       	ldd	r22, Y+53	; 0x35
     934:	7e a9       	ldd	r23, Y+54	; 0x36
     936:	8f a9       	ldd	r24, Y+55	; 0x37
     938:	98 ad       	ldd	r25, Y+56	; 0x38
     93a:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     93e:	6d a7       	std	Y+45, r22	; 0x2d
     940:	7e a7       	std	Y+46, r23	; 0x2e
     942:	8f a7       	std	Y+47, r24	; 0x2f
     944:	98 ab       	std	Y+48, r25	; 0x30
	float q1q1 = q1*q1;
     946:	29 8d       	ldd	r18, Y+25	; 0x19
     948:	3a 8d       	ldd	r19, Y+26	; 0x1a
     94a:	4b 8d       	ldd	r20, Y+27	; 0x1b
     94c:	5c 8d       	ldd	r21, Y+28	; 0x1c
     94e:	ca 01       	movw	r24, r20
     950:	b9 01       	movw	r22, r18
     952:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     956:	29 96       	adiw	r28, 0x09	; 9
     958:	6c af       	std	Y+60, r22	; 0x3c
     95a:	7d af       	std	Y+61, r23	; 0x3d
     95c:	8e af       	std	Y+62, r24	; 0x3e
     95e:	9f af       	std	Y+63, r25	; 0x3f
     960:	29 97       	sbiw	r28, 0x09	; 9
	float q1q2 = q1*q2;
     962:	2d 89       	ldd	r18, Y+21	; 0x15
     964:	3e 89       	ldd	r19, Y+22	; 0x16
     966:	4f 89       	ldd	r20, Y+23	; 0x17
     968:	58 8d       	ldd	r21, Y+24	; 0x18
     96a:	69 8d       	ldd	r22, Y+25	; 0x19
     96c:	7a 8d       	ldd	r23, Y+26	; 0x1a
     96e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     970:	9c 8d       	ldd	r25, Y+28	; 0x1c
     972:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     976:	21 96       	adiw	r28, 0x01	; 1
     978:	6c af       	std	Y+60, r22	; 0x3c
     97a:	7d af       	std	Y+61, r23	; 0x3d
     97c:	8e af       	std	Y+62, r24	; 0x3e
     97e:	9f af       	std	Y+63, r25	; 0x3f
     980:	21 97       	sbiw	r28, 0x01	; 1
	float q1q3 = q1*q3;
     982:	2d a1       	ldd	r18, Y+37	; 0x25
     984:	3e a1       	ldd	r19, Y+38	; 0x26
     986:	4f a1       	ldd	r20, Y+39	; 0x27
     988:	58 a5       	ldd	r21, Y+40	; 0x28
     98a:	69 8d       	ldd	r22, Y+25	; 0x19
     98c:	7a 8d       	ldd	r23, Y+26	; 0x1a
     98e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     990:	9c 8d       	ldd	r25, Y+28	; 0x1c
     992:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     996:	2d 96       	adiw	r28, 0x0d	; 13
     998:	6c af       	std	Y+60, r22	; 0x3c
     99a:	7d af       	std	Y+61, r23	; 0x3d
     99c:	8e af       	std	Y+62, r24	; 0x3e
     99e:	9f af       	std	Y+63, r25	; 0x3f
     9a0:	2d 97       	sbiw	r28, 0x0d	; 13
	float q2q2 = q2*q2;
     9a2:	2d 89       	ldd	r18, Y+21	; 0x15
     9a4:	3e 89       	ldd	r19, Y+22	; 0x16
     9a6:	4f 89       	ldd	r20, Y+23	; 0x17
     9a8:	58 8d       	ldd	r21, Y+24	; 0x18
     9aa:	ca 01       	movw	r24, r20
     9ac:	b9 01       	movw	r22, r18
     9ae:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     9b2:	69 a3       	std	Y+33, r22	; 0x21
     9b4:	7a a3       	std	Y+34, r23	; 0x22
     9b6:	8b a3       	std	Y+35, r24	; 0x23
     9b8:	9c a3       	std	Y+36, r25	; 0x24
	float q2q3 = q2*q3;
     9ba:	2d a1       	ldd	r18, Y+37	; 0x25
     9bc:	3e a1       	ldd	r19, Y+38	; 0x26
     9be:	4f a1       	ldd	r20, Y+39	; 0x27
     9c0:	58 a5       	ldd	r21, Y+40	; 0x28
     9c2:	6d 89       	ldd	r22, Y+21	; 0x15
     9c4:	7e 89       	ldd	r23, Y+22	; 0x16
     9c6:	8f 89       	ldd	r24, Y+23	; 0x17
     9c8:	98 8d       	ldd	r25, Y+24	; 0x18
     9ca:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     9ce:	61 96       	adiw	r28, 0x11	; 17
     9d0:	6c af       	std	Y+60, r22	; 0x3c
     9d2:	7d af       	std	Y+61, r23	; 0x3d
     9d4:	8e af       	std	Y+62, r24	; 0x3e
     9d6:	9f af       	std	Y+63, r25	; 0x3f
     9d8:	61 97       	sbiw	r28, 0x11	; 17
	float q3q3 = q3*q3;
     9da:	2d a1       	ldd	r18, Y+37	; 0x25
     9dc:	3e a1       	ldd	r19, Y+38	; 0x26
     9de:	4f a1       	ldd	r20, Y+39	; 0x27
     9e0:	58 a5       	ldd	r21, Y+40	; 0x28
     9e2:	ca 01       	movw	r24, r20
     9e4:	b9 01       	movw	r22, r18
     9e6:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     9ea:	69 a7       	std	Y+41, r22	; 0x29
     9ec:	7a a7       	std	Y+42, r23	; 0x2a
     9ee:	8b a7       	std	Y+43, r24	; 0x2b
     9f0:	9c a7       	std	Y+44, r25	; 0x2c
	// 归一化测量
	norm = sqrt(ax*ax + ay*ay + az*az);
     9f2:	2d 8d       	ldd	r18, Y+29	; 0x1d
     9f4:	3e 8d       	ldd	r19, Y+30	; 0x1e
     9f6:	4f 8d       	ldd	r20, Y+31	; 0x1f
     9f8:	58 a1       	ldd	r21, Y+32	; 0x20
     9fa:	ca 01       	movw	r24, r20
     9fc:	b9 01       	movw	r22, r18
     9fe:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     a02:	69 83       	std	Y+1, r22	; 0x01
     a04:	7a 83       	std	Y+2, r23	; 0x02
     a06:	8b 83       	std	Y+3, r24	; 0x03
     a08:	9c 83       	std	Y+4, r25	; 0x04
     a0a:	a3 01       	movw	r20, r6
     a0c:	92 01       	movw	r18, r4
     a0e:	c3 01       	movw	r24, r6
     a10:	b2 01       	movw	r22, r4
     a12:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     a16:	9b 01       	movw	r18, r22
     a18:	ac 01       	movw	r20, r24
     a1a:	69 81       	ldd	r22, Y+1	; 0x01
     a1c:	7a 81       	ldd	r23, Y+2	; 0x02
     a1e:	8b 81       	ldd	r24, Y+3	; 0x03
     a20:	9c 81       	ldd	r25, Y+4	; 0x04
     a22:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     a26:	69 83       	std	Y+1, r22	; 0x01
     a28:	7a 83       	std	Y+2, r23	; 0x02
     a2a:	8b 83       	std	Y+3, r24	; 0x03
     a2c:	9c 83       	std	Y+4, r25	; 0x04
     a2e:	a8 01       	movw	r20, r16
     a30:	97 01       	movw	r18, r14
     a32:	c8 01       	movw	r24, r16
     a34:	b7 01       	movw	r22, r14
     a36:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     a3a:	9b 01       	movw	r18, r22
     a3c:	ac 01       	movw	r20, r24
     a3e:	69 81       	ldd	r22, Y+1	; 0x01
     a40:	7a 81       	ldd	r23, Y+2	; 0x02
     a42:	8b 81       	ldd	r24, Y+3	; 0x03
     a44:	9c 81       	ldd	r25, Y+4	; 0x04
     a46:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     a4a:	0e 94 df 12 	call	0x25be	; 0x25be <sqrt>
     a4e:	69 83       	std	Y+1, r22	; 0x01
     a50:	7a 83       	std	Y+2, r23	; 0x02
     a52:	8b 83       	std	Y+3, r24	; 0x03
     a54:	9c 83       	std	Y+4, r25	; 0x04
	ax = ax / norm;
     a56:	9b 01       	movw	r18, r22
     a58:	ac 01       	movw	r20, r24
     a5a:	6d 8d       	ldd	r22, Y+29	; 0x1d
     a5c:	7e 8d       	ldd	r23, Y+30	; 0x1e
     a5e:	8f 8d       	ldd	r24, Y+31	; 0x1f
     a60:	98 a1       	ldd	r25, Y+32	; 0x20
     a62:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <__divsf3>
     a66:	65 96       	adiw	r28, 0x15	; 21
     a68:	6c af       	std	Y+60, r22	; 0x3c
     a6a:	7d af       	std	Y+61, r23	; 0x3d
     a6c:	8e af       	std	Y+62, r24	; 0x3e
     a6e:	9f af       	std	Y+63, r25	; 0x3f
     a70:	65 97       	sbiw	r28, 0x15	; 21
	ay = ay / norm;
     a72:	29 81       	ldd	r18, Y+1	; 0x01
     a74:	3a 81       	ldd	r19, Y+2	; 0x02
     a76:	4b 81       	ldd	r20, Y+3	; 0x03
     a78:	5c 81       	ldd	r21, Y+4	; 0x04
     a7a:	c3 01       	movw	r24, r6
     a7c:	b2 01       	movw	r22, r4
     a7e:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <__divsf3>
     a82:	69 96       	adiw	r28, 0x19	; 25
     a84:	6c af       	std	Y+60, r22	; 0x3c
     a86:	7d af       	std	Y+61, r23	; 0x3d
     a88:	8e af       	std	Y+62, r24	; 0x3e
     a8a:	9f af       	std	Y+63, r25	; 0x3f
     a8c:	69 97       	sbiw	r28, 0x19	; 25
	az = az / norm;
     a8e:	29 81       	ldd	r18, Y+1	; 0x01
     a90:	3a 81       	ldd	r19, Y+2	; 0x02
     a92:	4b 81       	ldd	r20, Y+3	; 0x03
     a94:	5c 81       	ldd	r21, Y+4	; 0x04
     a96:	c8 01       	movw	r24, r16
     a98:	b7 01       	movw	r22, r14
     a9a:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <__divsf3>
     a9e:	6d 96       	adiw	r28, 0x1d	; 29
     aa0:	6c af       	std	Y+60, r22	; 0x3c
     aa2:	7d af       	std	Y+61, r23	; 0x3d
     aa4:	8e af       	std	Y+62, r24	; 0x3e
     aa6:	9f af       	std	Y+63, r25	; 0x3f
     aa8:	6d 97       	sbiw	r28, 0x1d	; 29
	norm = sqrt(mx*mx + my*my + mz*mz);
     aaa:	c5 57       	subi	r28, 0x75	; 117
     aac:	df 4f       	sbci	r29, 0xFF	; 255
     aae:	28 81       	ld	r18, Y
     ab0:	39 81       	ldd	r19, Y+1	; 0x01
     ab2:	4a 81       	ldd	r20, Y+2	; 0x02
     ab4:	5b 81       	ldd	r21, Y+3	; 0x03
     ab6:	cb 58       	subi	r28, 0x8B	; 139
     ab8:	d0 40       	sbci	r29, 0x00	; 0
     aba:	ca 01       	movw	r24, r20
     abc:	b9 01       	movw	r22, r18
     abe:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     ac2:	2b 01       	movw	r4, r22
     ac4:	3c 01       	movw	r6, r24
     ac6:	c1 57       	subi	r28, 0x71	; 113
     ac8:	df 4f       	sbci	r29, 0xFF	; 255
     aca:	28 81       	ld	r18, Y
     acc:	39 81       	ldd	r19, Y+1	; 0x01
     ace:	4a 81       	ldd	r20, Y+2	; 0x02
     ad0:	5b 81       	ldd	r21, Y+3	; 0x03
     ad2:	cf 58       	subi	r28, 0x8F	; 143
     ad4:	d0 40       	sbci	r29, 0x00	; 0
     ad6:	ca 01       	movw	r24, r20
     ad8:	b9 01       	movw	r22, r18
     ada:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     ade:	9b 01       	movw	r18, r22
     ae0:	ac 01       	movw	r20, r24
     ae2:	c3 01       	movw	r24, r6
     ae4:	b2 01       	movw	r22, r4
     ae6:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     aea:	2b 01       	movw	r4, r22
     aec:	3c 01       	movw	r6, r24
     aee:	cd 56       	subi	r28, 0x6D	; 109
     af0:	df 4f       	sbci	r29, 0xFF	; 255
     af2:	28 81       	ld	r18, Y
     af4:	39 81       	ldd	r19, Y+1	; 0x01
     af6:	4a 81       	ldd	r20, Y+2	; 0x02
     af8:	5b 81       	ldd	r21, Y+3	; 0x03
     afa:	c3 59       	subi	r28, 0x93	; 147
     afc:	d0 40       	sbci	r29, 0x00	; 0
     afe:	ca 01       	movw	r24, r20
     b00:	b9 01       	movw	r22, r18
     b02:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     b06:	9b 01       	movw	r18, r22
     b08:	ac 01       	movw	r20, r24
     b0a:	c3 01       	movw	r24, r6
     b0c:	b2 01       	movw	r22, r4
     b0e:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     b12:	0e 94 df 12 	call	0x25be	; 0x25be <sqrt>
     b16:	2b 01       	movw	r4, r22
     b18:	3c 01       	movw	r6, r24
	mx = mx / norm;
     b1a:	9b 01       	movw	r18, r22
     b1c:	ac 01       	movw	r20, r24
     b1e:	c5 57       	subi	r28, 0x75	; 117
     b20:	df 4f       	sbci	r29, 0xFF	; 255
     b22:	68 81       	ld	r22, Y
     b24:	79 81       	ldd	r23, Y+1	; 0x01
     b26:	8a 81       	ldd	r24, Y+2	; 0x02
     b28:	9b 81       	ldd	r25, Y+3	; 0x03
     b2a:	cb 58       	subi	r28, 0x8B	; 139
     b2c:	d0 40       	sbci	r29, 0x00	; 0
     b2e:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <__divsf3>
     b32:	69 83       	std	Y+1, r22	; 0x01
     b34:	7a 83       	std	Y+2, r23	; 0x02
     b36:	8b 83       	std	Y+3, r24	; 0x03
     b38:	9c 83       	std	Y+4, r25	; 0x04
	my = my / norm;
     b3a:	a3 01       	movw	r20, r6
     b3c:	92 01       	movw	r18, r4
     b3e:	c1 57       	subi	r28, 0x71	; 113
     b40:	df 4f       	sbci	r29, 0xFF	; 255
     b42:	68 81       	ld	r22, Y
     b44:	79 81       	ldd	r23, Y+1	; 0x01
     b46:	8a 81       	ldd	r24, Y+2	; 0x02
     b48:	9b 81       	ldd	r25, Y+3	; 0x03
     b4a:	cf 58       	subi	r28, 0x8F	; 143
     b4c:	d0 40       	sbci	r29, 0x00	; 0
     b4e:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <__divsf3>
     b52:	6d 8f       	std	Y+29, r22	; 0x1d
     b54:	7e 8f       	std	Y+30, r23	; 0x1e
     b56:	8f 8f       	std	Y+31, r24	; 0x1f
     b58:	98 a3       	std	Y+32, r25	; 0x20
	mz = mz / norm;
     b5a:	a3 01       	movw	r20, r6
     b5c:	92 01       	movw	r18, r4
     b5e:	cd 56       	subi	r28, 0x6D	; 109
     b60:	df 4f       	sbci	r29, 0xFF	; 255
     b62:	68 81       	ld	r22, Y
     b64:	79 81       	ldd	r23, Y+1	; 0x01
     b66:	8a 81       	ldd	r24, Y+2	; 0x02
     b68:	9b 81       	ldd	r25, Y+3	; 0x03
     b6a:	c3 59       	subi	r28, 0x93	; 147
     b6c:	d0 40       	sbci	r29, 0x00	; 0
     b6e:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <__divsf3>
     b72:	69 87       	std	Y+9, r22	; 0x09
     b74:	7a 87       	std	Y+10, r23	; 0x0a
     b76:	8b 87       	std	Y+11, r24	; 0x0b
     b78:	9c 87       	std	Y+12, r25	; 0x0c
	//磁力计计算参考方向
	hx = 2*mx*(0.5 - q2q2 - q3q3) + 2*my*(q1q2 - q0q3) + 2*mz*(q1q3 + q0q2);
     b7a:	29 81       	ldd	r18, Y+1	; 0x01
     b7c:	3a 81       	ldd	r19, Y+2	; 0x02
     b7e:	4b 81       	ldd	r20, Y+3	; 0x03
     b80:	5c 81       	ldd	r21, Y+4	; 0x04
     b82:	ca 01       	movw	r24, r20
     b84:	b9 01       	movw	r22, r18
     b86:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     b8a:	2b 01       	movw	r4, r22
     b8c:	3c 01       	movw	r6, r24
     b8e:	29 a1       	ldd	r18, Y+33	; 0x21
     b90:	3a a1       	ldd	r19, Y+34	; 0x22
     b92:	4b a1       	ldd	r20, Y+35	; 0x23
     b94:	5c a1       	ldd	r21, Y+36	; 0x24
     b96:	60 e0       	ldi	r22, 0x00	; 0
     b98:	70 e0       	ldi	r23, 0x00	; 0
     b9a:	80 e0       	ldi	r24, 0x00	; 0
     b9c:	9f e3       	ldi	r25, 0x3F	; 63
     b9e:	0e 94 1b 10 	call	0x2036	; 0x2036 <__subsf3>
     ba2:	29 a5       	ldd	r18, Y+41	; 0x29
     ba4:	3a a5       	ldd	r19, Y+42	; 0x2a
     ba6:	4b a5       	ldd	r20, Y+43	; 0x2b
     ba8:	5c a5       	ldd	r21, Y+44	; 0x2c
     baa:	0e 94 1b 10 	call	0x2036	; 0x2036 <__subsf3>
     bae:	a1 96       	adiw	r28, 0x21	; 33
     bb0:	6c af       	std	Y+60, r22	; 0x3c
     bb2:	7d af       	std	Y+61, r23	; 0x3d
     bb4:	8e af       	std	Y+62, r24	; 0x3e
     bb6:	9f af       	std	Y+63, r25	; 0x3f
     bb8:	a1 97       	sbiw	r28, 0x21	; 33
     bba:	2d 8d       	ldd	r18, Y+29	; 0x1d
     bbc:	3e 8d       	ldd	r19, Y+30	; 0x1e
     bbe:	4f 8d       	ldd	r20, Y+31	; 0x1f
     bc0:	58 a1       	ldd	r21, Y+32	; 0x20
     bc2:	ca 01       	movw	r24, r20
     bc4:	b9 01       	movw	r22, r18
     bc6:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     bca:	69 8b       	std	Y+17, r22	; 0x11
     bcc:	7a 8b       	std	Y+18, r23	; 0x12
     bce:	8b 8b       	std	Y+19, r24	; 0x13
     bd0:	9c 8b       	std	Y+20, r25	; 0x14
     bd2:	2d a5       	ldd	r18, Y+45	; 0x2d
     bd4:	3e a5       	ldd	r19, Y+46	; 0x2e
     bd6:	4f a5       	ldd	r20, Y+47	; 0x2f
     bd8:	58 a9       	ldd	r21, Y+48	; 0x30
     bda:	21 96       	adiw	r28, 0x01	; 1
     bdc:	6c ad       	ldd	r22, Y+60	; 0x3c
     bde:	7d ad       	ldd	r23, Y+61	; 0x3d
     be0:	8e ad       	ldd	r24, Y+62	; 0x3e
     be2:	9f ad       	ldd	r25, Y+63	; 0x3f
     be4:	21 97       	sbiw	r28, 0x01	; 1
     be6:	0e 94 1b 10 	call	0x2036	; 0x2036 <__subsf3>
     bea:	a5 96       	adiw	r28, 0x25	; 37
     bec:	6c af       	std	Y+60, r22	; 0x3c
     bee:	7d af       	std	Y+61, r23	; 0x3d
     bf0:	8e af       	std	Y+62, r24	; 0x3e
     bf2:	9f af       	std	Y+63, r25	; 0x3f
     bf4:	a5 97       	sbiw	r28, 0x25	; 37
     bf6:	29 85       	ldd	r18, Y+9	; 0x09
     bf8:	3a 85       	ldd	r19, Y+10	; 0x0a
     bfa:	4b 85       	ldd	r20, Y+11	; 0x0b
     bfc:	5c 85       	ldd	r21, Y+12	; 0x0c
     bfe:	ca 01       	movw	r24, r20
     c00:	b9 01       	movw	r22, r18
     c02:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     c06:	25 96       	adiw	r28, 0x05	; 5
     c08:	6c af       	std	Y+60, r22	; 0x3c
     c0a:	7d af       	std	Y+61, r23	; 0x3d
     c0c:	8e af       	std	Y+62, r24	; 0x3e
     c0e:	9f af       	std	Y+63, r25	; 0x3f
     c10:	25 97       	sbiw	r28, 0x05	; 5
     c12:	29 ad       	ldd	r18, Y+57	; 0x39
     c14:	3a ad       	ldd	r19, Y+58	; 0x3a
     c16:	4b ad       	ldd	r20, Y+59	; 0x3b
     c18:	5c ad       	ldd	r21, Y+60	; 0x3c
     c1a:	2d 96       	adiw	r28, 0x0d	; 13
     c1c:	6c ad       	ldd	r22, Y+60	; 0x3c
     c1e:	7d ad       	ldd	r23, Y+61	; 0x3d
     c20:	8e ad       	ldd	r24, Y+62	; 0x3e
     c22:	9f ad       	ldd	r25, Y+63	; 0x3f
     c24:	2d 97       	sbiw	r28, 0x0d	; 13
     c26:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     c2a:	a9 96       	adiw	r28, 0x29	; 41
     c2c:	6c af       	std	Y+60, r22	; 0x3c
     c2e:	7d af       	std	Y+61, r23	; 0x3d
     c30:	8e af       	std	Y+62, r24	; 0x3e
     c32:	9f af       	std	Y+63, r25	; 0x3f
     c34:	a9 97       	sbiw	r28, 0x29	; 41
     c36:	a1 96       	adiw	r28, 0x21	; 33
     c38:	2c ad       	ldd	r18, Y+60	; 0x3c
     c3a:	3d ad       	ldd	r19, Y+61	; 0x3d
     c3c:	4e ad       	ldd	r20, Y+62	; 0x3e
     c3e:	5f ad       	ldd	r21, Y+63	; 0x3f
     c40:	a1 97       	sbiw	r28, 0x21	; 33
     c42:	c3 01       	movw	r24, r6
     c44:	b2 01       	movw	r22, r4
     c46:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     c4a:	6d 83       	std	Y+5, r22	; 0x05
     c4c:	7e 83       	std	Y+6, r23	; 0x06
     c4e:	8f 83       	std	Y+7, r24	; 0x07
     c50:	98 87       	std	Y+8, r25	; 0x08
     c52:	a5 96       	adiw	r28, 0x25	; 37
     c54:	2c ad       	ldd	r18, Y+60	; 0x3c
     c56:	3d ad       	ldd	r19, Y+61	; 0x3d
     c58:	4e ad       	ldd	r20, Y+62	; 0x3e
     c5a:	5f ad       	ldd	r21, Y+63	; 0x3f
     c5c:	a5 97       	sbiw	r28, 0x25	; 37
     c5e:	69 89       	ldd	r22, Y+17	; 0x11
     c60:	7a 89       	ldd	r23, Y+18	; 0x12
     c62:	8b 89       	ldd	r24, Y+19	; 0x13
     c64:	9c 89       	ldd	r25, Y+20	; 0x14
     c66:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     c6a:	9b 01       	movw	r18, r22
     c6c:	ac 01       	movw	r20, r24
     c6e:	6d 81       	ldd	r22, Y+5	; 0x05
     c70:	7e 81       	ldd	r23, Y+6	; 0x06
     c72:	8f 81       	ldd	r24, Y+7	; 0x07
     c74:	98 85       	ldd	r25, Y+8	; 0x08
     c76:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     c7a:	6d 83       	std	Y+5, r22	; 0x05
     c7c:	7e 83       	std	Y+6, r23	; 0x06
     c7e:	8f 83       	std	Y+7, r24	; 0x07
     c80:	98 87       	std	Y+8, r25	; 0x08
     c82:	a9 96       	adiw	r28, 0x29	; 41
     c84:	2c ad       	ldd	r18, Y+60	; 0x3c
     c86:	3d ad       	ldd	r19, Y+61	; 0x3d
     c88:	4e ad       	ldd	r20, Y+62	; 0x3e
     c8a:	5f ad       	ldd	r21, Y+63	; 0x3f
     c8c:	a9 97       	sbiw	r28, 0x29	; 41
     c8e:	25 96       	adiw	r28, 0x05	; 5
     c90:	6c ad       	ldd	r22, Y+60	; 0x3c
     c92:	7d ad       	ldd	r23, Y+61	; 0x3d
     c94:	8e ad       	ldd	r24, Y+62	; 0x3e
     c96:	9f ad       	ldd	r25, Y+63	; 0x3f
     c98:	25 97       	sbiw	r28, 0x05	; 5
     c9a:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     c9e:	9b 01       	movw	r18, r22
     ca0:	ac 01       	movw	r20, r24
     ca2:	6d 81       	ldd	r22, Y+5	; 0x05
     ca4:	7e 81       	ldd	r23, Y+6	; 0x06
     ca6:	8f 81       	ldd	r24, Y+7	; 0x07
     ca8:	98 85       	ldd	r25, Y+8	; 0x08
     caa:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     cae:	ad 96       	adiw	r28, 0x2d	; 45
     cb0:	6c af       	std	Y+60, r22	; 0x3c
     cb2:	7d af       	std	Y+61, r23	; 0x3d
     cb4:	8e af       	std	Y+62, r24	; 0x3e
     cb6:	9f af       	std	Y+63, r25	; 0x3f
     cb8:	ad 97       	sbiw	r28, 0x2d	; 45
	hy = 2*mx*(q1q2 + q0q3) + 2*my*(0.5 - q1q1 - q3q3) + 2*mz*(q2q3 - q0q1);
     cba:	29 96       	adiw	r28, 0x09	; 9
     cbc:	2c ad       	ldd	r18, Y+60	; 0x3c
     cbe:	3d ad       	ldd	r19, Y+61	; 0x3d
     cc0:	4e ad       	ldd	r20, Y+62	; 0x3e
     cc2:	5f ad       	ldd	r21, Y+63	; 0x3f
     cc4:	29 97       	sbiw	r28, 0x09	; 9
     cc6:	60 e0       	ldi	r22, 0x00	; 0
     cc8:	70 e0       	ldi	r23, 0x00	; 0
     cca:	80 e0       	ldi	r24, 0x00	; 0
     ccc:	9f e3       	ldi	r25, 0x3F	; 63
     cce:	0e 94 1b 10 	call	0x2036	; 0x2036 <__subsf3>
     cd2:	e1 96       	adiw	r28, 0x31	; 49
     cd4:	6c af       	std	Y+60, r22	; 0x3c
     cd6:	7d af       	std	Y+61, r23	; 0x3d
     cd8:	8e af       	std	Y+62, r24	; 0x3e
     cda:	9f af       	std	Y+63, r25	; 0x3f
     cdc:	e1 97       	sbiw	r28, 0x31	; 49
     cde:	2d a5       	ldd	r18, Y+45	; 0x2d
     ce0:	3e a5       	ldd	r19, Y+46	; 0x2e
     ce2:	4f a5       	ldd	r20, Y+47	; 0x2f
     ce4:	58 a9       	ldd	r21, Y+48	; 0x30
     ce6:	21 96       	adiw	r28, 0x01	; 1
     ce8:	6c ad       	ldd	r22, Y+60	; 0x3c
     cea:	7d ad       	ldd	r23, Y+61	; 0x3d
     cec:	8e ad       	ldd	r24, Y+62	; 0x3e
     cee:	9f ad       	ldd	r25, Y+63	; 0x3f
     cf0:	21 97       	sbiw	r28, 0x01	; 1
     cf2:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     cf6:	9b 01       	movw	r18, r22
     cf8:	ac 01       	movw	r20, r24
     cfa:	c3 01       	movw	r24, r6
     cfc:	b2 01       	movw	r22, r4
     cfe:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     d02:	6d 83       	std	Y+5, r22	; 0x05
     d04:	7e 83       	std	Y+6, r23	; 0x06
     d06:	8f 83       	std	Y+7, r24	; 0x07
     d08:	98 87       	std	Y+8, r25	; 0x08
     d0a:	29 a5       	ldd	r18, Y+41	; 0x29
     d0c:	3a a5       	ldd	r19, Y+42	; 0x2a
     d0e:	4b a5       	ldd	r20, Y+43	; 0x2b
     d10:	5c a5       	ldd	r21, Y+44	; 0x2c
     d12:	e1 96       	adiw	r28, 0x31	; 49
     d14:	6c ad       	ldd	r22, Y+60	; 0x3c
     d16:	7d ad       	ldd	r23, Y+61	; 0x3d
     d18:	8e ad       	ldd	r24, Y+62	; 0x3e
     d1a:	9f ad       	ldd	r25, Y+63	; 0x3f
     d1c:	e1 97       	sbiw	r28, 0x31	; 49
     d1e:	0e 94 1b 10 	call	0x2036	; 0x2036 <__subsf3>
     d22:	9b 01       	movw	r18, r22
     d24:	ac 01       	movw	r20, r24
     d26:	69 89       	ldd	r22, Y+17	; 0x11
     d28:	7a 89       	ldd	r23, Y+18	; 0x12
     d2a:	8b 89       	ldd	r24, Y+19	; 0x13
     d2c:	9c 89       	ldd	r25, Y+20	; 0x14
     d2e:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     d32:	9b 01       	movw	r18, r22
     d34:	ac 01       	movw	r20, r24
     d36:	6d 81       	ldd	r22, Y+5	; 0x05
     d38:	7e 81       	ldd	r23, Y+6	; 0x06
     d3a:	8f 81       	ldd	r24, Y+7	; 0x07
     d3c:	98 85       	ldd	r25, Y+8	; 0x08
     d3e:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     d42:	6d 83       	std	Y+5, r22	; 0x05
     d44:	7e 83       	std	Y+6, r23	; 0x06
     d46:	8f 83       	std	Y+7, r24	; 0x07
     d48:	98 87       	std	Y+8, r25	; 0x08
     d4a:	29 a9       	ldd	r18, Y+49	; 0x31
     d4c:	3a a9       	ldd	r19, Y+50	; 0x32
     d4e:	4b a9       	ldd	r20, Y+51	; 0x33
     d50:	5c a9       	ldd	r21, Y+52	; 0x34
     d52:	61 96       	adiw	r28, 0x11	; 17
     d54:	6c ad       	ldd	r22, Y+60	; 0x3c
     d56:	7d ad       	ldd	r23, Y+61	; 0x3d
     d58:	8e ad       	ldd	r24, Y+62	; 0x3e
     d5a:	9f ad       	ldd	r25, Y+63	; 0x3f
     d5c:	61 97       	sbiw	r28, 0x11	; 17
     d5e:	0e 94 1b 10 	call	0x2036	; 0x2036 <__subsf3>
     d62:	9b 01       	movw	r18, r22
     d64:	ac 01       	movw	r20, r24
     d66:	25 96       	adiw	r28, 0x05	; 5
     d68:	6c ad       	ldd	r22, Y+60	; 0x3c
     d6a:	7d ad       	ldd	r23, Y+61	; 0x3d
     d6c:	8e ad       	ldd	r24, Y+62	; 0x3e
     d6e:	9f ad       	ldd	r25, Y+63	; 0x3f
     d70:	25 97       	sbiw	r28, 0x05	; 5
     d72:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     d76:	9b 01       	movw	r18, r22
     d78:	ac 01       	movw	r20, r24
     d7a:	6d 81       	ldd	r22, Y+5	; 0x05
     d7c:	7e 81       	ldd	r23, Y+6	; 0x06
     d7e:	8f 81       	ldd	r24, Y+7	; 0x07
     d80:	98 85       	ldd	r25, Y+8	; 0x08
     d82:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     d86:	6d a7       	std	Y+45, r22	; 0x2d
     d88:	7e a7       	std	Y+46, r23	; 0x2e
     d8a:	8f a7       	std	Y+47, r24	; 0x2f
     d8c:	98 ab       	std	Y+48, r25	; 0x30
	hz = 2*mx*(q1q3 - q0q2) + 2*my*(q2q3 + q0q1) + 2*mz*(0.5 - q1q1 - q2q2);
     d8e:	29 ad       	ldd	r18, Y+57	; 0x39
     d90:	3a ad       	ldd	r19, Y+58	; 0x3a
     d92:	4b ad       	ldd	r20, Y+59	; 0x3b
     d94:	5c ad       	ldd	r21, Y+60	; 0x3c
     d96:	2d 96       	adiw	r28, 0x0d	; 13
     d98:	6c ad       	ldd	r22, Y+60	; 0x3c
     d9a:	7d ad       	ldd	r23, Y+61	; 0x3d
     d9c:	8e ad       	ldd	r24, Y+62	; 0x3e
     d9e:	9f ad       	ldd	r25, Y+63	; 0x3f
     da0:	2d 97       	sbiw	r28, 0x0d	; 13
     da2:	0e 94 1b 10 	call	0x2036	; 0x2036 <__subsf3>
     da6:	6d 83       	std	Y+5, r22	; 0x05
     da8:	7e 83       	std	Y+6, r23	; 0x06
     daa:	8f 83       	std	Y+7, r24	; 0x07
     dac:	98 87       	std	Y+8, r25	; 0x08
     dae:	29 a9       	ldd	r18, Y+49	; 0x31
     db0:	3a a9       	ldd	r19, Y+50	; 0x32
     db2:	4b a9       	ldd	r20, Y+51	; 0x33
     db4:	5c a9       	ldd	r21, Y+52	; 0x34
     db6:	61 96       	adiw	r28, 0x11	; 17
     db8:	6c ad       	ldd	r22, Y+60	; 0x3c
     dba:	7d ad       	ldd	r23, Y+61	; 0x3d
     dbc:	8e ad       	ldd	r24, Y+62	; 0x3e
     dbe:	9f ad       	ldd	r25, Y+63	; 0x3f
     dc0:	61 97       	sbiw	r28, 0x11	; 17
     dc2:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     dc6:	6d 87       	std	Y+13, r22	; 0x0d
     dc8:	7e 87       	std	Y+14, r23	; 0x0e
     dca:	8f 87       	std	Y+15, r24	; 0x0f
     dcc:	98 8b       	std	Y+16, r25	; 0x10
     dce:	29 a1       	ldd	r18, Y+33	; 0x21
     dd0:	3a a1       	ldd	r19, Y+34	; 0x22
     dd2:	4b a1       	ldd	r20, Y+35	; 0x23
     dd4:	5c a1       	ldd	r21, Y+36	; 0x24
     dd6:	e1 96       	adiw	r28, 0x31	; 49
     dd8:	6c ad       	ldd	r22, Y+60	; 0x3c
     dda:	7d ad       	ldd	r23, Y+61	; 0x3d
     ddc:	8e ad       	ldd	r24, Y+62	; 0x3e
     dde:	9f ad       	ldd	r25, Y+63	; 0x3f
     de0:	e1 97       	sbiw	r28, 0x31	; 49
     de2:	0e 94 1b 10 	call	0x2036	; 0x2036 <__subsf3>
     de6:	69 af       	std	Y+57, r22	; 0x39
     de8:	7a af       	std	Y+58, r23	; 0x3a
     dea:	8b af       	std	Y+59, r24	; 0x3b
     dec:	9c af       	std	Y+60, r25	; 0x3c
	bx = sqrt((hx*hx) + (hy*hy));
     dee:	ad 96       	adiw	r28, 0x2d	; 45
     df0:	2c ad       	ldd	r18, Y+60	; 0x3c
     df2:	3d ad       	ldd	r19, Y+61	; 0x3d
     df4:	4e ad       	ldd	r20, Y+62	; 0x3e
     df6:	5f ad       	ldd	r21, Y+63	; 0x3f
     df8:	ad 97       	sbiw	r28, 0x2d	; 45
     dfa:	ca 01       	movw	r24, r20
     dfc:	b9 01       	movw	r22, r18
     dfe:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     e02:	69 ab       	std	Y+49, r22	; 0x31
     e04:	7a ab       	std	Y+50, r23	; 0x32
     e06:	8b ab       	std	Y+51, r24	; 0x33
     e08:	9c ab       	std	Y+52, r25	; 0x34
     e0a:	2d a5       	ldd	r18, Y+45	; 0x2d
     e0c:	3e a5       	ldd	r19, Y+46	; 0x2e
     e0e:	4f a5       	ldd	r20, Y+47	; 0x2f
     e10:	58 a9       	ldd	r21, Y+48	; 0x30
     e12:	ca 01       	movw	r24, r20
     e14:	b9 01       	movw	r22, r18
     e16:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     e1a:	9b 01       	movw	r18, r22
     e1c:	ac 01       	movw	r20, r24
     e1e:	69 a9       	ldd	r22, Y+49	; 0x31
     e20:	7a a9       	ldd	r23, Y+50	; 0x32
     e22:	8b a9       	ldd	r24, Y+51	; 0x33
     e24:	9c a9       	ldd	r25, Y+52	; 0x34
     e26:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     e2a:	0e 94 df 12 	call	0x25be	; 0x25be <sqrt>
     e2e:	69 ab       	std	Y+49, r22	; 0x31
     e30:	7a ab       	std	Y+50, r23	; 0x32
     e32:	8b ab       	std	Y+51, r24	; 0x33
     e34:	9c ab       	std	Y+52, r25	; 0x34
	bz = hz;
	// 重力和磁链的估计方向(v and w)
	vx = 2*(q1q3 - q0q2);
     e36:	2d 81       	ldd	r18, Y+5	; 0x05
     e38:	3e 81       	ldd	r19, Y+6	; 0x06
     e3a:	4f 81       	ldd	r20, Y+7	; 0x07
     e3c:	58 85       	ldd	r21, Y+8	; 0x08
     e3e:	ca 01       	movw	r24, r20
     e40:	b9 01       	movw	r22, r18
     e42:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     e46:	6d a7       	std	Y+45, r22	; 0x2d
     e48:	7e a7       	std	Y+46, r23	; 0x2e
     e4a:	8f a7       	std	Y+47, r24	; 0x2f
     e4c:	98 ab       	std	Y+48, r25	; 0x30
	vy = 2*(q0q1 + q2q3);
     e4e:	2d 85       	ldd	r18, Y+13	; 0x0d
     e50:	3e 85       	ldd	r19, Y+14	; 0x0e
     e52:	4f 85       	ldd	r20, Y+15	; 0x0f
     e54:	58 89       	ldd	r21, Y+16	; 0x10
     e56:	ca 01       	movw	r24, r20
     e58:	b9 01       	movw	r22, r18
     e5a:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     e5e:	21 96       	adiw	r28, 0x01	; 1
     e60:	6c af       	std	Y+60, r22	; 0x3c
     e62:	7d af       	std	Y+61, r23	; 0x3d
     e64:	8e af       	std	Y+62, r24	; 0x3e
     e66:	9f af       	std	Y+63, r25	; 0x3f
     e68:	21 97       	sbiw	r28, 0x01	; 1
	double norm;
	float hx, hy, hz, bx, bz;
	float vx, vy, vz, wx, wy, wz;
	float ex, ey, ez;
	///辅助变量，以减少重复操作次数
	float q0q0 = q0*q0;
     e6a:	2d a9       	ldd	r18, Y+53	; 0x35
     e6c:	3e a9       	ldd	r19, Y+54	; 0x36
     e6e:	4f a9       	ldd	r20, Y+55	; 0x37
     e70:	58 ad       	ldd	r21, Y+56	; 0x38
     e72:	ca 01       	movw	r24, r20
     e74:	b9 01       	movw	r22, r18
     e76:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
	bx = sqrt((hx*hx) + (hy*hy));
	bz = hz;
	// 重力和磁链的估计方向(v and w)
	vx = 2*(q1q3 - q0q2);
	vy = 2*(q0q1 + q2q3);
	vz = q0q0 - q1q1 - q2q2 + q3q3;
     e7a:	29 96       	adiw	r28, 0x09	; 9
     e7c:	2c ad       	ldd	r18, Y+60	; 0x3c
     e7e:	3d ad       	ldd	r19, Y+61	; 0x3d
     e80:	4e ad       	ldd	r20, Y+62	; 0x3e
     e82:	5f ad       	ldd	r21, Y+63	; 0x3f
     e84:	29 97       	sbiw	r28, 0x09	; 9
     e86:	0e 94 1b 10 	call	0x2036	; 0x2036 <__subsf3>
     e8a:	29 a1       	ldd	r18, Y+33	; 0x21
     e8c:	3a a1       	ldd	r19, Y+34	; 0x22
     e8e:	4b a1       	ldd	r20, Y+35	; 0x23
     e90:	5c a1       	ldd	r21, Y+36	; 0x24
     e92:	0e 94 1b 10 	call	0x2036	; 0x2036 <__subsf3>
     e96:	29 a5       	ldd	r18, Y+41	; 0x29
     e98:	3a a5       	ldd	r19, Y+42	; 0x2a
     e9a:	4b a5       	ldd	r20, Y+43	; 0x2b
     e9c:	5c a5       	ldd	r21, Y+44	; 0x2c
     e9e:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     ea2:	69 a7       	std	Y+41, r22	; 0x29
     ea4:	7a a7       	std	Y+42, r23	; 0x2a
     ea6:	8b a7       	std	Y+43, r24	; 0x2b
     ea8:	9c a7       	std	Y+44, r25	; 0x2c
	wx = 2*bx*(0.5 - q2q2 - q3q3) + 2*bz*(q1q3 - q0q2);
     eaa:	29 a9       	ldd	r18, Y+49	; 0x31
     eac:	3a a9       	ldd	r19, Y+50	; 0x32
     eae:	4b a9       	ldd	r20, Y+51	; 0x33
     eb0:	5c a9       	ldd	r21, Y+52	; 0x34
     eb2:	ca 01       	movw	r24, r20
     eb4:	b9 01       	movw	r22, r18
     eb6:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     eba:	69 a3       	std	Y+33, r22	; 0x21
     ebc:	7a a3       	std	Y+34, r23	; 0x22
     ebe:	8b a3       	std	Y+35, r24	; 0x23
     ec0:	9c a3       	std	Y+36, r25	; 0x24
	my = my / norm;
	mz = mz / norm;
	//磁力计计算参考方向
	hx = 2*mx*(0.5 - q2q2 - q3q3) + 2*my*(q1q2 - q0q3) + 2*mz*(q1q3 + q0q2);
	hy = 2*mx*(q1q2 + q0q3) + 2*my*(0.5 - q1q1 - q3q3) + 2*mz*(q2q3 - q0q1);
	hz = 2*mx*(q1q3 - q0q2) + 2*my*(q2q3 + q0q1) + 2*mz*(0.5 - q1q1 - q2q2);
     ec2:	2d 81       	ldd	r18, Y+5	; 0x05
     ec4:	3e 81       	ldd	r19, Y+6	; 0x06
     ec6:	4f 81       	ldd	r20, Y+7	; 0x07
     ec8:	58 85       	ldd	r21, Y+8	; 0x08
     eca:	c3 01       	movw	r24, r6
     ecc:	b2 01       	movw	r22, r4
     ece:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     ed2:	2b 01       	movw	r4, r22
     ed4:	3c 01       	movw	r6, r24
     ed6:	2d 85       	ldd	r18, Y+13	; 0x0d
     ed8:	3e 85       	ldd	r19, Y+14	; 0x0e
     eda:	4f 85       	ldd	r20, Y+15	; 0x0f
     edc:	58 89       	ldd	r21, Y+16	; 0x10
     ede:	69 89       	ldd	r22, Y+17	; 0x11
     ee0:	7a 89       	ldd	r23, Y+18	; 0x12
     ee2:	8b 89       	ldd	r24, Y+19	; 0x13
     ee4:	9c 89       	ldd	r25, Y+20	; 0x14
     ee6:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     eea:	9b 01       	movw	r18, r22
     eec:	ac 01       	movw	r20, r24
     eee:	c3 01       	movw	r24, r6
     ef0:	b2 01       	movw	r22, r4
     ef2:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     ef6:	2b 01       	movw	r4, r22
     ef8:	3c 01       	movw	r6, r24
     efa:	29 ad       	ldd	r18, Y+57	; 0x39
     efc:	3a ad       	ldd	r19, Y+58	; 0x3a
     efe:	4b ad       	ldd	r20, Y+59	; 0x3b
     f00:	5c ad       	ldd	r21, Y+60	; 0x3c
     f02:	25 96       	adiw	r28, 0x05	; 5
     f04:	6c ad       	ldd	r22, Y+60	; 0x3c
     f06:	7d ad       	ldd	r23, Y+61	; 0x3d
     f08:	8e ad       	ldd	r24, Y+62	; 0x3e
     f0a:	9f ad       	ldd	r25, Y+63	; 0x3f
     f0c:	25 97       	sbiw	r28, 0x05	; 5
     f0e:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     f12:	9b 01       	movw	r18, r22
     f14:	ac 01       	movw	r20, r24
     f16:	c3 01       	movw	r24, r6
     f18:	b2 01       	movw	r22, r4
     f1a:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
	bz = hz;
	// 重力和磁链的估计方向(v and w)
	vx = 2*(q1q3 - q0q2);
	vy = 2*(q0q1 + q2q3);
	vz = q0q0 - q1q1 - q2q2 + q3q3;
	wx = 2*bx*(0.5 - q2q2 - q3q3) + 2*bz*(q1q3 - q0q2);
     f1e:	9b 01       	movw	r18, r22
     f20:	ac 01       	movw	r20, r24
     f22:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     f26:	69 8b       	std	Y+17, r22	; 0x11
     f28:	7a 8b       	std	Y+18, r23	; 0x12
     f2a:	8b 8b       	std	Y+19, r24	; 0x13
     f2c:	9c 8b       	std	Y+20, r25	; 0x14
     f2e:	29 a1       	ldd	r18, Y+33	; 0x21
     f30:	3a a1       	ldd	r19, Y+34	; 0x22
     f32:	4b a1       	ldd	r20, Y+35	; 0x23
     f34:	5c a1       	ldd	r21, Y+36	; 0x24
     f36:	a1 96       	adiw	r28, 0x21	; 33
     f38:	6c ad       	ldd	r22, Y+60	; 0x3c
     f3a:	7d ad       	ldd	r23, Y+61	; 0x3d
     f3c:	8e ad       	ldd	r24, Y+62	; 0x3e
     f3e:	9f ad       	ldd	r25, Y+63	; 0x3f
     f40:	a1 97       	sbiw	r28, 0x21	; 33
     f42:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     f46:	2b 01       	movw	r4, r22
     f48:	3c 01       	movw	r6, r24
     f4a:	29 89       	ldd	r18, Y+17	; 0x11
     f4c:	3a 89       	ldd	r19, Y+18	; 0x12
     f4e:	4b 89       	ldd	r20, Y+19	; 0x13
     f50:	5c 89       	ldd	r21, Y+20	; 0x14
     f52:	6d 81       	ldd	r22, Y+5	; 0x05
     f54:	7e 81       	ldd	r23, Y+6	; 0x06
     f56:	8f 81       	ldd	r24, Y+7	; 0x07
     f58:	98 85       	ldd	r25, Y+8	; 0x08
     f5a:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     f5e:	9b 01       	movw	r18, r22
     f60:	ac 01       	movw	r20, r24
     f62:	c3 01       	movw	r24, r6
     f64:	b2 01       	movw	r22, r4
     f66:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     f6a:	6d 83       	std	Y+5, r22	; 0x05
     f6c:	7e 83       	std	Y+6, r23	; 0x06
     f6e:	8f 83       	std	Y+7, r24	; 0x07
     f70:	98 87       	std	Y+8, r25	; 0x08
	wy = 2*bx*(q1q2 - q0q3) + 2*bz*(q0q1 + q2q3); 
     f72:	29 a1       	ldd	r18, Y+33	; 0x21
     f74:	3a a1       	ldd	r19, Y+34	; 0x22
     f76:	4b a1       	ldd	r20, Y+35	; 0x23
     f78:	5c a1       	ldd	r21, Y+36	; 0x24
     f7a:	a5 96       	adiw	r28, 0x25	; 37
     f7c:	6c ad       	ldd	r22, Y+60	; 0x3c
     f7e:	7d ad       	ldd	r23, Y+61	; 0x3d
     f80:	8e ad       	ldd	r24, Y+62	; 0x3e
     f82:	9f ad       	ldd	r25, Y+63	; 0x3f
     f84:	a5 97       	sbiw	r28, 0x25	; 37
     f86:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     f8a:	2b 01       	movw	r4, r22
     f8c:	3c 01       	movw	r6, r24
     f8e:	29 89       	ldd	r18, Y+17	; 0x11
     f90:	3a 89       	ldd	r19, Y+18	; 0x12
     f92:	4b 89       	ldd	r20, Y+19	; 0x13
     f94:	5c 89       	ldd	r21, Y+20	; 0x14
     f96:	6d 85       	ldd	r22, Y+13	; 0x0d
     f98:	7e 85       	ldd	r23, Y+14	; 0x0e
     f9a:	8f 85       	ldd	r24, Y+15	; 0x0f
     f9c:	98 89       	ldd	r25, Y+16	; 0x10
     f9e:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     fa2:	9b 01       	movw	r18, r22
     fa4:	ac 01       	movw	r20, r24
     fa6:	c3 01       	movw	r24, r6
     fa8:	b2 01       	movw	r22, r4
     faa:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     fae:	6d 87       	std	Y+13, r22	; 0x0d
     fb0:	7e 87       	std	Y+14, r23	; 0x0e
     fb2:	8f 87       	std	Y+15, r24	; 0x0f
     fb4:	98 8b       	std	Y+16, r25	; 0x10
	wz =2*bx*(q0q2 + q1q3) + 2*bz*(0.5 - q1q1 - q2q2);
     fb6:	29 a1       	ldd	r18, Y+33	; 0x21
     fb8:	3a a1       	ldd	r19, Y+34	; 0x22
     fba:	4b a1       	ldd	r20, Y+35	; 0x23
     fbc:	5c a1       	ldd	r21, Y+36	; 0x24
     fbe:	a9 96       	adiw	r28, 0x29	; 41
     fc0:	6c ad       	ldd	r22, Y+60	; 0x3c
     fc2:	7d ad       	ldd	r23, Y+61	; 0x3d
     fc4:	8e ad       	ldd	r24, Y+62	; 0x3e
     fc6:	9f ad       	ldd	r25, Y+63	; 0x3f
     fc8:	a9 97       	sbiw	r28, 0x29	; 41
     fca:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     fce:	2b 01       	movw	r4, r22
     fd0:	3c 01       	movw	r6, r24
     fd2:	29 89       	ldd	r18, Y+17	; 0x11
     fd4:	3a 89       	ldd	r19, Y+18	; 0x12
     fd6:	4b 89       	ldd	r20, Y+19	; 0x13
     fd8:	5c 89       	ldd	r21, Y+20	; 0x14
     fda:	69 ad       	ldd	r22, Y+57	; 0x39
     fdc:	7a ad       	ldd	r23, Y+58	; 0x3a
     fde:	8b ad       	ldd	r24, Y+59	; 0x3b
     fe0:	9c ad       	ldd	r25, Y+60	; 0x3c
     fe2:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
     fe6:	9b 01       	movw	r18, r22
     fe8:	ac 01       	movw	r20, r24
     fea:	c3 01       	movw	r24, r6
     fec:	b2 01       	movw	r22, r4
     fee:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
     ff2:	69 8b       	std	Y+17, r22	; 0x11
     ff4:	7a 8b       	std	Y+18, r23	; 0x12
     ff6:	8b 8b       	std	Y+19, r24	; 0x13
     ff8:	9c 8b       	std	Y+20, r25	; 0x14
	// 误差计算
	ex = (ay*vz - az*vy) + (my*wz - mz*wy);
     ffa:	29 a5       	ldd	r18, Y+41	; 0x29
     ffc:	3a a5       	ldd	r19, Y+42	; 0x2a
     ffe:	4b a5       	ldd	r20, Y+43	; 0x2b
    1000:	5c a5       	ldd	r21, Y+44	; 0x2c
    1002:	69 96       	adiw	r28, 0x19	; 25
    1004:	6c ad       	ldd	r22, Y+60	; 0x3c
    1006:	7d ad       	ldd	r23, Y+61	; 0x3d
    1008:	8e ad       	ldd	r24, Y+62	; 0x3e
    100a:	9f ad       	ldd	r25, Y+63	; 0x3f
    100c:	69 97       	sbiw	r28, 0x19	; 25
    100e:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1012:	2b 01       	movw	r4, r22
    1014:	3c 01       	movw	r6, r24
    1016:	21 96       	adiw	r28, 0x01	; 1
    1018:	2c ad       	ldd	r18, Y+60	; 0x3c
    101a:	3d ad       	ldd	r19, Y+61	; 0x3d
    101c:	4e ad       	ldd	r20, Y+62	; 0x3e
    101e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1020:	21 97       	sbiw	r28, 0x01	; 1
    1022:	6d 96       	adiw	r28, 0x1d	; 29
    1024:	6c ad       	ldd	r22, Y+60	; 0x3c
    1026:	7d ad       	ldd	r23, Y+61	; 0x3d
    1028:	8e ad       	ldd	r24, Y+62	; 0x3e
    102a:	9f ad       	ldd	r25, Y+63	; 0x3f
    102c:	6d 97       	sbiw	r28, 0x1d	; 29
    102e:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1032:	9b 01       	movw	r18, r22
    1034:	ac 01       	movw	r20, r24
    1036:	c3 01       	movw	r24, r6
    1038:	b2 01       	movw	r22, r4
    103a:	0e 94 1b 10 	call	0x2036	; 0x2036 <__subsf3>
    103e:	69 a3       	std	Y+33, r22	; 0x21
    1040:	7a a3       	std	Y+34, r23	; 0x22
    1042:	8b a3       	std	Y+35, r24	; 0x23
    1044:	9c a3       	std	Y+36, r25	; 0x24
    1046:	29 89       	ldd	r18, Y+17	; 0x11
    1048:	3a 89       	ldd	r19, Y+18	; 0x12
    104a:	4b 89       	ldd	r20, Y+19	; 0x13
    104c:	5c 89       	ldd	r21, Y+20	; 0x14
    104e:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1050:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1052:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1054:	98 a1       	ldd	r25, Y+32	; 0x20
    1056:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    105a:	2b 01       	movw	r4, r22
    105c:	3c 01       	movw	r6, r24
    105e:	2d 85       	ldd	r18, Y+13	; 0x0d
    1060:	3e 85       	ldd	r19, Y+14	; 0x0e
    1062:	4f 85       	ldd	r20, Y+15	; 0x0f
    1064:	58 89       	ldd	r21, Y+16	; 0x10
    1066:	69 85       	ldd	r22, Y+9	; 0x09
    1068:	7a 85       	ldd	r23, Y+10	; 0x0a
    106a:	8b 85       	ldd	r24, Y+11	; 0x0b
    106c:	9c 85       	ldd	r25, Y+12	; 0x0c
    106e:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1072:	9b 01       	movw	r18, r22
    1074:	ac 01       	movw	r20, r24
    1076:	c3 01       	movw	r24, r6
    1078:	b2 01       	movw	r22, r4
    107a:	0e 94 1b 10 	call	0x2036	; 0x2036 <__subsf3>
    107e:	9b 01       	movw	r18, r22
    1080:	ac 01       	movw	r20, r24
    1082:	69 a1       	ldd	r22, Y+33	; 0x21
    1084:	7a a1       	ldd	r23, Y+34	; 0x22
    1086:	8b a1       	ldd	r24, Y+35	; 0x23
    1088:	9c a1       	ldd	r25, Y+36	; 0x24
    108a:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    108e:	69 a3       	std	Y+33, r22	; 0x21
    1090:	7a a3       	std	Y+34, r23	; 0x22
    1092:	8b a3       	std	Y+35, r24	; 0x23
    1094:	9c a3       	std	Y+36, r25	; 0x24
	ey = (az*vx - ax*vz) + (mz*wx - mx*wz);
    1096:	2d a5       	ldd	r18, Y+45	; 0x2d
    1098:	3e a5       	ldd	r19, Y+46	; 0x2e
    109a:	4f a5       	ldd	r20, Y+47	; 0x2f
    109c:	58 a9       	ldd	r21, Y+48	; 0x30
    109e:	6d 96       	adiw	r28, 0x1d	; 29
    10a0:	6c ad       	ldd	r22, Y+60	; 0x3c
    10a2:	7d ad       	ldd	r23, Y+61	; 0x3d
    10a4:	8e ad       	ldd	r24, Y+62	; 0x3e
    10a6:	9f ad       	ldd	r25, Y+63	; 0x3f
    10a8:	6d 97       	sbiw	r28, 0x1d	; 29
    10aa:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    10ae:	2b 01       	movw	r4, r22
    10b0:	3c 01       	movw	r6, r24
    10b2:	29 a5       	ldd	r18, Y+41	; 0x29
    10b4:	3a a5       	ldd	r19, Y+42	; 0x2a
    10b6:	4b a5       	ldd	r20, Y+43	; 0x2b
    10b8:	5c a5       	ldd	r21, Y+44	; 0x2c
    10ba:	65 96       	adiw	r28, 0x15	; 21
    10bc:	6c ad       	ldd	r22, Y+60	; 0x3c
    10be:	7d ad       	ldd	r23, Y+61	; 0x3d
    10c0:	8e ad       	ldd	r24, Y+62	; 0x3e
    10c2:	9f ad       	ldd	r25, Y+63	; 0x3f
    10c4:	65 97       	sbiw	r28, 0x15	; 21
    10c6:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    10ca:	9b 01       	movw	r18, r22
    10cc:	ac 01       	movw	r20, r24
    10ce:	c3 01       	movw	r24, r6
    10d0:	b2 01       	movw	r22, r4
    10d2:	0e 94 1b 10 	call	0x2036	; 0x2036 <__subsf3>
    10d6:	69 a7       	std	Y+41, r22	; 0x29
    10d8:	7a a7       	std	Y+42, r23	; 0x2a
    10da:	8b a7       	std	Y+43, r24	; 0x2b
    10dc:	9c a7       	std	Y+44, r25	; 0x2c
    10de:	2d 81       	ldd	r18, Y+5	; 0x05
    10e0:	3e 81       	ldd	r19, Y+6	; 0x06
    10e2:	4f 81       	ldd	r20, Y+7	; 0x07
    10e4:	58 85       	ldd	r21, Y+8	; 0x08
    10e6:	69 85       	ldd	r22, Y+9	; 0x09
    10e8:	7a 85       	ldd	r23, Y+10	; 0x0a
    10ea:	8b 85       	ldd	r24, Y+11	; 0x0b
    10ec:	9c 85       	ldd	r25, Y+12	; 0x0c
    10ee:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    10f2:	2b 01       	movw	r4, r22
    10f4:	3c 01       	movw	r6, r24
    10f6:	29 89       	ldd	r18, Y+17	; 0x11
    10f8:	3a 89       	ldd	r19, Y+18	; 0x12
    10fa:	4b 89       	ldd	r20, Y+19	; 0x13
    10fc:	5c 89       	ldd	r21, Y+20	; 0x14
    10fe:	69 81       	ldd	r22, Y+1	; 0x01
    1100:	7a 81       	ldd	r23, Y+2	; 0x02
    1102:	8b 81       	ldd	r24, Y+3	; 0x03
    1104:	9c 81       	ldd	r25, Y+4	; 0x04
    1106:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    110a:	9b 01       	movw	r18, r22
    110c:	ac 01       	movw	r20, r24
    110e:	c3 01       	movw	r24, r6
    1110:	b2 01       	movw	r22, r4
    1112:	0e 94 1b 10 	call	0x2036	; 0x2036 <__subsf3>
    1116:	9b 01       	movw	r18, r22
    1118:	ac 01       	movw	r20, r24
    111a:	69 a5       	ldd	r22, Y+41	; 0x29
    111c:	7a a5       	ldd	r23, Y+42	; 0x2a
    111e:	8b a5       	ldd	r24, Y+43	; 0x2b
    1120:	9c a5       	ldd	r25, Y+44	; 0x2c
    1122:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    1126:	69 87       	std	Y+9, r22	; 0x09
    1128:	7a 87       	std	Y+10, r23	; 0x0a
    112a:	8b 87       	std	Y+11, r24	; 0x0b
    112c:	9c 87       	std	Y+12, r25	; 0x0c
	ez = (ax*vy - ay*vx) + (mx*wy - my*wx);
    112e:	21 96       	adiw	r28, 0x01	; 1
    1130:	2c ad       	ldd	r18, Y+60	; 0x3c
    1132:	3d ad       	ldd	r19, Y+61	; 0x3d
    1134:	4e ad       	ldd	r20, Y+62	; 0x3e
    1136:	5f ad       	ldd	r21, Y+63	; 0x3f
    1138:	21 97       	sbiw	r28, 0x01	; 1
    113a:	65 96       	adiw	r28, 0x15	; 21
    113c:	6c ad       	ldd	r22, Y+60	; 0x3c
    113e:	7d ad       	ldd	r23, Y+61	; 0x3d
    1140:	8e ad       	ldd	r24, Y+62	; 0x3e
    1142:	9f ad       	ldd	r25, Y+63	; 0x3f
    1144:	65 97       	sbiw	r28, 0x15	; 21
    1146:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    114a:	2b 01       	movw	r4, r22
    114c:	3c 01       	movw	r6, r24
    114e:	2d a5       	ldd	r18, Y+45	; 0x2d
    1150:	3e a5       	ldd	r19, Y+46	; 0x2e
    1152:	4f a5       	ldd	r20, Y+47	; 0x2f
    1154:	58 a9       	ldd	r21, Y+48	; 0x30
    1156:	69 96       	adiw	r28, 0x19	; 25
    1158:	6c ad       	ldd	r22, Y+60	; 0x3c
    115a:	7d ad       	ldd	r23, Y+61	; 0x3d
    115c:	8e ad       	ldd	r24, Y+62	; 0x3e
    115e:	9f ad       	ldd	r25, Y+63	; 0x3f
    1160:	69 97       	sbiw	r28, 0x19	; 25
    1162:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1166:	9b 01       	movw	r18, r22
    1168:	ac 01       	movw	r20, r24
    116a:	c3 01       	movw	r24, r6
    116c:	b2 01       	movw	r22, r4
    116e:	0e 94 1b 10 	call	0x2036	; 0x2036 <__subsf3>
    1172:	2b 01       	movw	r4, r22
    1174:	3c 01       	movw	r6, r24
    1176:	2d 85       	ldd	r18, Y+13	; 0x0d
    1178:	3e 85       	ldd	r19, Y+14	; 0x0e
    117a:	4f 85       	ldd	r20, Y+15	; 0x0f
    117c:	58 89       	ldd	r21, Y+16	; 0x10
    117e:	69 81       	ldd	r22, Y+1	; 0x01
    1180:	7a 81       	ldd	r23, Y+2	; 0x02
    1182:	8b 81       	ldd	r24, Y+3	; 0x03
    1184:	9c 81       	ldd	r25, Y+4	; 0x04
    1186:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    118a:	69 83       	std	Y+1, r22	; 0x01
    118c:	7a 83       	std	Y+2, r23	; 0x02
    118e:	8b 83       	std	Y+3, r24	; 0x03
    1190:	9c 83       	std	Y+4, r25	; 0x04
    1192:	2d 81       	ldd	r18, Y+5	; 0x05
    1194:	3e 81       	ldd	r19, Y+6	; 0x06
    1196:	4f 81       	ldd	r20, Y+7	; 0x07
    1198:	58 85       	ldd	r21, Y+8	; 0x08
    119a:	6d 8d       	ldd	r22, Y+29	; 0x1d
    119c:	7e 8d       	ldd	r23, Y+30	; 0x1e
    119e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    11a0:	98 a1       	ldd	r25, Y+32	; 0x20
    11a2:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    11a6:	9b 01       	movw	r18, r22
    11a8:	ac 01       	movw	r20, r24
    11aa:	69 81       	ldd	r22, Y+1	; 0x01
    11ac:	7a 81       	ldd	r23, Y+2	; 0x02
    11ae:	8b 81       	ldd	r24, Y+3	; 0x03
    11b0:	9c 81       	ldd	r25, Y+4	; 0x04
    11b2:	0e 94 1b 10 	call	0x2036	; 0x2036 <__subsf3>
    11b6:	9b 01       	movw	r18, r22
    11b8:	ac 01       	movw	r20, r24
    11ba:	c3 01       	movw	r24, r6
    11bc:	b2 01       	movw	r22, r4
    11be:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    11c2:	69 83       	std	Y+1, r22	; 0x01
    11c4:	7a 83       	std	Y+2, r23	; 0x02
    11c6:	8b 83       	std	Y+3, r24	; 0x03
    11c8:	9c 83       	std	Y+4, r25	; 0x04
	//积分误差比例积分增益
	exInt = exInt + ex*Ki;
    11ca:	2f e6       	ldi	r18, 0x6F	; 111
    11cc:	32 e1       	ldi	r19, 0x12	; 18
    11ce:	43 e8       	ldi	r20, 0x83	; 131
    11d0:	5a e3       	ldi	r21, 0x3A	; 58
    11d2:	69 a1       	ldd	r22, Y+33	; 0x21
    11d4:	7a a1       	ldd	r23, Y+34	; 0x22
    11d6:	8b a1       	ldd	r24, Y+35	; 0x23
    11d8:	9c a1       	ldd	r25, Y+36	; 0x24
    11da:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    11de:	20 91 6a 06 	lds	r18, 0x066A
    11e2:	30 91 6b 06 	lds	r19, 0x066B
    11e6:	40 91 6c 06 	lds	r20, 0x066C
    11ea:	50 91 6d 06 	lds	r21, 0x066D
    11ee:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    11f2:	2b 01       	movw	r4, r22
    11f4:	3c 01       	movw	r6, r24
    11f6:	60 93 6a 06 	sts	0x066A, r22
    11fa:	70 93 6b 06 	sts	0x066B, r23
    11fe:	80 93 6c 06 	sts	0x066C, r24
    1202:	90 93 6d 06 	sts	0x066D, r25
	eyInt = eyInt + ey*Ki;
    1206:	2f e6       	ldi	r18, 0x6F	; 111
    1208:	32 e1       	ldi	r19, 0x12	; 18
    120a:	43 e8       	ldi	r20, 0x83	; 131
    120c:	5a e3       	ldi	r21, 0x3A	; 58
    120e:	69 85       	ldd	r22, Y+9	; 0x09
    1210:	7a 85       	ldd	r23, Y+10	; 0x0a
    1212:	8b 85       	ldd	r24, Y+11	; 0x0b
    1214:	9c 85       	ldd	r25, Y+12	; 0x0c
    1216:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    121a:	20 91 66 06 	lds	r18, 0x0666
    121e:	30 91 67 06 	lds	r19, 0x0667
    1222:	40 91 68 06 	lds	r20, 0x0668
    1226:	50 91 69 06 	lds	r21, 0x0669
    122a:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    122e:	6d 83       	std	Y+5, r22	; 0x05
    1230:	7e 83       	std	Y+6, r23	; 0x06
    1232:	8f 83       	std	Y+7, r24	; 0x07
    1234:	98 87       	std	Y+8, r25	; 0x08
    1236:	60 93 66 06 	sts	0x0666, r22
    123a:	70 93 67 06 	sts	0x0667, r23
    123e:	80 93 68 06 	sts	0x0668, r24
    1242:	90 93 69 06 	sts	0x0669, r25
	ezInt = ezInt + ez*Ki;
    1246:	2f e6       	ldi	r18, 0x6F	; 111
    1248:	32 e1       	ldi	r19, 0x12	; 18
    124a:	43 e8       	ldi	r20, 0x83	; 131
    124c:	5a e3       	ldi	r21, 0x3A	; 58
    124e:	69 81       	ldd	r22, Y+1	; 0x01
    1250:	7a 81       	ldd	r23, Y+2	; 0x02
    1252:	8b 81       	ldd	r24, Y+3	; 0x03
    1254:	9c 81       	ldd	r25, Y+4	; 0x04
    1256:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    125a:	20 91 62 06 	lds	r18, 0x0662
    125e:	30 91 63 06 	lds	r19, 0x0663
    1262:	40 91 64 06 	lds	r20, 0x0664
    1266:	50 91 65 06 	lds	r21, 0x0665
    126a:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    126e:	6d 87       	std	Y+13, r22	; 0x0d
    1270:	7e 87       	std	Y+14, r23	; 0x0e
    1272:	8f 87       	std	Y+15, r24	; 0x0f
    1274:	98 8b       	std	Y+16, r25	; 0x10
    1276:	60 93 62 06 	sts	0x0662, r22
    127a:	70 93 63 06 	sts	0x0663, r23
    127e:	80 93 64 06 	sts	0x0664, r24
    1282:	90 93 65 06 	sts	0x0665, r25
	//调整陀螺仪的测量
  	gx = gx + Kp*ex + exInt;
    1286:	20 e0       	ldi	r18, 0x00	; 0
    1288:	30 e0       	ldi	r19, 0x00	; 0
    128a:	48 e4       	ldi	r20, 0x48	; 72
    128c:	52 e4       	ldi	r21, 0x42	; 66
    128e:	69 a1       	ldd	r22, Y+33	; 0x21
    1290:	7a a1       	ldd	r23, Y+34	; 0x22
    1292:	8b a1       	ldd	r24, Y+35	; 0x23
    1294:	9c a1       	ldd	r25, Y+36	; 0x24
    1296:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    129a:	a6 01       	movw	r20, r12
    129c:	95 01       	movw	r18, r10
    129e:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    12a2:	9b 01       	movw	r18, r22
    12a4:	ac 01       	movw	r20, r24
    12a6:	c3 01       	movw	r24, r6
    12a8:	b2 01       	movw	r22, r4
    12aa:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    12ae:	6d 8f       	std	Y+29, r22	; 0x1d
    12b0:	7e 8f       	std	Y+30, r23	; 0x1e
    12b2:	8f 8f       	std	Y+31, r24	; 0x1f
    12b4:	98 a3       	std	Y+32, r25	; 0x20
   	gy = gy + Kp*ey + eyInt;
    12b6:	20 e0       	ldi	r18, 0x00	; 0
    12b8:	30 e0       	ldi	r19, 0x00	; 0
    12ba:	48 e4       	ldi	r20, 0x48	; 72
    12bc:	52 e4       	ldi	r21, 0x42	; 66
    12be:	69 85       	ldd	r22, Y+9	; 0x09
    12c0:	7a 85       	ldd	r23, Y+10	; 0x0a
    12c2:	8b 85       	ldd	r24, Y+11	; 0x0b
    12c4:	9c 85       	ldd	r25, Y+12	; 0x0c
    12c6:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    12ca:	cd 57       	subi	r28, 0x7D	; 125
    12cc:	df 4f       	sbci	r29, 0xFF	; 255
    12ce:	28 81       	ld	r18, Y
    12d0:	39 81       	ldd	r19, Y+1	; 0x01
    12d2:	4a 81       	ldd	r20, Y+2	; 0x02
    12d4:	5b 81       	ldd	r21, Y+3	; 0x03
    12d6:	c3 58       	subi	r28, 0x83	; 131
    12d8:	d0 40       	sbci	r29, 0x00	; 0
    12da:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    12de:	9b 01       	movw	r18, r22
    12e0:	ac 01       	movw	r20, r24
    12e2:	6d 81       	ldd	r22, Y+5	; 0x05
    12e4:	7e 81       	ldd	r23, Y+6	; 0x06
    12e6:	8f 81       	ldd	r24, Y+7	; 0x07
    12e8:	98 85       	ldd	r25, Y+8	; 0x08
    12ea:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    12ee:	69 87       	std	Y+9, r22	; 0x09
    12f0:	7a 87       	std	Y+10, r23	; 0x0a
    12f2:	8b 87       	std	Y+11, r24	; 0x0b
    12f4:	9c 87       	std	Y+12, r25	; 0x0c
   	gz = gz + Kp*ez + ezInt;
    12f6:	20 e0       	ldi	r18, 0x00	; 0
    12f8:	30 e0       	ldi	r19, 0x00	; 0
    12fa:	48 e4       	ldi	r20, 0x48	; 72
    12fc:	52 e4       	ldi	r21, 0x42	; 66
    12fe:	69 81       	ldd	r22, Y+1	; 0x01
    1300:	7a 81       	ldd	r23, Y+2	; 0x02
    1302:	8b 81       	ldd	r24, Y+3	; 0x03
    1304:	9c 81       	ldd	r25, Y+4	; 0x04
    1306:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    130a:	c9 57       	subi	r28, 0x79	; 121
    130c:	df 4f       	sbci	r29, 0xFF	; 255
    130e:	28 81       	ld	r18, Y
    1310:	39 81       	ldd	r19, Y+1	; 0x01
    1312:	4a 81       	ldd	r20, Y+2	; 0x02
    1314:	5b 81       	ldd	r21, Y+3	; 0x03
    1316:	c7 58       	subi	r28, 0x87	; 135
    1318:	d0 40       	sbci	r29, 0x00	; 0
    131a:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    131e:	9b 01       	movw	r18, r22
    1320:	ac 01       	movw	r20, r24
    1322:	6d 85       	ldd	r22, Y+13	; 0x0d
    1324:	7e 85       	ldd	r23, Y+14	; 0x0e
    1326:	8f 85       	ldd	r24, Y+15	; 0x0f
    1328:	98 89       	ldd	r25, Y+16	; 0x10
    132a:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    132e:	2b 01       	movw	r4, r22
    1330:	3c 01       	movw	r6, r24
	
	
	
	
	// 四元数整合和规范化
	q0 = q0 + (-q1*gx - q2*gy - q3*gz)*halfT;
    1332:	80 91 64 00 	lds	r24, 0x0064
    1336:	90 91 65 00 	lds	r25, 0x0065
    133a:	a0 91 66 00 	lds	r26, 0x0066
    133e:	b0 91 67 00 	lds	r27, 0x0067
    1342:	89 83       	std	Y+1, r24	; 0x01
    1344:	9a 83       	std	Y+2, r25	; 0x02
    1346:	ab 83       	std	Y+3, r26	; 0x03
    1348:	bc 83       	std	Y+4, r27	; 0x04
    134a:	69 8d       	ldd	r22, Y+25	; 0x19
    134c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    134e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1350:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1352:	90 58       	subi	r25, 0x80	; 128
    1354:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1356:	3e 8d       	ldd	r19, Y+30	; 0x1e
    1358:	4f 8d       	ldd	r20, Y+31	; 0x1f
    135a:	58 a1       	ldd	r21, Y+32	; 0x20
    135c:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1360:	6b 01       	movw	r12, r22
    1362:	7c 01       	movw	r14, r24
    1364:	29 85       	ldd	r18, Y+9	; 0x09
    1366:	3a 85       	ldd	r19, Y+10	; 0x0a
    1368:	4b 85       	ldd	r20, Y+11	; 0x0b
    136a:	5c 85       	ldd	r21, Y+12	; 0x0c
    136c:	6d 89       	ldd	r22, Y+21	; 0x15
    136e:	7e 89       	ldd	r23, Y+22	; 0x16
    1370:	8f 89       	ldd	r24, Y+23	; 0x17
    1372:	98 8d       	ldd	r25, Y+24	; 0x18
    1374:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1378:	9b 01       	movw	r18, r22
    137a:	ac 01       	movw	r20, r24
    137c:	c7 01       	movw	r24, r14
    137e:	b6 01       	movw	r22, r12
    1380:	0e 94 1b 10 	call	0x2036	; 0x2036 <__subsf3>
    1384:	6b 01       	movw	r12, r22
    1386:	7c 01       	movw	r14, r24
    1388:	a3 01       	movw	r20, r6
    138a:	92 01       	movw	r18, r4
    138c:	6d a1       	ldd	r22, Y+37	; 0x25
    138e:	7e a1       	ldd	r23, Y+38	; 0x26
    1390:	8f a1       	ldd	r24, Y+39	; 0x27
    1392:	98 a5       	ldd	r25, Y+40	; 0x28
    1394:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1398:	9b 01       	movw	r18, r22
    139a:	ac 01       	movw	r20, r24
    139c:	c7 01       	movw	r24, r14
    139e:	b6 01       	movw	r22, r12
    13a0:	0e 94 1b 10 	call	0x2036	; 0x2036 <__subsf3>
    13a4:	29 81       	ldd	r18, Y+1	; 0x01
    13a6:	3a 81       	ldd	r19, Y+2	; 0x02
    13a8:	4b 81       	ldd	r20, Y+3	; 0x03
    13aa:	5c 81       	ldd	r21, Y+4	; 0x04
    13ac:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    13b0:	9b 01       	movw	r18, r22
    13b2:	ac 01       	movw	r20, r24
    13b4:	6d a9       	ldd	r22, Y+53	; 0x35
    13b6:	7e a9       	ldd	r23, Y+54	; 0x36
    13b8:	8f a9       	ldd	r24, Y+55	; 0x37
    13ba:	98 ad       	ldd	r25, Y+56	; 0x38
    13bc:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    13c0:	4b 01       	movw	r8, r22
    13c2:	5c 01       	movw	r10, r24
	q1 = q1 + (q0*gx + q2*gz - q3*gy)*halfT;
    13c4:	9b 01       	movw	r18, r22
    13c6:	ac 01       	movw	r20, r24
    13c8:	6d 8d       	ldd	r22, Y+29	; 0x1d
    13ca:	7e 8d       	ldd	r23, Y+30	; 0x1e
    13cc:	8f 8d       	ldd	r24, Y+31	; 0x1f
    13ce:	98 a1       	ldd	r25, Y+32	; 0x20
    13d0:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    13d4:	6b 01       	movw	r12, r22
    13d6:	7c 01       	movw	r14, r24
    13d8:	a3 01       	movw	r20, r6
    13da:	92 01       	movw	r18, r4
    13dc:	6d 89       	ldd	r22, Y+21	; 0x15
    13de:	7e 89       	ldd	r23, Y+22	; 0x16
    13e0:	8f 89       	ldd	r24, Y+23	; 0x17
    13e2:	98 8d       	ldd	r25, Y+24	; 0x18
    13e4:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    13e8:	9b 01       	movw	r18, r22
    13ea:	ac 01       	movw	r20, r24
    13ec:	c7 01       	movw	r24, r14
    13ee:	b6 01       	movw	r22, r12
    13f0:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    13f4:	6b 01       	movw	r12, r22
    13f6:	7c 01       	movw	r14, r24
    13f8:	29 85       	ldd	r18, Y+9	; 0x09
    13fa:	3a 85       	ldd	r19, Y+10	; 0x0a
    13fc:	4b 85       	ldd	r20, Y+11	; 0x0b
    13fe:	5c 85       	ldd	r21, Y+12	; 0x0c
    1400:	6d a1       	ldd	r22, Y+37	; 0x25
    1402:	7e a1       	ldd	r23, Y+38	; 0x26
    1404:	8f a1       	ldd	r24, Y+39	; 0x27
    1406:	98 a5       	ldd	r25, Y+40	; 0x28
    1408:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    140c:	9b 01       	movw	r18, r22
    140e:	ac 01       	movw	r20, r24
    1410:	c7 01       	movw	r24, r14
    1412:	b6 01       	movw	r22, r12
    1414:	0e 94 1b 10 	call	0x2036	; 0x2036 <__subsf3>
    1418:	9b 01       	movw	r18, r22
    141a:	ac 01       	movw	r20, r24
    141c:	69 81       	ldd	r22, Y+1	; 0x01
    141e:	7a 81       	ldd	r23, Y+2	; 0x02
    1420:	8b 81       	ldd	r24, Y+3	; 0x03
    1422:	9c 81       	ldd	r25, Y+4	; 0x04
    1424:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1428:	9b 01       	movw	r18, r22
    142a:	ac 01       	movw	r20, r24
    142c:	69 8d       	ldd	r22, Y+25	; 0x19
    142e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1430:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1432:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1434:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    1438:	69 8f       	std	Y+25, r22	; 0x19
    143a:	7a 8f       	std	Y+26, r23	; 0x1a
    143c:	8b 8f       	std	Y+27, r24	; 0x1b
    143e:	9c 8f       	std	Y+28, r25	; 0x1c
	q2 = q2 + (q0*gy - q1*gz + q3*gx)*halfT;
    1440:	a5 01       	movw	r20, r10
    1442:	94 01       	movw	r18, r8
    1444:	69 85       	ldd	r22, Y+9	; 0x09
    1446:	7a 85       	ldd	r23, Y+10	; 0x0a
    1448:	8b 85       	ldd	r24, Y+11	; 0x0b
    144a:	9c 85       	ldd	r25, Y+12	; 0x0c
    144c:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1450:	6b 01       	movw	r12, r22
    1452:	7c 01       	movw	r14, r24
    1454:	29 8d       	ldd	r18, Y+25	; 0x19
    1456:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1458:	4b 8d       	ldd	r20, Y+27	; 0x1b
    145a:	5c 8d       	ldd	r21, Y+28	; 0x1c
    145c:	c3 01       	movw	r24, r6
    145e:	b2 01       	movw	r22, r4
    1460:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1464:	9b 01       	movw	r18, r22
    1466:	ac 01       	movw	r20, r24
    1468:	c7 01       	movw	r24, r14
    146a:	b6 01       	movw	r22, r12
    146c:	0e 94 1b 10 	call	0x2036	; 0x2036 <__subsf3>
    1470:	6b 01       	movw	r12, r22
    1472:	7c 01       	movw	r14, r24
    1474:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1476:	3e 8d       	ldd	r19, Y+30	; 0x1e
    1478:	4f 8d       	ldd	r20, Y+31	; 0x1f
    147a:	58 a1       	ldd	r21, Y+32	; 0x20
    147c:	6d a1       	ldd	r22, Y+37	; 0x25
    147e:	7e a1       	ldd	r23, Y+38	; 0x26
    1480:	8f a1       	ldd	r24, Y+39	; 0x27
    1482:	98 a5       	ldd	r25, Y+40	; 0x28
    1484:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1488:	9b 01       	movw	r18, r22
    148a:	ac 01       	movw	r20, r24
    148c:	c7 01       	movw	r24, r14
    148e:	b6 01       	movw	r22, r12
    1490:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    1494:	9b 01       	movw	r18, r22
    1496:	ac 01       	movw	r20, r24
    1498:	69 81       	ldd	r22, Y+1	; 0x01
    149a:	7a 81       	ldd	r23, Y+2	; 0x02
    149c:	8b 81       	ldd	r24, Y+3	; 0x03
    149e:	9c 81       	ldd	r25, Y+4	; 0x04
    14a0:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    14a4:	9b 01       	movw	r18, r22
    14a6:	ac 01       	movw	r20, r24
    14a8:	6d 89       	ldd	r22, Y+21	; 0x15
    14aa:	7e 89       	ldd	r23, Y+22	; 0x16
    14ac:	8f 89       	ldd	r24, Y+23	; 0x17
    14ae:	98 8d       	ldd	r25, Y+24	; 0x18
    14b0:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    14b4:	6d 8b       	std	Y+21, r22	; 0x15
    14b6:	7e 8b       	std	Y+22, r23	; 0x16
    14b8:	8f 8b       	std	Y+23, r24	; 0x17
    14ba:	98 8f       	std	Y+24, r25	; 0x18
	q3 = q3 + (q0*gz + q1*gy - q2*gx)*halfT;
    14bc:	a5 01       	movw	r20, r10
    14be:	94 01       	movw	r18, r8
    14c0:	c3 01       	movw	r24, r6
    14c2:	b2 01       	movw	r22, r4
    14c4:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    14c8:	6b 01       	movw	r12, r22
    14ca:	7c 01       	movw	r14, r24
    14cc:	29 8d       	ldd	r18, Y+25	; 0x19
    14ce:	3a 8d       	ldd	r19, Y+26	; 0x1a
    14d0:	4b 8d       	ldd	r20, Y+27	; 0x1b
    14d2:	5c 8d       	ldd	r21, Y+28	; 0x1c
    14d4:	69 85       	ldd	r22, Y+9	; 0x09
    14d6:	7a 85       	ldd	r23, Y+10	; 0x0a
    14d8:	8b 85       	ldd	r24, Y+11	; 0x0b
    14da:	9c 85       	ldd	r25, Y+12	; 0x0c
    14dc:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    14e0:	9b 01       	movw	r18, r22
    14e2:	ac 01       	movw	r20, r24
    14e4:	c7 01       	movw	r24, r14
    14e6:	b6 01       	movw	r22, r12
    14e8:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    14ec:	6b 01       	movw	r12, r22
    14ee:	7c 01       	movw	r14, r24
    14f0:	2d 89       	ldd	r18, Y+21	; 0x15
    14f2:	3e 89       	ldd	r19, Y+22	; 0x16
    14f4:	4f 89       	ldd	r20, Y+23	; 0x17
    14f6:	58 8d       	ldd	r21, Y+24	; 0x18
    14f8:	6d 8d       	ldd	r22, Y+29	; 0x1d
    14fa:	7e 8d       	ldd	r23, Y+30	; 0x1e
    14fc:	8f 8d       	ldd	r24, Y+31	; 0x1f
    14fe:	98 a1       	ldd	r25, Y+32	; 0x20
    1500:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1504:	9b 01       	movw	r18, r22
    1506:	ac 01       	movw	r20, r24
    1508:	c7 01       	movw	r24, r14
    150a:	b6 01       	movw	r22, r12
    150c:	0e 94 1b 10 	call	0x2036	; 0x2036 <__subsf3>
    1510:	9b 01       	movw	r18, r22
    1512:	ac 01       	movw	r20, r24
    1514:	69 81       	ldd	r22, Y+1	; 0x01
    1516:	7a 81       	ldd	r23, Y+2	; 0x02
    1518:	8b 81       	ldd	r24, Y+3	; 0x03
    151a:	9c 81       	ldd	r25, Y+4	; 0x04
    151c:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1520:	9b 01       	movw	r18, r22
    1522:	ac 01       	movw	r20, r24
    1524:	6d a1       	ldd	r22, Y+37	; 0x25
    1526:	7e a1       	ldd	r23, Y+38	; 0x26
    1528:	8f a1       	ldd	r24, Y+39	; 0x27
    152a:	98 a5       	ldd	r25, Y+40	; 0x28
    152c:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    1530:	2b 01       	movw	r4, r22
    1532:	3c 01       	movw	r6, r24
	//ffff=q3;
	// 四元数规范化
	norm = sqrt(q0*q0 + q1*q1 + q2*q2 + q3*q3);
    1534:	a5 01       	movw	r20, r10
    1536:	94 01       	movw	r18, r8
    1538:	c5 01       	movw	r24, r10
    153a:	b4 01       	movw	r22, r8
    153c:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1540:	6b 01       	movw	r12, r22
    1542:	7c 01       	movw	r14, r24
    1544:	29 8d       	ldd	r18, Y+25	; 0x19
    1546:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1548:	4b 8d       	ldd	r20, Y+27	; 0x1b
    154a:	5c 8d       	ldd	r21, Y+28	; 0x1c
    154c:	ca 01       	movw	r24, r20
    154e:	b9 01       	movw	r22, r18
    1550:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1554:	9b 01       	movw	r18, r22
    1556:	ac 01       	movw	r20, r24
    1558:	c7 01       	movw	r24, r14
    155a:	b6 01       	movw	r22, r12
    155c:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    1560:	6b 01       	movw	r12, r22
    1562:	7c 01       	movw	r14, r24
    1564:	2d 89       	ldd	r18, Y+21	; 0x15
    1566:	3e 89       	ldd	r19, Y+22	; 0x16
    1568:	4f 89       	ldd	r20, Y+23	; 0x17
    156a:	58 8d       	ldd	r21, Y+24	; 0x18
    156c:	ca 01       	movw	r24, r20
    156e:	b9 01       	movw	r22, r18
    1570:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1574:	9b 01       	movw	r18, r22
    1576:	ac 01       	movw	r20, r24
    1578:	c7 01       	movw	r24, r14
    157a:	b6 01       	movw	r22, r12
    157c:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    1580:	6b 01       	movw	r12, r22
    1582:	7c 01       	movw	r14, r24
    1584:	a3 01       	movw	r20, r6
    1586:	92 01       	movw	r18, r4
    1588:	c3 01       	movw	r24, r6
    158a:	b2 01       	movw	r22, r4
    158c:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1590:	9b 01       	movw	r18, r22
    1592:	ac 01       	movw	r20, r24
    1594:	c7 01       	movw	r24, r14
    1596:	b6 01       	movw	r22, r12
    1598:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    159c:	0e 94 df 12 	call	0x25be	; 0x25be <sqrt>
    15a0:	6b 01       	movw	r12, r22
    15a2:	7c 01       	movw	r14, r24
	q0 = q0 / norm;
    15a4:	9b 01       	movw	r18, r22
    15a6:	ac 01       	movw	r20, r24
    15a8:	c5 01       	movw	r24, r10
    15aa:	b4 01       	movw	r22, r8
    15ac:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <__divsf3>
    15b0:	60 93 60 00 	sts	0x0060, r22
    15b4:	70 93 61 00 	sts	0x0061, r23
    15b8:	80 93 62 00 	sts	0x0062, r24
    15bc:	90 93 63 00 	sts	0x0063, r25
	q1 = q1 / norm;
    15c0:	a7 01       	movw	r20, r14
    15c2:	96 01       	movw	r18, r12
    15c4:	69 8d       	ldd	r22, Y+25	; 0x19
    15c6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    15c8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    15ca:	9c 8d       	ldd	r25, Y+28	; 0x1c
    15cc:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <__divsf3>
    15d0:	60 93 76 06 	sts	0x0676, r22
    15d4:	70 93 77 06 	sts	0x0677, r23
    15d8:	80 93 78 06 	sts	0x0678, r24
    15dc:	90 93 79 06 	sts	0x0679, r25
	q2 = q2 / norm;
    15e0:	a7 01       	movw	r20, r14
    15e2:	96 01       	movw	r18, r12
    15e4:	6d 89       	ldd	r22, Y+21	; 0x15
    15e6:	7e 89       	ldd	r23, Y+22	; 0x16
    15e8:	8f 89       	ldd	r24, Y+23	; 0x17
    15ea:	98 8d       	ldd	r25, Y+24	; 0x18
    15ec:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <__divsf3>
    15f0:	60 93 72 06 	sts	0x0672, r22
    15f4:	70 93 73 06 	sts	0x0673, r23
    15f8:	80 93 74 06 	sts	0x0674, r24
    15fc:	90 93 75 06 	sts	0x0675, r25
	q3 = q3 / norm;
    1600:	a7 01       	movw	r20, r14
    1602:	96 01       	movw	r18, r12
    1604:	c3 01       	movw	r24, r6
    1606:	b2 01       	movw	r22, r4
    1608:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <__divsf3>
    160c:	60 93 6e 06 	sts	0x066E, r22
    1610:	70 93 6f 06 	sts	0x066F, r23
    1614:	80 93 70 06 	sts	0x0670, r24
    1618:	90 93 71 06 	sts	0x0671, r25
}
    161c:	c0 59       	subi	r28, 0x90	; 144
    161e:	df 4f       	sbci	r29, 0xFF	; 255
    1620:	0f b6       	in	r0, 0x3f	; 63
    1622:	f8 94       	cli
    1624:	de bf       	out	0x3e, r29	; 62
    1626:	0f be       	out	0x3f, r0	; 63
    1628:	cd bf       	out	0x3d, r28	; 61
    162a:	df 91       	pop	r29
    162c:	cf 91       	pop	r28
    162e:	1f 91       	pop	r17
    1630:	0f 91       	pop	r16
    1632:	ff 90       	pop	r15
    1634:	ef 90       	pop	r14
    1636:	df 90       	pop	r13
    1638:	cf 90       	pop	r12
    163a:	bf 90       	pop	r11
    163c:	af 90       	pop	r10
    163e:	9f 90       	pop	r9
    1640:	8f 90       	pop	r8
    1642:	7f 90       	pop	r7
    1644:	6f 90       	pop	r6
    1646:	5f 90       	pop	r5
    1648:	4f 90       	pop	r4
    164a:	08 95       	ret

0000164c <Quaternions_to_EulerAngles>:

void Quaternions_to_EulerAngles()
{// x_EulerAngles=atan2(2*q0*q3,1-2*q2*q2-2*q3*q3);
    164c:	4f 92       	push	r4
    164e:	5f 92       	push	r5
    1650:	6f 92       	push	r6
    1652:	7f 92       	push	r7
    1654:	8f 92       	push	r8
    1656:	9f 92       	push	r9
    1658:	af 92       	push	r10
    165a:	bf 92       	push	r11
    165c:	cf 92       	push	r12
    165e:	df 92       	push	r13
    1660:	ef 92       	push	r14
    1662:	ff 92       	push	r15
    1664:	cf 93       	push	r28
    1666:	df 93       	push	r29
    1668:	cd b7       	in	r28, 0x3d	; 61
    166a:	de b7       	in	r29, 0x3e	; 62
    166c:	64 97       	sbiw	r28, 0x14	; 20
    166e:	0f b6       	in	r0, 0x3f	; 63
    1670:	f8 94       	cli
    1672:	de bf       	out	0x3e, r29	; 62
    1674:	0f be       	out	0x3f, r0	; 63
    1676:	cd bf       	out	0x3d, r28	; 61
	yaw=(atan2(2*q1*q2+2*q0*q3,(2*q0*q0+2*q1*q1)-1))*57.3;
    1678:	80 90 60 00 	lds	r8, 0x0060
    167c:	90 90 61 00 	lds	r9, 0x0061
    1680:	a0 90 62 00 	lds	r10, 0x0062
    1684:	b0 90 63 00 	lds	r11, 0x0063
    1688:	a5 01       	movw	r20, r10
    168a:	94 01       	movw	r18, r8
    168c:	c5 01       	movw	r24, r10
    168e:	b4 01       	movw	r22, r8
    1690:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    1694:	6d 83       	std	Y+5, r22	; 0x05
    1696:	7e 83       	std	Y+6, r23	; 0x06
    1698:	8f 83       	std	Y+7, r24	; 0x07
    169a:	98 87       	std	Y+8, r25	; 0x08
    169c:	9b 01       	movw	r18, r22
    169e:	ac 01       	movw	r20, r24
    16a0:	c5 01       	movw	r24, r10
    16a2:	b4 01       	movw	r22, r8
    16a4:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    16a8:	69 87       	std	Y+9, r22	; 0x09
    16aa:	7a 87       	std	Y+10, r23	; 0x0a
    16ac:	8b 87       	std	Y+11, r24	; 0x0b
    16ae:	9c 87       	std	Y+12, r25	; 0x0c
    16b0:	40 90 76 06 	lds	r4, 0x0676
    16b4:	50 90 77 06 	lds	r5, 0x0677
    16b8:	60 90 78 06 	lds	r6, 0x0678
    16bc:	70 90 79 06 	lds	r7, 0x0679
    16c0:	a3 01       	movw	r20, r6
    16c2:	92 01       	movw	r18, r4
    16c4:	c3 01       	movw	r24, r6
    16c6:	b2 01       	movw	r22, r4
    16c8:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    16cc:	4b 01       	movw	r8, r22
    16ce:	5c 01       	movw	r10, r24
    16d0:	80 91 72 06 	lds	r24, 0x0672
    16d4:	90 91 73 06 	lds	r25, 0x0673
    16d8:	a0 91 74 06 	lds	r26, 0x0674
    16dc:	b0 91 75 06 	lds	r27, 0x0675
    16e0:	89 83       	std	Y+1, r24	; 0x01
    16e2:	9a 83       	std	Y+2, r25	; 0x02
    16e4:	ab 83       	std	Y+3, r26	; 0x03
    16e6:	bc 83       	std	Y+4, r27	; 0x04
    16e8:	c0 90 6e 06 	lds	r12, 0x066E
    16ec:	d0 90 6f 06 	lds	r13, 0x066F
    16f0:	e0 90 70 06 	lds	r14, 0x0670
    16f4:	f0 90 71 06 	lds	r15, 0x0671
    16f8:	a5 01       	movw	r20, r10
    16fa:	94 01       	movw	r18, r8
    16fc:	c3 01       	movw	r24, r6
    16fe:	b2 01       	movw	r22, r4
    1700:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1704:	9b 01       	movw	r18, r22
    1706:	ac 01       	movw	r20, r24
    1708:	69 85       	ldd	r22, Y+9	; 0x09
    170a:	7a 85       	ldd	r23, Y+10	; 0x0a
    170c:	8b 85       	ldd	r24, Y+11	; 0x0b
    170e:	9c 85       	ldd	r25, Y+12	; 0x0c
    1710:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    1714:	20 e0       	ldi	r18, 0x00	; 0
    1716:	30 e0       	ldi	r19, 0x00	; 0
    1718:	40 e8       	ldi	r20, 0x80	; 128
    171a:	5f e3       	ldi	r21, 0x3F	; 63
    171c:	0e 94 1b 10 	call	0x2036	; 0x2036 <__subsf3>
    1720:	6d 87       	std	Y+13, r22	; 0x0d
    1722:	7e 87       	std	Y+14, r23	; 0x0e
    1724:	8f 87       	std	Y+15, r24	; 0x0f
    1726:	98 8b       	std	Y+16, r25	; 0x10
    1728:	29 81       	ldd	r18, Y+1	; 0x01
    172a:	3a 81       	ldd	r19, Y+2	; 0x02
    172c:	4b 81       	ldd	r20, Y+3	; 0x03
    172e:	5c 81       	ldd	r21, Y+4	; 0x04
    1730:	c5 01       	movw	r24, r10
    1732:	b4 01       	movw	r22, r8
    1734:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1738:	69 8b       	std	Y+17, r22	; 0x11
    173a:	7a 8b       	std	Y+18, r23	; 0x12
    173c:	8b 8b       	std	Y+19, r24	; 0x13
    173e:	9c 8b       	std	Y+20, r25	; 0x14
    1740:	a7 01       	movw	r20, r14
    1742:	96 01       	movw	r18, r12
    1744:	6d 81       	ldd	r22, Y+5	; 0x05
    1746:	7e 81       	ldd	r23, Y+6	; 0x06
    1748:	8f 81       	ldd	r24, Y+7	; 0x07
    174a:	98 85       	ldd	r25, Y+8	; 0x08
    174c:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1750:	9b 01       	movw	r18, r22
    1752:	ac 01       	movw	r20, r24
    1754:	69 89       	ldd	r22, Y+17	; 0x11
    1756:	7a 89       	ldd	r23, Y+18	; 0x12
    1758:	8b 89       	ldd	r24, Y+19	; 0x13
    175a:	9c 89       	ldd	r25, Y+20	; 0x14
    175c:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    1760:	2d 85       	ldd	r18, Y+13	; 0x0d
    1762:	3e 85       	ldd	r19, Y+14	; 0x0e
    1764:	4f 85       	ldd	r20, Y+15	; 0x0f
    1766:	58 89       	ldd	r21, Y+16	; 0x10
    1768:	0e 94 a6 10 	call	0x214c	; 0x214c <atan2>
    176c:	23 e3       	ldi	r18, 0x33	; 51
    176e:	33 e3       	ldi	r19, 0x33	; 51
    1770:	45 e6       	ldi	r20, 0x65	; 101
    1772:	52 e4       	ldi	r21, 0x42	; 66
    1774:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1778:	60 93 f2 06 	sts	0x06F2, r22
    177c:	70 93 f3 06 	sts	0x06F3, r23
    1780:	80 93 f4 06 	sts	0x06F4, r24
    1784:	90 93 f5 06 	sts	0x06F5, r25
	pitch=(-asin(2 * q1 * q3 - 2 * q0 * q2))*57.3;     
    1788:	a7 01       	movw	r20, r14
    178a:	96 01       	movw	r18, r12
    178c:	c5 01       	movw	r24, r10
    178e:	b4 01       	movw	r22, r8
    1790:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1794:	4b 01       	movw	r8, r22
    1796:	5c 01       	movw	r10, r24
    1798:	29 81       	ldd	r18, Y+1	; 0x01
    179a:	3a 81       	ldd	r19, Y+2	; 0x02
    179c:	4b 81       	ldd	r20, Y+3	; 0x03
    179e:	5c 81       	ldd	r21, Y+4	; 0x04
    17a0:	6d 81       	ldd	r22, Y+5	; 0x05
    17a2:	7e 81       	ldd	r23, Y+6	; 0x06
    17a4:	8f 81       	ldd	r24, Y+7	; 0x07
    17a6:	98 85       	ldd	r25, Y+8	; 0x08
    17a8:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    17ac:	9b 01       	movw	r18, r22
    17ae:	ac 01       	movw	r20, r24
    17b0:	c5 01       	movw	r24, r10
    17b2:	b4 01       	movw	r22, r8
    17b4:	0e 94 1b 10 	call	0x2036	; 0x2036 <__subsf3>
    17b8:	0e 94 80 10 	call	0x2100	; 0x2100 <asin>
    17bc:	90 58       	subi	r25, 0x80	; 128
    17be:	23 e3       	ldi	r18, 0x33	; 51
    17c0:	33 e3       	ldi	r19, 0x33	; 51
    17c2:	45 e6       	ldi	r20, 0x65	; 101
    17c4:	52 e4       	ldi	r21, 0x42	; 66
    17c6:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    17ca:	60 93 f6 06 	sts	0x06F6, r22
    17ce:	70 93 f7 06 	sts	0x06F7, r23
    17d2:	80 93 f8 06 	sts	0x06F8, r24
    17d6:	90 93 f9 06 	sts	0x06F9, r25
	 roll=(atan2(2 * q2 * q3 + 2 * q0 * q1,(2 * q0 * q0 + 2 * q3 * q3 )-1))*57.3; 
    17da:	a7 01       	movw	r20, r14
    17dc:	96 01       	movw	r18, r12
    17de:	c7 01       	movw	r24, r14
    17e0:	b6 01       	movw	r22, r12
    17e2:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    17e6:	9b 01       	movw	r18, r22
    17e8:	ac 01       	movw	r20, r24
    17ea:	c7 01       	movw	r24, r14
    17ec:	b6 01       	movw	r22, r12
    17ee:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    17f2:	9b 01       	movw	r18, r22
    17f4:	ac 01       	movw	r20, r24
    17f6:	69 85       	ldd	r22, Y+9	; 0x09
    17f8:	7a 85       	ldd	r23, Y+10	; 0x0a
    17fa:	8b 85       	ldd	r24, Y+11	; 0x0b
    17fc:	9c 85       	ldd	r25, Y+12	; 0x0c
    17fe:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    1802:	20 e0       	ldi	r18, 0x00	; 0
    1804:	30 e0       	ldi	r19, 0x00	; 0
    1806:	40 e8       	ldi	r20, 0x80	; 128
    1808:	5f e3       	ldi	r21, 0x3F	; 63
    180a:	0e 94 1b 10 	call	0x2036	; 0x2036 <__subsf3>
    180e:	4b 01       	movw	r8, r22
    1810:	5c 01       	movw	r10, r24
    1812:	29 81       	ldd	r18, Y+1	; 0x01
    1814:	3a 81       	ldd	r19, Y+2	; 0x02
    1816:	4b 81       	ldd	r20, Y+3	; 0x03
    1818:	5c 81       	ldd	r21, Y+4	; 0x04
    181a:	ca 01       	movw	r24, r20
    181c:	b9 01       	movw	r22, r18
    181e:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    1822:	9b 01       	movw	r18, r22
    1824:	ac 01       	movw	r20, r24
    1826:	c7 01       	movw	r24, r14
    1828:	b6 01       	movw	r22, r12
    182a:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    182e:	6b 01       	movw	r12, r22
    1830:	7c 01       	movw	r14, r24
    1832:	a3 01       	movw	r20, r6
    1834:	92 01       	movw	r18, r4
    1836:	6d 81       	ldd	r22, Y+5	; 0x05
    1838:	7e 81       	ldd	r23, Y+6	; 0x06
    183a:	8f 81       	ldd	r24, Y+7	; 0x07
    183c:	98 85       	ldd	r25, Y+8	; 0x08
    183e:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1842:	9b 01       	movw	r18, r22
    1844:	ac 01       	movw	r20, r24
    1846:	c7 01       	movw	r24, r14
    1848:	b6 01       	movw	r22, r12
    184a:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    184e:	a5 01       	movw	r20, r10
    1850:	94 01       	movw	r18, r8
    1852:	0e 94 a6 10 	call	0x214c	; 0x214c <atan2>
    1856:	23 e3       	ldi	r18, 0x33	; 51
    1858:	33 e3       	ldi	r19, 0x33	; 51
    185a:	45 e6       	ldi	r20, 0x65	; 101
    185c:	52 e4       	ldi	r21, 0x42	; 66
    185e:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1862:	60 93 fa 06 	sts	0x06FA, r22
    1866:	70 93 fb 06 	sts	0x06FB, r23
    186a:	80 93 fc 06 	sts	0x06FC, r24
    186e:	90 93 fd 06 	sts	0x06FD, r25
    1872:	64 96       	adiw	r28, 0x14	; 20
    1874:	0f b6       	in	r0, 0x3f	; 63
    1876:	f8 94       	cli
    1878:	de bf       	out	0x3e, r29	; 62
    187a:	0f be       	out	0x3f, r0	; 63
    187c:	cd bf       	out	0x3d, r28	; 61
    187e:	df 91       	pop	r29
    1880:	cf 91       	pop	r28
    1882:	ff 90       	pop	r15
    1884:	ef 90       	pop	r14
    1886:	df 90       	pop	r13
    1888:	cf 90       	pop	r12
    188a:	bf 90       	pop	r11
    188c:	af 90       	pop	r10
    188e:	9f 90       	pop	r9
    1890:	8f 90       	pop	r8
    1892:	7f 90       	pop	r7
    1894:	6f 90       	pop	r6
    1896:	5f 90       	pop	r5
    1898:	4f 90       	pop	r4
    189a:	08 95       	ret

0000189c <port_init>:
char s1=0,s2=0,s3=0,s4=0,bz=0,jpanStart=0;
//控制变量
int mx,my,mz,ax,ay,az,vv=0,vvv=0;
void port_init(void)
{
	DDRB = 0xbf;        //pb4 0 miso 输入11110111
    189c:	8f eb       	ldi	r24, 0xBF	; 191
    189e:	87 bb       	out	0x17, r24	; 23
	PORTB= 0x0f;
    18a0:	8f e0       	ldi	r24, 0x0F	; 15
    18a2:	88 bb       	out	0x18, r24	; 24
	DDRC = 0xff; 		   //PC输入
    18a4:	8f ef       	ldi	r24, 0xFF	; 255
    18a6:	84 bb       	out	0x14, r24	; 20
	PORTC= 0xff; 		   //无电阻 减少干扰
    18a8:	85 bb       	out	0x15, r24	; 21
	DDRD = 0xF7;              //端口3舵机信号输入
    18aa:	87 ef       	ldi	r24, 0xF7	; 247
    18ac:	81 bb       	out	0x11, r24	; 17
	PORTD=0x00;
    18ae:	12 ba       	out	0x12, r1	; 18
    18b0:	08 95       	ret

000018b2 <offset>:
}


void offset(void)
{ int gx=0,gy=0,gz=0;
    18b2:	7f 92       	push	r7
    18b4:	8f 92       	push	r8
    18b6:	9f 92       	push	r9
    18b8:	af 92       	push	r10
    18ba:	bf 92       	push	r11
    18bc:	cf 92       	push	r12
    18be:	df 92       	push	r13
    18c0:	ef 92       	push	r14
    18c2:	ff 92       	push	r15
    18c4:	0f 93       	push	r16
    18c6:	1f 93       	push	r17
    18c8:	cf 93       	push	r28
    18ca:	df 93       	push	r29
	MPU9250_getData( original_data );
    18cc:	8e ef       	ldi	r24, 0xFE	; 254
    18ce:	96 e0       	ldi	r25, 0x06	; 6
    18d0:	0e 94 36 03 	call	0x66c	; 0x66c <MPU9250_getData>
    18d4:	0f 2e       	mov	r0, r31
    18d6:	f8 ec       	ldi	r31, 0xC8	; 200
    18d8:	7f 2e       	mov	r7, r31
    18da:	f0 2d       	mov	r31, r0
	PORTD=0x00;
}


void offset(void)
{ int gx=0,gy=0,gz=0;
    18dc:	c0 e0       	ldi	r28, 0x00	; 0
    18de:	d0 e0       	ldi	r29, 0x00	; 0
    18e0:	00 e0       	ldi	r16, 0x00	; 0
    18e2:	10 e0       	ldi	r17, 0x00	; 0
    18e4:	e1 2c       	mov	r14, r1
    18e6:	f1 2c       	mov	r15, r1
	MPU9250_getData( original_data );
	for (uchar i=0;i<200;i++)
	{ _delay_us(50);
		MPU9250_getData( original_data );
	 gx+=original_data[4];
    18e8:	0f 2e       	mov	r0, r31
    18ea:	f6 e0       	ldi	r31, 0x06	; 6
    18ec:	af 2e       	mov	r10, r31
    18ee:	f7 e0       	ldi	r31, 0x07	; 7
    18f0:	bf 2e       	mov	r11, r31
    18f2:	f0 2d       	mov	r31, r0
	 gy+=original_data[5];
    18f4:	0f 2e       	mov	r0, r31
    18f6:	f8 e0       	ldi	r31, 0x08	; 8
    18f8:	cf 2e       	mov	r12, r31
    18fa:	f7 e0       	ldi	r31, 0x07	; 7
    18fc:	df 2e       	mov	r13, r31
    18fe:	f0 2d       	mov	r31, r0
	 gz+=original_data[6];
    1900:	0f 2e       	mov	r0, r31
    1902:	fa e0       	ldi	r31, 0x0A	; 10
    1904:	8f 2e       	mov	r8, r31
    1906:	f7 e0       	ldi	r31, 0x07	; 7
    1908:	9f 2e       	mov	r9, r31
    190a:	f0 2d       	mov	r31, r0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    190c:	87 ec       	ldi	r24, 0xC7	; 199
    190e:	90 e0       	ldi	r25, 0x00	; 0
    1910:	01 97       	sbiw	r24, 0x01	; 1
    1912:	f1 f7       	brne	.-4      	; 0x1910 <offset+0x5e>
    1914:	00 c0       	rjmp	.+0      	; 0x1916 <offset+0x64>
    1916:	00 00       	nop
void offset(void)
{ int gx=0,gy=0,gz=0;
	MPU9250_getData( original_data );
	for (uchar i=0;i<200;i++)
	{ _delay_us(50);
		MPU9250_getData( original_data );
    1918:	8e ef       	ldi	r24, 0xFE	; 254
    191a:	96 e0       	ldi	r25, 0x06	; 6
    191c:	0e 94 36 03 	call	0x66c	; 0x66c <MPU9250_getData>
	 gx+=original_data[4];
    1920:	f5 01       	movw	r30, r10
    1922:	80 81       	ld	r24, Z
    1924:	91 81       	ldd	r25, Z+1	; 0x01
    1926:	e8 0e       	add	r14, r24
    1928:	f9 1e       	adc	r15, r25
	 gy+=original_data[5];
    192a:	f6 01       	movw	r30, r12
    192c:	80 81       	ld	r24, Z
    192e:	91 81       	ldd	r25, Z+1	; 0x01
    1930:	08 0f       	add	r16, r24
    1932:	19 1f       	adc	r17, r25
	 gz+=original_data[6];
    1934:	f4 01       	movw	r30, r8
    1936:	80 81       	ld	r24, Z
    1938:	91 81       	ldd	r25, Z+1	; 0x01
    193a:	c8 0f       	add	r28, r24
    193c:	d9 1f       	adc	r29, r25
    193e:	7a 94       	dec	r7


void offset(void)
{ int gx=0,gy=0,gz=0;
	MPU9250_getData( original_data );
	for (uchar i=0;i<200;i++)
    1940:	29 f7       	brne	.-54     	; 0x190c <offset+0x5a>
		MPU9250_getData( original_data );
	 gx+=original_data[4];
	 gy+=original_data[5];
	 gz+=original_data[6];
	}
	xg_offset=-gx/200;
    1942:	88 27       	eor	r24, r24
    1944:	99 27       	eor	r25, r25
    1946:	8e 19       	sub	r24, r14
    1948:	9f 09       	sbc	r25, r15
    194a:	28 ec       	ldi	r18, 0xC8	; 200
    194c:	30 e0       	ldi	r19, 0x00	; 0
    194e:	b9 01       	movw	r22, r18
    1950:	0e 94 35 13 	call	0x266a	; 0x266a <__divmodhi4>
    1954:	47 2f       	mov	r20, r23
    1956:	60 93 ba 06 	sts	0x06BA, r22
    195a:	70 93 bb 06 	sts	0x06BB, r23
	yg_offset=-gy/200;
    195e:	88 27       	eor	r24, r24
    1960:	99 27       	eor	r25, r25
    1962:	80 1b       	sub	r24, r16
    1964:	91 0b       	sbc	r25, r17
    1966:	b9 01       	movw	r22, r18
    1968:	0e 94 35 13 	call	0x266a	; 0x266a <__divmodhi4>
    196c:	70 93 b9 06 	sts	0x06B9, r23
    1970:	60 93 b8 06 	sts	0x06B8, r22
	zg_offset=-gz/200;
    1974:	88 27       	eor	r24, r24
    1976:	99 27       	eor	r25, r25
    1978:	8c 1b       	sub	r24, r28
    197a:	9d 0b       	sbc	r25, r29
    197c:	b9 01       	movw	r22, r18
    197e:	0e 94 35 13 	call	0x266a	; 0x266a <__divmodhi4>
    1982:	70 93 ab 06 	sts	0x06AB, r23
    1986:	60 93 aa 06 	sts	0x06AA, r22
	 SPI_write_9250(0x13,(xg_offset>>8));//角速度偏移高位
    198a:	64 2f       	mov	r22, r20
    198c:	83 e1       	ldi	r24, 0x13	; 19
    198e:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	SPI_write_9250(0x14,((xg_offset<<8)>>8));
    1992:	60 91 ba 06 	lds	r22, 0x06BA
    1996:	84 e1       	ldi	r24, 0x14	; 20
    1998:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	 
	SPI_write_9250(0x15,(yg_offset>>8));//角速度偏移高位
    199c:	60 91 b9 06 	lds	r22, 0x06B9
    19a0:	85 e1       	ldi	r24, 0x15	; 21
    19a2:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	 SPI_write_9250(0x16,((yg_offset<<8)>>8));
    19a6:	60 91 b8 06 	lds	r22, 0x06B8
    19aa:	86 e1       	ldi	r24, 0x16	; 22
    19ac:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	SPI_write_9250(0x17,(zg_offset>>8));//角速度偏移高位
    19b0:	60 91 ab 06 	lds	r22, 0x06AB
    19b4:	87 e1       	ldi	r24, 0x17	; 23
    19b6:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	 SPI_write_9250(0x18,((zg_offset<<8)>>8));
    19ba:	60 91 aa 06 	lds	r22, 0x06AA
    19be:	88 e1       	ldi	r24, 0x18	; 24
    19c0:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	}
    19c4:	df 91       	pop	r29
    19c6:	cf 91       	pop	r28
    19c8:	1f 91       	pop	r17
    19ca:	0f 91       	pop	r16
    19cc:	ff 90       	pop	r15
    19ce:	ef 90       	pop	r14
    19d0:	df 90       	pop	r13
    19d2:	cf 90       	pop	r12
    19d4:	bf 90       	pop	r11
    19d6:	af 90       	pop	r10
    19d8:	9f 90       	pop	r9
    19da:	8f 90       	pop	r8
    19dc:	7f 90       	pop	r7
    19de:	08 95       	ret

000019e0 <main>:
		p_mid[i]=(1-kg)*p_mid[i];//最优值对应的covariance
	}
	
}
int main(void)
{   port_init();
    19e0:	cf 93       	push	r28
    19e2:	df 93       	push	r29
    19e4:	cd b7       	in	r28, 0x3d	; 61
    19e6:	de b7       	in	r29, 0x3e	; 62
    19e8:	6d 97       	sbiw	r28, 0x1d	; 29
    19ea:	0f b6       	in	r0, 0x3f	; 63
    19ec:	f8 94       	cli
    19ee:	de bf       	out	0x3e, r29	; 62
    19f0:	0f be       	out	0x3f, r0	; 63
    19f2:	cd bf       	out	0x3d, r28	; 61
    19f4:	0e 94 4e 0c 	call	0x189c	; 0x189c <port_init>
	OledInit ();
    19f8:	0e 94 ae 00 	call	0x15c	; 0x15c <OledInit>
    SPI_MasterInit();
    19fc:	0e 94 0c 02 	call	0x418	; 0x418 <SPI_MasterInit>
	MPU9250_Init();
    1a00:	0e 94 44 02 	call	0x488	; 0x488 <MPU9250_Init>
	offset();
    1a04:	0e 94 59 0c 	call	0x18b2	; 0x18b2 <offset>
	
 //	SREG = 0x80;        //使能全局中断
 	TCCR2=0x05;
    1a08:	85 e0       	ldi	r24, 0x05	; 5
    1a0a:	85 bd       	out	0x25, r24	; 37
	TCCR1A=0x00;
    1a0c:	1f bc       	out	0x2f, r1	; 47
	TCCR1B=0x02 ;
    1a0e:	82 e0       	ldi	r24, 0x02	; 2
    1a10:	8e bd       	out	0x2e, r24	; 46
    while(1)
    {TimerRst() ;
	MPU9250_getData( original_data );
//	kalmah(original_data,10,p_mid,0.018,1,guolv_data);
//	Share_filter(original_data,10,0.1,guolv_data);
	guolv_data[1]=guolv_data[1]*0.6+original_data[1]*0.4;
    1a12:	0f 2e       	mov	r0, r31
    1a14:	fa ec       	ldi	r31, 0xCA	; 202
    1a16:	2f 2e       	mov	r2, r31
    1a18:	f6 e0       	ldi	r31, 0x06	; 6
    1a1a:	3f 2e       	mov	r3, r31
    1a1c:	f0 2d       	mov	r31, r0
 //	SREG = 0x80;        //使能全局中断
 	TCCR2=0x05;
	TCCR1A=0x00;
	TCCR1B=0x02 ;
    while(1)
    {TimerRst() ;
    1a1e:	1d bc       	out	0x2d, r1	; 45
    1a20:	1c bc       	out	0x2c, r1	; 44
	MPU9250_getData( original_data );
    1a22:	8e ef       	ldi	r24, 0xFE	; 254
    1a24:	96 e0       	ldi	r25, 0x06	; 6
    1a26:	0e 94 36 03 	call	0x66c	; 0x66c <MPU9250_getData>
//	kalmah(original_data,10,p_mid,0.018,1,guolv_data);
//	Share_filter(original_data,10,0.1,guolv_data);
	guolv_data[1]=guolv_data[1]*0.6+original_data[1]*0.4;
    1a2a:	f1 01       	movw	r30, r2
    1a2c:	60 81       	ld	r22, Z
    1a2e:	71 81       	ldd	r23, Z+1	; 0x01
    1a30:	88 27       	eor	r24, r24
    1a32:	77 fd       	sbrc	r23, 7
    1a34:	80 95       	com	r24
    1a36:	98 2f       	mov	r25, r24
    1a38:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
    1a3c:	2a e9       	ldi	r18, 0x9A	; 154
    1a3e:	39 e9       	ldi	r19, 0x99	; 153
    1a40:	49 e1       	ldi	r20, 0x19	; 25
    1a42:	5f e3       	ldi	r21, 0x3F	; 63
    1a44:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1a48:	6b 01       	movw	r12, r22
    1a4a:	7c 01       	movw	r14, r24
    1a4c:	e0 e0       	ldi	r30, 0x00	; 0
    1a4e:	f7 e0       	ldi	r31, 0x07	; 7
    1a50:	60 81       	ld	r22, Z
    1a52:	71 81       	ldd	r23, Z+1	; 0x01
    1a54:	88 27       	eor	r24, r24
    1a56:	77 fd       	sbrc	r23, 7
    1a58:	80 95       	com	r24
    1a5a:	98 2f       	mov	r25, r24
    1a5c:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
    1a60:	2d ec       	ldi	r18, 0xCD	; 205
    1a62:	3c ec       	ldi	r19, 0xCC	; 204
    1a64:	4c ec       	ldi	r20, 0xCC	; 204
    1a66:	5e e3       	ldi	r21, 0x3E	; 62
    1a68:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1a6c:	9b 01       	movw	r18, r22
    1a6e:	ac 01       	movw	r20, r24
    1a70:	c7 01       	movw	r24, r14
    1a72:	b6 01       	movw	r22, r12
    1a74:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    1a78:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__fixsfsi>
    1a7c:	69 87       	std	Y+9, r22	; 0x09
    1a7e:	7a 87       	std	Y+10, r23	; 0x0a
    1a80:	8b 87       	std	Y+11, r24	; 0x0b
    1a82:	9c 87       	std	Y+12, r25	; 0x0c
    1a84:	29 85       	ldd	r18, Y+9	; 0x09
    1a86:	3a 85       	ldd	r19, Y+10	; 0x0a
    1a88:	f1 01       	movw	r30, r2
    1a8a:	31 83       	std	Z+1, r19	; 0x01
    1a8c:	20 83       	st	Z, r18
	guolv_data[2]=guolv_data[2]*0.6+original_data[2]*0.4;
    1a8e:	ec ec       	ldi	r30, 0xCC	; 204
    1a90:	f6 e0       	ldi	r31, 0x06	; 6
    1a92:	60 81       	ld	r22, Z
    1a94:	71 81       	ldd	r23, Z+1	; 0x01
    1a96:	88 27       	eor	r24, r24
    1a98:	77 fd       	sbrc	r23, 7
    1a9a:	80 95       	com	r24
    1a9c:	98 2f       	mov	r25, r24
    1a9e:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
    1aa2:	2a e9       	ldi	r18, 0x9A	; 154
    1aa4:	39 e9       	ldi	r19, 0x99	; 153
    1aa6:	49 e1       	ldi	r20, 0x19	; 25
    1aa8:	5f e3       	ldi	r21, 0x3F	; 63
    1aaa:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1aae:	6b 01       	movw	r12, r22
    1ab0:	7c 01       	movw	r14, r24
    1ab2:	e2 e0       	ldi	r30, 0x02	; 2
    1ab4:	f7 e0       	ldi	r31, 0x07	; 7
    1ab6:	60 81       	ld	r22, Z
    1ab8:	71 81       	ldd	r23, Z+1	; 0x01
    1aba:	88 27       	eor	r24, r24
    1abc:	77 fd       	sbrc	r23, 7
    1abe:	80 95       	com	r24
    1ac0:	98 2f       	mov	r25, r24
    1ac2:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
    1ac6:	2d ec       	ldi	r18, 0xCD	; 205
    1ac8:	3c ec       	ldi	r19, 0xCC	; 204
    1aca:	4c ec       	ldi	r20, 0xCC	; 204
    1acc:	5e e3       	ldi	r21, 0x3E	; 62
    1ace:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1ad2:	9b 01       	movw	r18, r22
    1ad4:	ac 01       	movw	r20, r24
    1ad6:	c7 01       	movw	r24, r14
    1ad8:	b6 01       	movw	r22, r12
    1ada:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    1ade:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__fixsfsi>
    1ae2:	69 83       	std	Y+1, r22	; 0x01
    1ae4:	7a 83       	std	Y+2, r23	; 0x02
    1ae6:	8b 83       	std	Y+3, r24	; 0x03
    1ae8:	9c 83       	std	Y+4, r25	; 0x04
    1aea:	29 81       	ldd	r18, Y+1	; 0x01
    1aec:	3a 81       	ldd	r19, Y+2	; 0x02
    1aee:	ec ec       	ldi	r30, 0xCC	; 204
    1af0:	f6 e0       	ldi	r31, 0x06	; 6
    1af2:	31 83       	std	Z+1, r19	; 0x01
    1af4:	20 83       	st	Z, r18
	guolv_data[3]=guolv_data[3]*0.6+original_data[3]*0.4;
    1af6:	ee ec       	ldi	r30, 0xCE	; 206
    1af8:	f6 e0       	ldi	r31, 0x06	; 6
    1afa:	60 81       	ld	r22, Z
    1afc:	71 81       	ldd	r23, Z+1	; 0x01
    1afe:	88 27       	eor	r24, r24
    1b00:	77 fd       	sbrc	r23, 7
    1b02:	80 95       	com	r24
    1b04:	98 2f       	mov	r25, r24
    1b06:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
    1b0a:	2a e9       	ldi	r18, 0x9A	; 154
    1b0c:	39 e9       	ldi	r19, 0x99	; 153
    1b0e:	49 e1       	ldi	r20, 0x19	; 25
    1b10:	5f e3       	ldi	r21, 0x3F	; 63
    1b12:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1b16:	6b 01       	movw	r12, r22
    1b18:	7c 01       	movw	r14, r24
    1b1a:	e4 e0       	ldi	r30, 0x04	; 4
    1b1c:	f7 e0       	ldi	r31, 0x07	; 7
    1b1e:	60 81       	ld	r22, Z
    1b20:	71 81       	ldd	r23, Z+1	; 0x01
    1b22:	88 27       	eor	r24, r24
    1b24:	77 fd       	sbrc	r23, 7
    1b26:	80 95       	com	r24
    1b28:	98 2f       	mov	r25, r24
    1b2a:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
    1b2e:	2d ec       	ldi	r18, 0xCD	; 205
    1b30:	3c ec       	ldi	r19, 0xCC	; 204
    1b32:	4c ec       	ldi	r20, 0xCC	; 204
    1b34:	5e e3       	ldi	r21, 0x3E	; 62
    1b36:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1b3a:	9b 01       	movw	r18, r22
    1b3c:	ac 01       	movw	r20, r24
    1b3e:	c7 01       	movw	r24, r14
    1b40:	b6 01       	movw	r22, r12
    1b42:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    1b46:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__fixsfsi>
    1b4a:	6d 83       	std	Y+5, r22	; 0x05
    1b4c:	7e 83       	std	Y+6, r23	; 0x06
    1b4e:	8f 83       	std	Y+7, r24	; 0x07
    1b50:	98 87       	std	Y+8, r25	; 0x08
    1b52:	2d 81       	ldd	r18, Y+5	; 0x05
    1b54:	3e 81       	ldd	r19, Y+6	; 0x06
    1b56:	ee ec       	ldi	r30, 0xCE	; 206
    1b58:	f6 e0       	ldi	r31, 0x06	; 6
    1b5a:	31 83       	std	Z+1, r19	; 0x01
    1b5c:	20 83       	st	Z, r18
	
	guolv_data[4]=guolv_data[4]*0.95+original_data[4]*0.05;
    1b5e:	e0 ed       	ldi	r30, 0xD0	; 208
    1b60:	f6 e0       	ldi	r31, 0x06	; 6
    1b62:	60 81       	ld	r22, Z
    1b64:	71 81       	ldd	r23, Z+1	; 0x01
    1b66:	88 27       	eor	r24, r24
    1b68:	77 fd       	sbrc	r23, 7
    1b6a:	80 95       	com	r24
    1b6c:	98 2f       	mov	r25, r24
    1b6e:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
    1b72:	23 e3       	ldi	r18, 0x33	; 51
    1b74:	33 e3       	ldi	r19, 0x33	; 51
    1b76:	43 e7       	ldi	r20, 0x73	; 115
    1b78:	5f e3       	ldi	r21, 0x3F	; 63
    1b7a:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1b7e:	6b 01       	movw	r12, r22
    1b80:	7c 01       	movw	r14, r24
    1b82:	e6 e0       	ldi	r30, 0x06	; 6
    1b84:	f7 e0       	ldi	r31, 0x07	; 7
    1b86:	60 81       	ld	r22, Z
    1b88:	71 81       	ldd	r23, Z+1	; 0x01
    1b8a:	88 27       	eor	r24, r24
    1b8c:	77 fd       	sbrc	r23, 7
    1b8e:	80 95       	com	r24
    1b90:	98 2f       	mov	r25, r24
    1b92:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
    1b96:	2d ec       	ldi	r18, 0xCD	; 205
    1b98:	3c ec       	ldi	r19, 0xCC	; 204
    1b9a:	4c e4       	ldi	r20, 0x4C	; 76
    1b9c:	5d e3       	ldi	r21, 0x3D	; 61
    1b9e:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1ba2:	9b 01       	movw	r18, r22
    1ba4:	ac 01       	movw	r20, r24
    1ba6:	c7 01       	movw	r24, r14
    1ba8:	b6 01       	movw	r22, r12
    1baa:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    1bae:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__fixsfsi>
    1bb2:	4b 01       	movw	r8, r22
    1bb4:	5c 01       	movw	r10, r24
    1bb6:	e0 ed       	ldi	r30, 0xD0	; 208
    1bb8:	f6 e0       	ldi	r31, 0x06	; 6
    1bba:	71 83       	std	Z+1, r23	; 0x01
    1bbc:	60 83       	st	Z, r22
	guolv_data[5]=guolv_data[5]*0.95+original_data[5]*0.05;
    1bbe:	e2 ed       	ldi	r30, 0xD2	; 210
    1bc0:	f6 e0       	ldi	r31, 0x06	; 6
    1bc2:	60 81       	ld	r22, Z
    1bc4:	71 81       	ldd	r23, Z+1	; 0x01
    1bc6:	88 27       	eor	r24, r24
    1bc8:	77 fd       	sbrc	r23, 7
    1bca:	80 95       	com	r24
    1bcc:	98 2f       	mov	r25, r24
    1bce:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
    1bd2:	23 e3       	ldi	r18, 0x33	; 51
    1bd4:	33 e3       	ldi	r19, 0x33	; 51
    1bd6:	43 e7       	ldi	r20, 0x73	; 115
    1bd8:	5f e3       	ldi	r21, 0x3F	; 63
    1bda:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1bde:	6b 01       	movw	r12, r22
    1be0:	7c 01       	movw	r14, r24
    1be2:	e8 e0       	ldi	r30, 0x08	; 8
    1be4:	f7 e0       	ldi	r31, 0x07	; 7
    1be6:	60 81       	ld	r22, Z
    1be8:	71 81       	ldd	r23, Z+1	; 0x01
    1bea:	88 27       	eor	r24, r24
    1bec:	77 fd       	sbrc	r23, 7
    1bee:	80 95       	com	r24
    1bf0:	98 2f       	mov	r25, r24
    1bf2:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
    1bf6:	2d ec       	ldi	r18, 0xCD	; 205
    1bf8:	3c ec       	ldi	r19, 0xCC	; 204
    1bfa:	4c e4       	ldi	r20, 0x4C	; 76
    1bfc:	5d e3       	ldi	r21, 0x3D	; 61
    1bfe:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1c02:	9b 01       	movw	r18, r22
    1c04:	ac 01       	movw	r20, r24
    1c06:	c7 01       	movw	r24, r14
    1c08:	b6 01       	movw	r22, r12
    1c0a:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    1c0e:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__fixsfsi>
    1c12:	6d 87       	std	Y+13, r22	; 0x0d
    1c14:	7e 87       	std	Y+14, r23	; 0x0e
    1c16:	8f 87       	std	Y+15, r24	; 0x0f
    1c18:	98 8b       	std	Y+16, r25	; 0x10
    1c1a:	2d 85       	ldd	r18, Y+13	; 0x0d
    1c1c:	3e 85       	ldd	r19, Y+14	; 0x0e
    1c1e:	e2 ed       	ldi	r30, 0xD2	; 210
    1c20:	f6 e0       	ldi	r31, 0x06	; 6
    1c22:	31 83       	std	Z+1, r19	; 0x01
    1c24:	20 83       	st	Z, r18
	guolv_data[6]=guolv_data[6]*0.95+original_data[6]*0.05;
    1c26:	e4 ed       	ldi	r30, 0xD4	; 212
    1c28:	f6 e0       	ldi	r31, 0x06	; 6
    1c2a:	60 81       	ld	r22, Z
    1c2c:	71 81       	ldd	r23, Z+1	; 0x01
    1c2e:	88 27       	eor	r24, r24
    1c30:	77 fd       	sbrc	r23, 7
    1c32:	80 95       	com	r24
    1c34:	98 2f       	mov	r25, r24
    1c36:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
    1c3a:	23 e3       	ldi	r18, 0x33	; 51
    1c3c:	33 e3       	ldi	r19, 0x33	; 51
    1c3e:	43 e7       	ldi	r20, 0x73	; 115
    1c40:	5f e3       	ldi	r21, 0x3F	; 63
    1c42:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1c46:	6b 01       	movw	r12, r22
    1c48:	7c 01       	movw	r14, r24
    1c4a:	ea e0       	ldi	r30, 0x0A	; 10
    1c4c:	f7 e0       	ldi	r31, 0x07	; 7
    1c4e:	60 81       	ld	r22, Z
    1c50:	71 81       	ldd	r23, Z+1	; 0x01
    1c52:	88 27       	eor	r24, r24
    1c54:	77 fd       	sbrc	r23, 7
    1c56:	80 95       	com	r24
    1c58:	98 2f       	mov	r25, r24
    1c5a:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
    1c5e:	2d ec       	ldi	r18, 0xCD	; 205
    1c60:	3c ec       	ldi	r19, 0xCC	; 204
    1c62:	4c e4       	ldi	r20, 0x4C	; 76
    1c64:	5d e3       	ldi	r21, 0x3D	; 61
    1c66:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1c6a:	9b 01       	movw	r18, r22
    1c6c:	ac 01       	movw	r20, r24
    1c6e:	c7 01       	movw	r24, r14
    1c70:	b6 01       	movw	r22, r12
    1c72:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    1c76:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__fixsfsi>
    1c7a:	2b 01       	movw	r4, r22
    1c7c:	3c 01       	movw	r6, r24
    1c7e:	e4 ed       	ldi	r30, 0xD4	; 212
    1c80:	f6 e0       	ldi	r31, 0x06	; 6
    1c82:	71 83       	std	Z+1, r23	; 0x01
    1c84:	60 83       	st	Z, r22
	
		guolv_data[7]=guolv_data[7]*0.6+original_data[7]*0.4;
    1c86:	e6 ed       	ldi	r30, 0xD6	; 214
    1c88:	f6 e0       	ldi	r31, 0x06	; 6
    1c8a:	60 81       	ld	r22, Z
    1c8c:	71 81       	ldd	r23, Z+1	; 0x01
    1c8e:	88 27       	eor	r24, r24
    1c90:	77 fd       	sbrc	r23, 7
    1c92:	80 95       	com	r24
    1c94:	98 2f       	mov	r25, r24
    1c96:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
    1c9a:	2a e9       	ldi	r18, 0x9A	; 154
    1c9c:	39 e9       	ldi	r19, 0x99	; 153
    1c9e:	49 e1       	ldi	r20, 0x19	; 25
    1ca0:	5f e3       	ldi	r21, 0x3F	; 63
    1ca2:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1ca6:	6b 01       	movw	r12, r22
    1ca8:	7c 01       	movw	r14, r24
    1caa:	60 91 0c 07 	lds	r22, 0x070C
    1cae:	70 91 0d 07 	lds	r23, 0x070D
    1cb2:	88 27       	eor	r24, r24
    1cb4:	77 fd       	sbrc	r23, 7
    1cb6:	80 95       	com	r24
    1cb8:	98 2f       	mov	r25, r24
    1cba:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
    1cbe:	2d ec       	ldi	r18, 0xCD	; 205
    1cc0:	3c ec       	ldi	r19, 0xCC	; 204
    1cc2:	4c ec       	ldi	r20, 0xCC	; 204
    1cc4:	5e e3       	ldi	r21, 0x3E	; 62
    1cc6:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1cca:	9b 01       	movw	r18, r22
    1ccc:	ac 01       	movw	r20, r24
    1cce:	c7 01       	movw	r24, r14
    1cd0:	b6 01       	movw	r22, r12
    1cd2:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    1cd6:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__fixsfsi>
    1cda:	69 8b       	std	Y+17, r22	; 0x11
    1cdc:	7a 8b       	std	Y+18, r23	; 0x12
    1cde:	8b 8b       	std	Y+19, r24	; 0x13
    1ce0:	9c 8b       	std	Y+20, r25	; 0x14
    1ce2:	29 89       	ldd	r18, Y+17	; 0x11
    1ce4:	3a 89       	ldd	r19, Y+18	; 0x12
    1ce6:	e6 ed       	ldi	r30, 0xD6	; 214
    1ce8:	f6 e0       	ldi	r31, 0x06	; 6
    1cea:	31 83       	std	Z+1, r19	; 0x01
    1cec:	20 83       	st	Z, r18
		guolv_data[8]=guolv_data[8]*0.6+original_data[8]*0.4;
    1cee:	08 ed       	ldi	r16, 0xD8	; 216
    1cf0:	16 e0       	ldi	r17, 0x06	; 6
    1cf2:	f8 01       	movw	r30, r16
    1cf4:	60 81       	ld	r22, Z
    1cf6:	71 81       	ldd	r23, Z+1	; 0x01
    1cf8:	88 27       	eor	r24, r24
    1cfa:	77 fd       	sbrc	r23, 7
    1cfc:	80 95       	com	r24
    1cfe:	98 2f       	mov	r25, r24
    1d00:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
    1d04:	2a e9       	ldi	r18, 0x9A	; 154
    1d06:	39 e9       	ldi	r19, 0x99	; 153
    1d08:	49 e1       	ldi	r20, 0x19	; 25
    1d0a:	5f e3       	ldi	r21, 0x3F	; 63
    1d0c:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1d10:	6b 01       	movw	r12, r22
    1d12:	7c 01       	movw	r14, r24
    1d14:	60 91 0e 07 	lds	r22, 0x070E
    1d18:	70 91 0f 07 	lds	r23, 0x070F
    1d1c:	88 27       	eor	r24, r24
    1d1e:	77 fd       	sbrc	r23, 7
    1d20:	80 95       	com	r24
    1d22:	98 2f       	mov	r25, r24
    1d24:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
    1d28:	2d ec       	ldi	r18, 0xCD	; 205
    1d2a:	3c ec       	ldi	r19, 0xCC	; 204
    1d2c:	4c ec       	ldi	r20, 0xCC	; 204
    1d2e:	5e e3       	ldi	r21, 0x3E	; 62
    1d30:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1d34:	9b 01       	movw	r18, r22
    1d36:	ac 01       	movw	r20, r24
    1d38:	c7 01       	movw	r24, r14
    1d3a:	b6 01       	movw	r22, r12
    1d3c:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    1d40:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__fixsfsi>
    1d44:	6d 8b       	std	Y+21, r22	; 0x15
    1d46:	7e 8b       	std	Y+22, r23	; 0x16
    1d48:	8f 8b       	std	Y+23, r24	; 0x17
    1d4a:	98 8f       	std	Y+24, r25	; 0x18
    1d4c:	2d 89       	ldd	r18, Y+21	; 0x15
    1d4e:	3e 89       	ldd	r19, Y+22	; 0x16
    1d50:	f8 01       	movw	r30, r16
    1d52:	31 83       	std	Z+1, r19	; 0x01
    1d54:	20 83       	st	Z, r18
		guolv_data[9]=guolv_data[9]*0.6+original_data[9]*0.4;
    1d56:	0a ed       	ldi	r16, 0xDA	; 218
    1d58:	16 e0       	ldi	r17, 0x06	; 6
    1d5a:	f8 01       	movw	r30, r16
    1d5c:	60 81       	ld	r22, Z
    1d5e:	71 81       	ldd	r23, Z+1	; 0x01
    1d60:	88 27       	eor	r24, r24
    1d62:	77 fd       	sbrc	r23, 7
    1d64:	80 95       	com	r24
    1d66:	98 2f       	mov	r25, r24
    1d68:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
    1d6c:	2a e9       	ldi	r18, 0x9A	; 154
    1d6e:	39 e9       	ldi	r19, 0x99	; 153
    1d70:	49 e1       	ldi	r20, 0x19	; 25
    1d72:	5f e3       	ldi	r21, 0x3F	; 63
    1d74:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1d78:	6b 01       	movw	r12, r22
    1d7a:	7c 01       	movw	r14, r24
    1d7c:	60 91 10 07 	lds	r22, 0x0710
    1d80:	70 91 11 07 	lds	r23, 0x0711
    1d84:	88 27       	eor	r24, r24
    1d86:	77 fd       	sbrc	r23, 7
    1d88:	80 95       	com	r24
    1d8a:	98 2f       	mov	r25, r24
    1d8c:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
    1d90:	2d ec       	ldi	r18, 0xCD	; 205
    1d92:	3c ec       	ldi	r19, 0xCC	; 204
    1d94:	4c ec       	ldi	r20, 0xCC	; 204
    1d96:	5e e3       	ldi	r21, 0x3E	; 62
    1d98:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1d9c:	9b 01       	movw	r18, r22
    1d9e:	ac 01       	movw	r20, r24
    1da0:	c7 01       	movw	r24, r14
    1da2:	b6 01       	movw	r22, r12
    1da4:	0e 94 1c 10 	call	0x2038	; 0x2038 <__addsf3>
    1da8:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__fixsfsi>
    1dac:	69 8f       	std	Y+25, r22	; 0x19
    1dae:	7a 8f       	std	Y+26, r23	; 0x1a
    1db0:	8b 8f       	std	Y+27, r24	; 0x1b
    1db2:	9c 8f       	std	Y+28, r25	; 0x1c
    1db4:	29 8d       	ldd	r18, Y+25	; 0x19
    1db6:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1db8:	f8 01       	movw	r30, r16
    1dba:	31 83       	std	Z+1, r19	; 0x01
    1dbc:	20 83       	st	Z, r18
		
	GY[0]=guolv_data[4]* MPU9250G_1000dps;
    1dbe:	b4 01       	movw	r22, r8
    1dc0:	88 27       	eor	r24, r24
    1dc2:	77 fd       	sbrc	r23, 7
    1dc4:	80 95       	com	r24
    1dc6:	98 2f       	mov	r25, r24
    1dc8:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
    1dcc:	20 e9       	ldi	r18, 0x90	; 144
    1dce:	31 ec       	ldi	r19, 0xC1	; 193
    1dd0:	49 ef       	ldi	r20, 0xF9	; 249
    1dd2:	5c e3       	ldi	r21, 0x3C	; 60
    1dd4:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1dd8:	5b 01       	movw	r10, r22
    1dda:	6c 01       	movw	r12, r24
    1ddc:	60 93 84 06 	sts	0x0684, r22
    1de0:	70 93 85 06 	sts	0x0685, r23
    1de4:	80 93 86 06 	sts	0x0686, r24
    1de8:	90 93 87 06 	sts	0x0687, r25
	GY[1]=guolv_data[5]* MPU9250G_1000dps;
    1dec:	ed 85       	ldd	r30, Y+13	; 0x0d
    1dee:	fe 85       	ldd	r31, Y+14	; 0x0e
    1df0:	bf 01       	movw	r22, r30
    1df2:	88 27       	eor	r24, r24
    1df4:	77 fd       	sbrc	r23, 7
    1df6:	80 95       	com	r24
    1df8:	98 2f       	mov	r25, r24
    1dfa:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
    1dfe:	20 e9       	ldi	r18, 0x90	; 144
    1e00:	31 ec       	ldi	r19, 0xC1	; 193
    1e02:	49 ef       	ldi	r20, 0xF9	; 249
    1e04:	5c e3       	ldi	r21, 0x3C	; 60
    1e06:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1e0a:	f6 2e       	mov	r15, r22
    1e0c:	e7 2e       	mov	r14, r23
    1e0e:	98 2e       	mov	r9, r24
    1e10:	89 2e       	mov	r8, r25
    1e12:	86 2f       	mov	r24, r22
    1e14:	9e 2d       	mov	r25, r14
    1e16:	a9 2d       	mov	r26, r9
    1e18:	b8 2d       	mov	r27, r8
    1e1a:	80 93 88 06 	sts	0x0688, r24
    1e1e:	90 93 89 06 	sts	0x0689, r25
    1e22:	a0 93 8a 06 	sts	0x068A, r26
    1e26:	b0 93 8b 06 	sts	0x068B, r27
	GY[2]=guolv_data[6]* MPU9250G_1000dps;
    1e2a:	b2 01       	movw	r22, r4
    1e2c:	88 27       	eor	r24, r24
    1e2e:	77 fd       	sbrc	r23, 7
    1e30:	80 95       	com	r24
    1e32:	98 2f       	mov	r25, r24
    1e34:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
    1e38:	20 e9       	ldi	r18, 0x90	; 144
    1e3a:	31 ec       	ldi	r19, 0xC1	; 193
    1e3c:	49 ef       	ldi	r20, 0xF9	; 249
    1e3e:	5c e3       	ldi	r21, 0x3C	; 60
    1e40:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__mulsf3>
    1e44:	06 2f       	mov	r16, r22
    1e46:	7d 87       	std	Y+13, r23	; 0x0d
    1e48:	8d 8f       	std	Y+29, r24	; 0x1d
    1e4a:	19 2f       	mov	r17, r25
    1e4c:	47 2f       	mov	r20, r23
    1e4e:	38 2f       	mov	r19, r24
    1e50:	86 2f       	mov	r24, r22
    1e52:	94 2f       	mov	r25, r20
    1e54:	a3 2f       	mov	r26, r19
    1e56:	b1 2f       	mov	r27, r17
    1e58:	80 93 8c 06 	sts	0x068C, r24
    1e5c:	90 93 8d 06 	sts	0x068D, r25
    1e60:	a0 93 8e 06 	sts	0x068E, r26
    1e64:	b0 93 8f 06 	sts	0x068F, r27
//	max_min();


Quaternions_Count	( //  0,0,1,
    1e68:	2d 81       	ldd	r18, Y+5	; 0x05
    1e6a:	3e 81       	ldd	r19, Y+6	; 0x06
    1e6c:	b9 01       	movw	r22, r18
    1e6e:	88 27       	eor	r24, r24
    1e70:	77 fd       	sbrc	r23, 7
    1e72:	80 95       	com	r24
    1e74:	98 2f       	mov	r25, r24
    1e76:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
    1e7a:	6d 83       	std	Y+5, r22	; 0x05
    1e7c:	7e 83       	std	Y+6, r23	; 0x06
    1e7e:	8f 83       	std	Y+7, r24	; 0x07
    1e80:	98 87       	std	Y+8, r25	; 0x08
    1e82:	e9 81       	ldd	r30, Y+1	; 0x01
    1e84:	fa 81       	ldd	r31, Y+2	; 0x02
    1e86:	bf 01       	movw	r22, r30
    1e88:	88 27       	eor	r24, r24
    1e8a:	77 fd       	sbrc	r23, 7
    1e8c:	80 95       	com	r24
    1e8e:	98 2f       	mov	r25, r24
    1e90:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
    1e94:	69 83       	std	Y+1, r22	; 0x01
    1e96:	7a 83       	std	Y+2, r23	; 0x02
    1e98:	8b 83       	std	Y+3, r24	; 0x03
    1e9a:	9c 83       	std	Y+4, r25	; 0x04
    1e9c:	29 85       	ldd	r18, Y+9	; 0x09
    1e9e:	3a 85       	ldd	r19, Y+10	; 0x0a
    1ea0:	b9 01       	movw	r22, r18
    1ea2:	88 27       	eor	r24, r24
    1ea4:	77 fd       	sbrc	r23, 7
    1ea6:	80 95       	com	r24
    1ea8:	98 2f       	mov	r25, r24
    1eaa:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
    1eae:	2b 01       	movw	r4, r22
    1eb0:	3c 01       	movw	r6, r24
                   guolv_data[1],guolv_data[2],guolv_data[3],
                 GY[0],GY[1],GY[2],
				// 0,0,0,
					    guolv_data[8],guolv_data[7],-guolv_data[9]
    1eb2:	89 8d       	ldd	r24, Y+25	; 0x19
    1eb4:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1eb6:	91 95       	neg	r25
    1eb8:	81 95       	neg	r24
    1eba:	91 09       	sbc	r25, r1
	GY[1]=guolv_data[5]* MPU9250G_1000dps;
	GY[2]=guolv_data[6]* MPU9250G_1000dps;
//	max_min();


Quaternions_Count	( //  0,0,1,
    1ebc:	bc 01       	movw	r22, r24
    1ebe:	88 27       	eor	r24, r24
    1ec0:	77 fd       	sbrc	r23, 7
    1ec2:	80 95       	com	r24
    1ec4:	98 2f       	mov	r25, r24
    1ec6:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
    1eca:	9f 93       	push	r25
    1ecc:	8f 93       	push	r24
    1ece:	7f 93       	push	r23
    1ed0:	6f 93       	push	r22
    1ed2:	e9 89       	ldd	r30, Y+17	; 0x11
    1ed4:	fa 89       	ldd	r31, Y+18	; 0x12
    1ed6:	bf 01       	movw	r22, r30
    1ed8:	88 27       	eor	r24, r24
    1eda:	77 fd       	sbrc	r23, 7
    1edc:	80 95       	com	r24
    1ede:	98 2f       	mov	r25, r24
    1ee0:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
    1ee4:	9f 93       	push	r25
    1ee6:	8f 93       	push	r24
    1ee8:	7f 93       	push	r23
    1eea:	6f 93       	push	r22
    1eec:	2d 89       	ldd	r18, Y+21	; 0x15
    1eee:	3e 89       	ldd	r19, Y+22	; 0x16
    1ef0:	b9 01       	movw	r22, r18
    1ef2:	88 27       	eor	r24, r24
    1ef4:	77 fd       	sbrc	r23, 7
    1ef6:	80 95       	com	r24
    1ef8:	98 2f       	mov	r25, r24
    1efa:	0e 94 94 11 	call	0x2328	; 0x2328 <__floatsisf>
    1efe:	9f 93       	push	r25
    1f00:	8f 93       	push	r24
    1f02:	7f 93       	push	r23
    1f04:	6f 93       	push	r22
    1f06:	1f 93       	push	r17
    1f08:	3d 8d       	ldd	r19, Y+29	; 0x1d
    1f0a:	3f 93       	push	r19
    1f0c:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f0e:	8f 93       	push	r24
    1f10:	0f 93       	push	r16
    1f12:	8f 92       	push	r8
    1f14:	9f 92       	push	r9
    1f16:	ef 92       	push	r14
    1f18:	ff 92       	push	r15
    1f1a:	ed 80       	ldd	r14, Y+5	; 0x05
    1f1c:	fe 80       	ldd	r15, Y+6	; 0x06
    1f1e:	0f 81       	ldd	r16, Y+7	; 0x07
    1f20:	18 85       	ldd	r17, Y+8	; 0x08
    1f22:	29 81       	ldd	r18, Y+1	; 0x01
    1f24:	3a 81       	ldd	r19, Y+2	; 0x02
    1f26:	4b 81       	ldd	r20, Y+3	; 0x03
    1f28:	5c 81       	ldd	r21, Y+4	; 0x04
    1f2a:	c3 01       	movw	r24, r6
    1f2c:	b2 01       	movw	r22, r4
    1f2e:	0e 94 2c 04 	call	0x858	; 0x858 <Quaternions_Count>
				// 0,0,0,
					    guolv_data[8],guolv_data[7],-guolv_data[9]
		            //      1,0,0

);
Quaternions_to_EulerAngles();
    1f32:	0e 94 26 0b 	call	0x164c	; 0x164c <Quaternions_to_EulerAngles>
		
		Cache_MDigit5_int( yaw,0,0,1); 	Cache_MDigit5_int(original_data[4],0,50,1);
    1f36:	60 91 f2 06 	lds	r22, 0x06F2
    1f3a:	70 91 f3 06 	lds	r23, 0x06F3
    1f3e:	80 91 f4 06 	lds	r24, 0x06F4
    1f42:	90 91 f5 06 	lds	r25, 0x06F5
    1f46:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__fixsfsi>
    1f4a:	dc 01       	movw	r26, r24
    1f4c:	cb 01       	movw	r24, r22
    1f4e:	21 e0       	ldi	r18, 0x01	; 1
    1f50:	40 e0       	ldi	r20, 0x00	; 0
    1f52:	60 e0       	ldi	r22, 0x00	; 0
    1f54:	0e 94 64 01 	call	0x2c8	; 0x2c8 <Cache_MDigit5_int>
    1f58:	21 e0       	ldi	r18, 0x01	; 1
    1f5a:	42 e3       	ldi	r20, 0x32	; 50
    1f5c:	60 e0       	ldi	r22, 0x00	; 0
    1f5e:	e6 e0       	ldi	r30, 0x06	; 6
    1f60:	f7 e0       	ldi	r31, 0x07	; 7
    1f62:	80 81       	ld	r24, Z
    1f64:	91 81       	ldd	r25, Z+1	; 0x01
    1f66:	0e 94 64 01 	call	0x2c8	; 0x2c8 <Cache_MDigit5_int>
					Cache_MDigit5_int(pitch,2,0,1);	    Cache_MDigit5_int(original_data[5],2,50,1);
    1f6a:	60 91 f6 06 	lds	r22, 0x06F6
    1f6e:	70 91 f7 06 	lds	r23, 0x06F7
    1f72:	80 91 f8 06 	lds	r24, 0x06F8
    1f76:	90 91 f9 06 	lds	r25, 0x06F9
    1f7a:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__fixsfsi>
    1f7e:	dc 01       	movw	r26, r24
    1f80:	cb 01       	movw	r24, r22
    1f82:	21 e0       	ldi	r18, 0x01	; 1
    1f84:	40 e0       	ldi	r20, 0x00	; 0
    1f86:	62 e0       	ldi	r22, 0x02	; 2
    1f88:	0e 94 64 01 	call	0x2c8	; 0x2c8 <Cache_MDigit5_int>
    1f8c:	21 e0       	ldi	r18, 0x01	; 1
    1f8e:	42 e3       	ldi	r20, 0x32	; 50
    1f90:	62 e0       	ldi	r22, 0x02	; 2
    1f92:	e8 e0       	ldi	r30, 0x08	; 8
    1f94:	f7 e0       	ldi	r31, 0x07	; 7
    1f96:	80 81       	ld	r24, Z
    1f98:	91 81       	ldd	r25, Z+1	; 0x01
    1f9a:	0e 94 64 01 	call	0x2c8	; 0x2c8 <Cache_MDigit5_int>
					Cache_MDigit5_int(roll,4,0,1);     Cache_MDigit5_int(original_data[6],4,50,1);
    1f9e:	60 91 fa 06 	lds	r22, 0x06FA
    1fa2:	70 91 fb 06 	lds	r23, 0x06FB
    1fa6:	80 91 fc 06 	lds	r24, 0x06FC
    1faa:	90 91 fd 06 	lds	r25, 0x06FD
    1fae:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__fixsfsi>
    1fb2:	dc 01       	movw	r26, r24
    1fb4:	cb 01       	movw	r24, r22
    1fb6:	21 e0       	ldi	r18, 0x01	; 1
    1fb8:	40 e0       	ldi	r20, 0x00	; 0
    1fba:	64 e0       	ldi	r22, 0x04	; 4
    1fbc:	0e 94 64 01 	call	0x2c8	; 0x2c8 <Cache_MDigit5_int>
    1fc0:	21 e0       	ldi	r18, 0x01	; 1
    1fc2:	42 e3       	ldi	r20, 0x32	; 50
    1fc4:	64 e0       	ldi	r22, 0x04	; 4
    1fc6:	ea e0       	ldi	r30, 0x0A	; 10
    1fc8:	f7 e0       	ldi	r31, 0x07	; 7
    1fca:	80 81       	ld	r24, Z
    1fcc:	91 81       	ldd	r25, Z+1	; 0x01
    1fce:	0e 94 64 01 	call	0x2c8	; 0x2c8 <Cache_MDigit5_int>
// 						Cache_MDigit5_int(max_m[4],4,0,1);     Cache_MDigit5_int(max_m[5],4,50,1);
// 		
	//	Cache_MDigit5_int(axis_x,0,0,1); 	
	//	Cache_MDigit5_int(axis_y,2,0,1);	    
	//	Cache_MDigit5_int(axis_z,4,0,1);     
		sss=TCNT1;
    1fd2:	0c b5       	in	r16, 0x2c	; 44
    1fd4:	1d b5       	in	r17, 0x2d	; 45
    1fd6:	b8 01       	movw	r22, r16
    1fd8:	80 e0       	ldi	r24, 0x00	; 0
    1fda:	90 e0       	ldi	r25, 0x00	; 0
    1fdc:	0e 94 92 11 	call	0x2324	; 0x2324 <__floatunsisf>
    1fe0:	60 93 5e 06 	sts	0x065E, r22
    1fe4:	70 93 5f 06 	sts	0x065F, r23
    1fe8:	80 93 60 06 	sts	0x0660, r24
    1fec:	90 93 61 06 	sts	0x0661, r25
		halfT=sss/2000000;
    1ff0:	20 e0       	ldi	r18, 0x00	; 0
    1ff2:	34 e2       	ldi	r19, 0x24	; 36
    1ff4:	44 ef       	ldi	r20, 0xF4	; 244
    1ff6:	59 e4       	ldi	r21, 0x49	; 73
    1ff8:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <__divsf3>
    1ffc:	60 93 64 00 	sts	0x0064, r22
    2000:	70 93 65 00 	sts	0x0065, r23
    2004:	80 93 66 00 	sts	0x0066, r24
    2008:	90 93 67 00 	sts	0x0067, r25
		Cache_MDigit5_int(sss,6,0,1);Cache_MDigit5_int(sss1,6,50,1);
    200c:	21 e0       	ldi	r18, 0x01	; 1
    200e:	40 e0       	ldi	r20, 0x00	; 0
    2010:	66 e0       	ldi	r22, 0x06	; 6
    2012:	c8 01       	movw	r24, r16
    2014:	0e 94 64 01 	call	0x2c8	; 0x2c8 <Cache_MDigit5_int>
    2018:	21 e0       	ldi	r18, 0x01	; 1
    201a:	42 e3       	ldi	r20, 0x32	; 50
    201c:	66 e0       	ldi	r22, 0x06	; 6
    201e:	80 91 7e 06 	lds	r24, 0x067E
    2022:	90 91 7f 06 	lds	r25, 0x067F
    2026:	0e 94 64 01 	call	0x2c8	; 0x2c8 <Cache_MDigit5_int>
    202a:	0f b6       	in	r0, 0x3f	; 63
    202c:	f8 94       	cli
    202e:	de bf       	out	0x3e, r29	; 62
    2030:	0f be       	out	0x3f, r0	; 63
    2032:	cd bf       	out	0x3d, r28	; 61
    2034:	f4 cc       	rjmp	.-1560   	; 0x1a1e <main+0x3e>

00002036 <__subsf3>:
    2036:	50 58       	subi	r21, 0x80	; 128

00002038 <__addsf3>:
    2038:	bb 27       	eor	r27, r27
    203a:	aa 27       	eor	r26, r26
    203c:	0e d0       	rcall	.+28     	; 0x205a <__addsf3x>
    203e:	17 c2       	rjmp	.+1070   	; 0x246e <__fp_round>
    2040:	08 d2       	rcall	.+1040   	; 0x2452 <__fp_pscA>
    2042:	30 f0       	brcs	.+12     	; 0x2050 <__addsf3+0x18>
    2044:	0d d2       	rcall	.+1050   	; 0x2460 <__fp_pscB>
    2046:	20 f0       	brcs	.+8      	; 0x2050 <__addsf3+0x18>
    2048:	31 f4       	brne	.+12     	; 0x2056 <__addsf3+0x1e>
    204a:	9f 3f       	cpi	r25, 0xFF	; 255
    204c:	11 f4       	brne	.+4      	; 0x2052 <__addsf3+0x1a>
    204e:	1e f4       	brtc	.+6      	; 0x2056 <__addsf3+0x1e>
    2050:	c7 c1       	rjmp	.+910    	; 0x23e0 <__fp_nan>
    2052:	0e f4       	brtc	.+2      	; 0x2056 <__addsf3+0x1e>
    2054:	e0 95       	com	r30
    2056:	e7 fb       	bst	r30, 7
    2058:	bd c1       	rjmp	.+890    	; 0x23d4 <__fp_inf>

0000205a <__addsf3x>:
    205a:	e9 2f       	mov	r30, r25
    205c:	19 d2       	rcall	.+1074   	; 0x2490 <__fp_split3>
    205e:	80 f3       	brcs	.-32     	; 0x2040 <__addsf3+0x8>
    2060:	ba 17       	cp	r27, r26
    2062:	62 07       	cpc	r22, r18
    2064:	73 07       	cpc	r23, r19
    2066:	84 07       	cpc	r24, r20
    2068:	95 07       	cpc	r25, r21
    206a:	18 f0       	brcs	.+6      	; 0x2072 <__addsf3x+0x18>
    206c:	71 f4       	brne	.+28     	; 0x208a <__addsf3x+0x30>
    206e:	9e f5       	brtc	.+102    	; 0x20d6 <__addsf3x+0x7c>
    2070:	31 c2       	rjmp	.+1122   	; 0x24d4 <__fp_zero>
    2072:	0e f4       	brtc	.+2      	; 0x2076 <__addsf3x+0x1c>
    2074:	e0 95       	com	r30
    2076:	0b 2e       	mov	r0, r27
    2078:	ba 2f       	mov	r27, r26
    207a:	a0 2d       	mov	r26, r0
    207c:	0b 01       	movw	r0, r22
    207e:	b9 01       	movw	r22, r18
    2080:	90 01       	movw	r18, r0
    2082:	0c 01       	movw	r0, r24
    2084:	ca 01       	movw	r24, r20
    2086:	a0 01       	movw	r20, r0
    2088:	11 24       	eor	r1, r1
    208a:	ff 27       	eor	r31, r31
    208c:	59 1b       	sub	r21, r25
    208e:	99 f0       	breq	.+38     	; 0x20b6 <__addsf3x+0x5c>
    2090:	59 3f       	cpi	r21, 0xF9	; 249
    2092:	50 f4       	brcc	.+20     	; 0x20a8 <__addsf3x+0x4e>
    2094:	50 3e       	cpi	r21, 0xE0	; 224
    2096:	68 f1       	brcs	.+90     	; 0x20f2 <__addsf3x+0x98>
    2098:	1a 16       	cp	r1, r26
    209a:	f0 40       	sbci	r31, 0x00	; 0
    209c:	a2 2f       	mov	r26, r18
    209e:	23 2f       	mov	r18, r19
    20a0:	34 2f       	mov	r19, r20
    20a2:	44 27       	eor	r20, r20
    20a4:	58 5f       	subi	r21, 0xF8	; 248
    20a6:	f3 cf       	rjmp	.-26     	; 0x208e <__addsf3x+0x34>
    20a8:	46 95       	lsr	r20
    20aa:	37 95       	ror	r19
    20ac:	27 95       	ror	r18
    20ae:	a7 95       	ror	r26
    20b0:	f0 40       	sbci	r31, 0x00	; 0
    20b2:	53 95       	inc	r21
    20b4:	c9 f7       	brne	.-14     	; 0x20a8 <__addsf3x+0x4e>
    20b6:	7e f4       	brtc	.+30     	; 0x20d6 <__addsf3x+0x7c>
    20b8:	1f 16       	cp	r1, r31
    20ba:	ba 0b       	sbc	r27, r26
    20bc:	62 0b       	sbc	r22, r18
    20be:	73 0b       	sbc	r23, r19
    20c0:	84 0b       	sbc	r24, r20
    20c2:	ba f0       	brmi	.+46     	; 0x20f2 <__addsf3x+0x98>
    20c4:	91 50       	subi	r25, 0x01	; 1
    20c6:	a1 f0       	breq	.+40     	; 0x20f0 <__addsf3x+0x96>
    20c8:	ff 0f       	add	r31, r31
    20ca:	bb 1f       	adc	r27, r27
    20cc:	66 1f       	adc	r22, r22
    20ce:	77 1f       	adc	r23, r23
    20d0:	88 1f       	adc	r24, r24
    20d2:	c2 f7       	brpl	.-16     	; 0x20c4 <__addsf3x+0x6a>
    20d4:	0e c0       	rjmp	.+28     	; 0x20f2 <__addsf3x+0x98>
    20d6:	ba 0f       	add	r27, r26
    20d8:	62 1f       	adc	r22, r18
    20da:	73 1f       	adc	r23, r19
    20dc:	84 1f       	adc	r24, r20
    20de:	48 f4       	brcc	.+18     	; 0x20f2 <__addsf3x+0x98>
    20e0:	87 95       	ror	r24
    20e2:	77 95       	ror	r23
    20e4:	67 95       	ror	r22
    20e6:	b7 95       	ror	r27
    20e8:	f7 95       	ror	r31
    20ea:	9e 3f       	cpi	r25, 0xFE	; 254
    20ec:	08 f0       	brcs	.+2      	; 0x20f0 <__addsf3x+0x96>
    20ee:	b3 cf       	rjmp	.-154    	; 0x2056 <__addsf3+0x1e>
    20f0:	93 95       	inc	r25
    20f2:	88 0f       	add	r24, r24
    20f4:	08 f0       	brcs	.+2      	; 0x20f8 <__addsf3x+0x9e>
    20f6:	99 27       	eor	r25, r25
    20f8:	ee 0f       	add	r30, r30
    20fa:	97 95       	ror	r25
    20fc:	87 95       	ror	r24
    20fe:	08 95       	ret

00002100 <asin>:
    2100:	9f 93       	push	r25
    2102:	9f 77       	andi	r25, 0x7F	; 127
    2104:	ee e3       	ldi	r30, 0x3E	; 62
    2106:	89 37       	cpi	r24, 0x79	; 121
    2108:	9e 07       	cpc	r25, r30
    210a:	20 f4       	brcc	.+8      	; 0x2114 <asin+0x14>
    210c:	e4 e5       	ldi	r30, 0x54	; 84
    210e:	f0 e0       	ldi	r31, 0x00	; 0
    2110:	8f d1       	rcall	.+798    	; 0x2430 <__fp_powsodd>
    2112:	09 c0       	rjmp	.+18     	; 0x2126 <asin+0x26>
    2114:	44 d1       	rcall	.+648    	; 0x239e <__fp_arccos>
    2116:	90 58       	subi	r25, 0x80	; 128
    2118:	a2 ea       	ldi	r26, 0xA2	; 162
    211a:	2a ed       	ldi	r18, 0xDA	; 218
    211c:	3f e0       	ldi	r19, 0x0F	; 15
    211e:	49 ec       	ldi	r20, 0xC9	; 201
    2120:	5f e3       	ldi	r21, 0x3F	; 63
    2122:	9b df       	rcall	.-202    	; 0x205a <__addsf3x>
    2124:	a4 d1       	rcall	.+840    	; 0x246e <__fp_round>
    2126:	0f 90       	pop	r0
    2128:	07 fc       	sbrc	r0, 7
    212a:	90 58       	subi	r25, 0x80	; 128
    212c:	08 95       	ret
    212e:	91 d1       	rcall	.+802    	; 0x2452 <__fp_pscA>
    2130:	58 f0       	brcs	.+22     	; 0x2148 <asin+0x48>
    2132:	80 e8       	ldi	r24, 0x80	; 128
    2134:	91 e0       	ldi	r25, 0x01	; 1
    2136:	09 f4       	brne	.+2      	; 0x213a <asin+0x3a>
    2138:	9e ef       	ldi	r25, 0xFE	; 254
    213a:	92 d1       	rcall	.+804    	; 0x2460 <__fp_pscB>
    213c:	28 f0       	brcs	.+10     	; 0x2148 <asin+0x48>
    213e:	40 e8       	ldi	r20, 0x80	; 128
    2140:	51 e0       	ldi	r21, 0x01	; 1
    2142:	59 f4       	brne	.+22     	; 0x215a <atan2+0xe>
    2144:	5e ef       	ldi	r21, 0xFE	; 254
    2146:	09 c0       	rjmp	.+18     	; 0x215a <atan2+0xe>
    2148:	4b c1       	rjmp	.+662    	; 0x23e0 <__fp_nan>
    214a:	c4 c1       	rjmp	.+904    	; 0x24d4 <__fp_zero>

0000214c <atan2>:
    214c:	e9 2f       	mov	r30, r25
    214e:	e0 78       	andi	r30, 0x80	; 128
    2150:	9f d1       	rcall	.+830    	; 0x2490 <__fp_split3>
    2152:	68 f3       	brcs	.-38     	; 0x212e <asin+0x2e>
    2154:	09 2e       	mov	r0, r25
    2156:	05 2a       	or	r0, r21
    2158:	c1 f3       	breq	.-16     	; 0x214a <asin+0x4a>
    215a:	26 17       	cp	r18, r22
    215c:	37 07       	cpc	r19, r23
    215e:	48 07       	cpc	r20, r24
    2160:	59 07       	cpc	r21, r25
    2162:	38 f0       	brcs	.+14     	; 0x2172 <atan2+0x26>
    2164:	0e 2e       	mov	r0, r30
    2166:	07 f8       	bld	r0, 7
    2168:	e0 25       	eor	r30, r0
    216a:	69 f0       	breq	.+26     	; 0x2186 <atan2+0x3a>
    216c:	e0 25       	eor	r30, r0
    216e:	e0 64       	ori	r30, 0x40	; 64
    2170:	0a c0       	rjmp	.+20     	; 0x2186 <atan2+0x3a>
    2172:	ef 63       	ori	r30, 0x3F	; 63
    2174:	07 f8       	bld	r0, 7
    2176:	00 94       	com	r0
    2178:	07 fa       	bst	r0, 7
    217a:	db 01       	movw	r26, r22
    217c:	b9 01       	movw	r22, r18
    217e:	9d 01       	movw	r18, r26
    2180:	dc 01       	movw	r26, r24
    2182:	ca 01       	movw	r24, r20
    2184:	ad 01       	movw	r20, r26
    2186:	ef 93       	push	r30
    2188:	43 d0       	rcall	.+134    	; 0x2210 <__divsf3_pse>
    218a:	71 d1       	rcall	.+738    	; 0x246e <__fp_round>
    218c:	0a d0       	rcall	.+20     	; 0x21a2 <atan>
    218e:	5f 91       	pop	r21
    2190:	55 23       	and	r21, r21
    2192:	31 f0       	breq	.+12     	; 0x21a0 <atan2+0x54>
    2194:	2b ed       	ldi	r18, 0xDB	; 219
    2196:	3f e0       	ldi	r19, 0x0F	; 15
    2198:	49 e4       	ldi	r20, 0x49	; 73
    219a:	50 fd       	sbrc	r21, 0
    219c:	49 ec       	ldi	r20, 0xC9	; 201
    219e:	4c cf       	rjmp	.-360    	; 0x2038 <__addsf3>
    21a0:	08 95       	ret

000021a2 <atan>:
    21a2:	df 93       	push	r29
    21a4:	dd 27       	eor	r29, r29
    21a6:	b9 2f       	mov	r27, r25
    21a8:	bf 77       	andi	r27, 0x7F	; 127
    21aa:	40 e8       	ldi	r20, 0x80	; 128
    21ac:	5f e3       	ldi	r21, 0x3F	; 63
    21ae:	16 16       	cp	r1, r22
    21b0:	17 06       	cpc	r1, r23
    21b2:	48 07       	cpc	r20, r24
    21b4:	5b 07       	cpc	r21, r27
    21b6:	10 f4       	brcc	.+4      	; 0x21bc <atan+0x1a>
    21b8:	d9 2f       	mov	r29, r25
    21ba:	93 d1       	rcall	.+806    	; 0x24e2 <inverse>
    21bc:	9f 93       	push	r25
    21be:	8f 93       	push	r24
    21c0:	7f 93       	push	r23
    21c2:	6f 93       	push	r22
    21c4:	3a d2       	rcall	.+1140   	; 0x263a <square>
    21c6:	e8 e6       	ldi	r30, 0x68	; 104
    21c8:	f0 e0       	ldi	r31, 0x00	; 0
    21ca:	0d d1       	rcall	.+538    	; 0x23e6 <__fp_powser>
    21cc:	50 d1       	rcall	.+672    	; 0x246e <__fp_round>
    21ce:	2f 91       	pop	r18
    21d0:	3f 91       	pop	r19
    21d2:	4f 91       	pop	r20
    21d4:	5f 91       	pop	r21
    21d6:	98 d1       	rcall	.+816    	; 0x2508 <__mulsf3x>
    21d8:	dd 23       	and	r29, r29
    21da:	49 f0       	breq	.+18     	; 0x21ee <atan+0x4c>
    21dc:	90 58       	subi	r25, 0x80	; 128
    21de:	a2 ea       	ldi	r26, 0xA2	; 162
    21e0:	2a ed       	ldi	r18, 0xDA	; 218
    21e2:	3f e0       	ldi	r19, 0x0F	; 15
    21e4:	49 ec       	ldi	r20, 0xC9	; 201
    21e6:	5f e3       	ldi	r21, 0x3F	; 63
    21e8:	d0 78       	andi	r29, 0x80	; 128
    21ea:	5d 27       	eor	r21, r29
    21ec:	36 df       	rcall	.-404    	; 0x205a <__addsf3x>
    21ee:	df 91       	pop	r29
    21f0:	3e c1       	rjmp	.+636    	; 0x246e <__fp_round>

000021f2 <__divsf3>:
    21f2:	0c d0       	rcall	.+24     	; 0x220c <__divsf3x>
    21f4:	3c c1       	rjmp	.+632    	; 0x246e <__fp_round>
    21f6:	34 d1       	rcall	.+616    	; 0x2460 <__fp_pscB>
    21f8:	40 f0       	brcs	.+16     	; 0x220a <__divsf3+0x18>
    21fa:	2b d1       	rcall	.+598    	; 0x2452 <__fp_pscA>
    21fc:	30 f0       	brcs	.+12     	; 0x220a <__divsf3+0x18>
    21fe:	21 f4       	brne	.+8      	; 0x2208 <__divsf3+0x16>
    2200:	5f 3f       	cpi	r21, 0xFF	; 255
    2202:	19 f0       	breq	.+6      	; 0x220a <__divsf3+0x18>
    2204:	e7 c0       	rjmp	.+462    	; 0x23d4 <__fp_inf>
    2206:	51 11       	cpse	r21, r1
    2208:	66 c1       	rjmp	.+716    	; 0x24d6 <__fp_szero>
    220a:	ea c0       	rjmp	.+468    	; 0x23e0 <__fp_nan>

0000220c <__divsf3x>:
    220c:	41 d1       	rcall	.+642    	; 0x2490 <__fp_split3>
    220e:	98 f3       	brcs	.-26     	; 0x21f6 <__divsf3+0x4>

00002210 <__divsf3_pse>:
    2210:	99 23       	and	r25, r25
    2212:	c9 f3       	breq	.-14     	; 0x2206 <__divsf3+0x14>
    2214:	55 23       	and	r21, r21
    2216:	b1 f3       	breq	.-20     	; 0x2204 <__divsf3+0x12>
    2218:	95 1b       	sub	r25, r21
    221a:	55 0b       	sbc	r21, r21
    221c:	bb 27       	eor	r27, r27
    221e:	aa 27       	eor	r26, r26
    2220:	62 17       	cp	r22, r18
    2222:	73 07       	cpc	r23, r19
    2224:	84 07       	cpc	r24, r20
    2226:	38 f0       	brcs	.+14     	; 0x2236 <__divsf3_pse+0x26>
    2228:	9f 5f       	subi	r25, 0xFF	; 255
    222a:	5f 4f       	sbci	r21, 0xFF	; 255
    222c:	22 0f       	add	r18, r18
    222e:	33 1f       	adc	r19, r19
    2230:	44 1f       	adc	r20, r20
    2232:	aa 1f       	adc	r26, r26
    2234:	a9 f3       	breq	.-22     	; 0x2220 <__divsf3_pse+0x10>
    2236:	33 d0       	rcall	.+102    	; 0x229e <__divsf3_pse+0x8e>
    2238:	0e 2e       	mov	r0, r30
    223a:	3a f0       	brmi	.+14     	; 0x224a <__divsf3_pse+0x3a>
    223c:	e0 e8       	ldi	r30, 0x80	; 128
    223e:	30 d0       	rcall	.+96     	; 0x22a0 <__divsf3_pse+0x90>
    2240:	91 50       	subi	r25, 0x01	; 1
    2242:	50 40       	sbci	r21, 0x00	; 0
    2244:	e6 95       	lsr	r30
    2246:	00 1c       	adc	r0, r0
    2248:	ca f7       	brpl	.-14     	; 0x223c <__divsf3_pse+0x2c>
    224a:	29 d0       	rcall	.+82     	; 0x229e <__divsf3_pse+0x8e>
    224c:	fe 2f       	mov	r31, r30
    224e:	27 d0       	rcall	.+78     	; 0x229e <__divsf3_pse+0x8e>
    2250:	66 0f       	add	r22, r22
    2252:	77 1f       	adc	r23, r23
    2254:	88 1f       	adc	r24, r24
    2256:	bb 1f       	adc	r27, r27
    2258:	26 17       	cp	r18, r22
    225a:	37 07       	cpc	r19, r23
    225c:	48 07       	cpc	r20, r24
    225e:	ab 07       	cpc	r26, r27
    2260:	b0 e8       	ldi	r27, 0x80	; 128
    2262:	09 f0       	breq	.+2      	; 0x2266 <__divsf3_pse+0x56>
    2264:	bb 0b       	sbc	r27, r27
    2266:	80 2d       	mov	r24, r0
    2268:	bf 01       	movw	r22, r30
    226a:	ff 27       	eor	r31, r31
    226c:	93 58       	subi	r25, 0x83	; 131
    226e:	5f 4f       	sbci	r21, 0xFF	; 255
    2270:	2a f0       	brmi	.+10     	; 0x227c <__divsf3_pse+0x6c>
    2272:	9e 3f       	cpi	r25, 0xFE	; 254
    2274:	51 05       	cpc	r21, r1
    2276:	68 f0       	brcs	.+26     	; 0x2292 <__divsf3_pse+0x82>
    2278:	ad c0       	rjmp	.+346    	; 0x23d4 <__fp_inf>
    227a:	2d c1       	rjmp	.+602    	; 0x24d6 <__fp_szero>
    227c:	5f 3f       	cpi	r21, 0xFF	; 255
    227e:	ec f3       	brlt	.-6      	; 0x227a <__divsf3_pse+0x6a>
    2280:	98 3e       	cpi	r25, 0xE8	; 232
    2282:	dc f3       	brlt	.-10     	; 0x227a <__divsf3_pse+0x6a>
    2284:	86 95       	lsr	r24
    2286:	77 95       	ror	r23
    2288:	67 95       	ror	r22
    228a:	b7 95       	ror	r27
    228c:	f7 95       	ror	r31
    228e:	9f 5f       	subi	r25, 0xFF	; 255
    2290:	c9 f7       	brne	.-14     	; 0x2284 <__divsf3_pse+0x74>
    2292:	88 0f       	add	r24, r24
    2294:	91 1d       	adc	r25, r1
    2296:	96 95       	lsr	r25
    2298:	87 95       	ror	r24
    229a:	97 f9       	bld	r25, 7
    229c:	08 95       	ret
    229e:	e1 e0       	ldi	r30, 0x01	; 1
    22a0:	66 0f       	add	r22, r22
    22a2:	77 1f       	adc	r23, r23
    22a4:	88 1f       	adc	r24, r24
    22a6:	bb 1f       	adc	r27, r27
    22a8:	62 17       	cp	r22, r18
    22aa:	73 07       	cpc	r23, r19
    22ac:	84 07       	cpc	r24, r20
    22ae:	ba 07       	cpc	r27, r26
    22b0:	20 f0       	brcs	.+8      	; 0x22ba <__divsf3_pse+0xaa>
    22b2:	62 1b       	sub	r22, r18
    22b4:	73 0b       	sbc	r23, r19
    22b6:	84 0b       	sbc	r24, r20
    22b8:	ba 0b       	sbc	r27, r26
    22ba:	ee 1f       	adc	r30, r30
    22bc:	88 f7       	brcc	.-30     	; 0x22a0 <__divsf3_pse+0x90>
    22be:	e0 95       	com	r30
    22c0:	08 95       	ret

000022c2 <__fixsfsi>:
    22c2:	04 d0       	rcall	.+8      	; 0x22cc <__fixunssfsi>
    22c4:	68 94       	set
    22c6:	b1 11       	cpse	r27, r1
    22c8:	06 c1       	rjmp	.+524    	; 0x24d6 <__fp_szero>
    22ca:	08 95       	ret

000022cc <__fixunssfsi>:
    22cc:	e9 d0       	rcall	.+466    	; 0x24a0 <__fp_splitA>
    22ce:	88 f0       	brcs	.+34     	; 0x22f2 <__fixunssfsi+0x26>
    22d0:	9f 57       	subi	r25, 0x7F	; 127
    22d2:	90 f0       	brcs	.+36     	; 0x22f8 <__fixunssfsi+0x2c>
    22d4:	b9 2f       	mov	r27, r25
    22d6:	99 27       	eor	r25, r25
    22d8:	b7 51       	subi	r27, 0x17	; 23
    22da:	a0 f0       	brcs	.+40     	; 0x2304 <__fixunssfsi+0x38>
    22dc:	d1 f0       	breq	.+52     	; 0x2312 <__fixunssfsi+0x46>
    22de:	66 0f       	add	r22, r22
    22e0:	77 1f       	adc	r23, r23
    22e2:	88 1f       	adc	r24, r24
    22e4:	99 1f       	adc	r25, r25
    22e6:	1a f0       	brmi	.+6      	; 0x22ee <__fixunssfsi+0x22>
    22e8:	ba 95       	dec	r27
    22ea:	c9 f7       	brne	.-14     	; 0x22de <__fixunssfsi+0x12>
    22ec:	12 c0       	rjmp	.+36     	; 0x2312 <__fixunssfsi+0x46>
    22ee:	b1 30       	cpi	r27, 0x01	; 1
    22f0:	81 f0       	breq	.+32     	; 0x2312 <__fixunssfsi+0x46>
    22f2:	f0 d0       	rcall	.+480    	; 0x24d4 <__fp_zero>
    22f4:	b1 e0       	ldi	r27, 0x01	; 1
    22f6:	08 95       	ret
    22f8:	ed c0       	rjmp	.+474    	; 0x24d4 <__fp_zero>
    22fa:	67 2f       	mov	r22, r23
    22fc:	78 2f       	mov	r23, r24
    22fe:	88 27       	eor	r24, r24
    2300:	b8 5f       	subi	r27, 0xF8	; 248
    2302:	39 f0       	breq	.+14     	; 0x2312 <__fixunssfsi+0x46>
    2304:	b9 3f       	cpi	r27, 0xF9	; 249
    2306:	cc f3       	brlt	.-14     	; 0x22fa <__fixunssfsi+0x2e>
    2308:	86 95       	lsr	r24
    230a:	77 95       	ror	r23
    230c:	67 95       	ror	r22
    230e:	b3 95       	inc	r27
    2310:	d9 f7       	brne	.-10     	; 0x2308 <__fixunssfsi+0x3c>
    2312:	3e f4       	brtc	.+14     	; 0x2322 <__fixunssfsi+0x56>
    2314:	90 95       	com	r25
    2316:	80 95       	com	r24
    2318:	70 95       	com	r23
    231a:	61 95       	neg	r22
    231c:	7f 4f       	sbci	r23, 0xFF	; 255
    231e:	8f 4f       	sbci	r24, 0xFF	; 255
    2320:	9f 4f       	sbci	r25, 0xFF	; 255
    2322:	08 95       	ret

00002324 <__floatunsisf>:
    2324:	e8 94       	clt
    2326:	09 c0       	rjmp	.+18     	; 0x233a <__floatsisf+0x12>

00002328 <__floatsisf>:
    2328:	97 fb       	bst	r25, 7
    232a:	3e f4       	brtc	.+14     	; 0x233a <__floatsisf+0x12>
    232c:	90 95       	com	r25
    232e:	80 95       	com	r24
    2330:	70 95       	com	r23
    2332:	61 95       	neg	r22
    2334:	7f 4f       	sbci	r23, 0xFF	; 255
    2336:	8f 4f       	sbci	r24, 0xFF	; 255
    2338:	9f 4f       	sbci	r25, 0xFF	; 255
    233a:	99 23       	and	r25, r25
    233c:	a9 f0       	breq	.+42     	; 0x2368 <__floatsisf+0x40>
    233e:	f9 2f       	mov	r31, r25
    2340:	96 e9       	ldi	r25, 0x96	; 150
    2342:	bb 27       	eor	r27, r27
    2344:	93 95       	inc	r25
    2346:	f6 95       	lsr	r31
    2348:	87 95       	ror	r24
    234a:	77 95       	ror	r23
    234c:	67 95       	ror	r22
    234e:	b7 95       	ror	r27
    2350:	f1 11       	cpse	r31, r1
    2352:	f8 cf       	rjmp	.-16     	; 0x2344 <__floatsisf+0x1c>
    2354:	fa f4       	brpl	.+62     	; 0x2394 <__floatsisf+0x6c>
    2356:	bb 0f       	add	r27, r27
    2358:	11 f4       	brne	.+4      	; 0x235e <__floatsisf+0x36>
    235a:	60 ff       	sbrs	r22, 0
    235c:	1b c0       	rjmp	.+54     	; 0x2394 <__floatsisf+0x6c>
    235e:	6f 5f       	subi	r22, 0xFF	; 255
    2360:	7f 4f       	sbci	r23, 0xFF	; 255
    2362:	8f 4f       	sbci	r24, 0xFF	; 255
    2364:	9f 4f       	sbci	r25, 0xFF	; 255
    2366:	16 c0       	rjmp	.+44     	; 0x2394 <__floatsisf+0x6c>
    2368:	88 23       	and	r24, r24
    236a:	11 f0       	breq	.+4      	; 0x2370 <__floatsisf+0x48>
    236c:	96 e9       	ldi	r25, 0x96	; 150
    236e:	11 c0       	rjmp	.+34     	; 0x2392 <__floatsisf+0x6a>
    2370:	77 23       	and	r23, r23
    2372:	21 f0       	breq	.+8      	; 0x237c <__floatsisf+0x54>
    2374:	9e e8       	ldi	r25, 0x8E	; 142
    2376:	87 2f       	mov	r24, r23
    2378:	76 2f       	mov	r23, r22
    237a:	05 c0       	rjmp	.+10     	; 0x2386 <__floatsisf+0x5e>
    237c:	66 23       	and	r22, r22
    237e:	71 f0       	breq	.+28     	; 0x239c <__floatsisf+0x74>
    2380:	96 e8       	ldi	r25, 0x86	; 134
    2382:	86 2f       	mov	r24, r22
    2384:	70 e0       	ldi	r23, 0x00	; 0
    2386:	60 e0       	ldi	r22, 0x00	; 0
    2388:	2a f0       	brmi	.+10     	; 0x2394 <__floatsisf+0x6c>
    238a:	9a 95       	dec	r25
    238c:	66 0f       	add	r22, r22
    238e:	77 1f       	adc	r23, r23
    2390:	88 1f       	adc	r24, r24
    2392:	da f7       	brpl	.-10     	; 0x238a <__floatsisf+0x62>
    2394:	88 0f       	add	r24, r24
    2396:	96 95       	lsr	r25
    2398:	87 95       	ror	r24
    239a:	97 f9       	bld	r25, 7
    239c:	08 95       	ret

0000239e <__fp_arccos>:
    239e:	df 93       	push	r29
    23a0:	cf 93       	push	r28
    23a2:	1f 93       	push	r17
    23a4:	0f 93       	push	r16
    23a6:	8b 01       	movw	r16, r22
    23a8:	ec 01       	movw	r28, r24
    23aa:	e5 e9       	ldi	r30, 0x95	; 149
    23ac:	f0 e0       	ldi	r31, 0x00	; 0
    23ae:	1b d0       	rcall	.+54     	; 0x23e6 <__fp_powser>
    23b0:	5e d0       	rcall	.+188    	; 0x246e <__fp_round>
    23b2:	98 01       	movw	r18, r16
    23b4:	ae 01       	movw	r20, r28
    23b6:	8b 01       	movw	r16, r22
    23b8:	ec 01       	movw	r28, r24
    23ba:	60 e0       	ldi	r22, 0x00	; 0
    23bc:	70 e0       	ldi	r23, 0x00	; 0
    23be:	80 e8       	ldi	r24, 0x80	; 128
    23c0:	9f e3       	ldi	r25, 0x3F	; 63
    23c2:	39 de       	rcall	.-910    	; 0x2036 <__subsf3>
    23c4:	fc d0       	rcall	.+504    	; 0x25be <sqrt>
    23c6:	98 01       	movw	r18, r16
    23c8:	ae 01       	movw	r20, r28
    23ca:	0f 91       	pop	r16
    23cc:	1f 91       	pop	r17
    23ce:	cf 91       	pop	r28
    23d0:	df 91       	pop	r29
    23d2:	9a c0       	rjmp	.+308    	; 0x2508 <__mulsf3x>

000023d4 <__fp_inf>:
    23d4:	97 f9       	bld	r25, 7
    23d6:	9f 67       	ori	r25, 0x7F	; 127
    23d8:	80 e8       	ldi	r24, 0x80	; 128
    23da:	70 e0       	ldi	r23, 0x00	; 0
    23dc:	60 e0       	ldi	r22, 0x00	; 0
    23de:	08 95       	ret

000023e0 <__fp_nan>:
    23e0:	9f ef       	ldi	r25, 0xFF	; 255
    23e2:	80 ec       	ldi	r24, 0xC0	; 192
    23e4:	08 95       	ret

000023e6 <__fp_powser>:
    23e6:	df 93       	push	r29
    23e8:	cf 93       	push	r28
    23ea:	1f 93       	push	r17
    23ec:	0f 93       	push	r16
    23ee:	ff 92       	push	r15
    23f0:	ef 92       	push	r14
    23f2:	df 92       	push	r13
    23f4:	7b 01       	movw	r14, r22
    23f6:	8c 01       	movw	r16, r24
    23f8:	68 94       	set
    23fa:	05 c0       	rjmp	.+10     	; 0x2406 <__fp_powser+0x20>
    23fc:	da 2e       	mov	r13, r26
    23fe:	ef 01       	movw	r28, r30
    2400:	83 d0       	rcall	.+262    	; 0x2508 <__mulsf3x>
    2402:	fe 01       	movw	r30, r28
    2404:	e8 94       	clt
    2406:	a5 91       	lpm	r26, Z+
    2408:	25 91       	lpm	r18, Z+
    240a:	35 91       	lpm	r19, Z+
    240c:	45 91       	lpm	r20, Z+
    240e:	55 91       	lpm	r21, Z+
    2410:	ae f3       	brts	.-22     	; 0x23fc <__fp_powser+0x16>
    2412:	ef 01       	movw	r28, r30
    2414:	22 de       	rcall	.-956    	; 0x205a <__addsf3x>
    2416:	fe 01       	movw	r30, r28
    2418:	97 01       	movw	r18, r14
    241a:	a8 01       	movw	r20, r16
    241c:	da 94       	dec	r13
    241e:	79 f7       	brne	.-34     	; 0x23fe <__fp_powser+0x18>
    2420:	df 90       	pop	r13
    2422:	ef 90       	pop	r14
    2424:	ff 90       	pop	r15
    2426:	0f 91       	pop	r16
    2428:	1f 91       	pop	r17
    242a:	cf 91       	pop	r28
    242c:	df 91       	pop	r29
    242e:	08 95       	ret

00002430 <__fp_powsodd>:
    2430:	9f 93       	push	r25
    2432:	8f 93       	push	r24
    2434:	7f 93       	push	r23
    2436:	6f 93       	push	r22
    2438:	ff 93       	push	r31
    243a:	ef 93       	push	r30
    243c:	9b 01       	movw	r18, r22
    243e:	ac 01       	movw	r20, r24
    2440:	57 d0       	rcall	.+174    	; 0x24f0 <__mulsf3>
    2442:	ef 91       	pop	r30
    2444:	ff 91       	pop	r31
    2446:	cf df       	rcall	.-98     	; 0x23e6 <__fp_powser>
    2448:	2f 91       	pop	r18
    244a:	3f 91       	pop	r19
    244c:	4f 91       	pop	r20
    244e:	5f 91       	pop	r21
    2450:	4f c0       	rjmp	.+158    	; 0x24f0 <__mulsf3>

00002452 <__fp_pscA>:
    2452:	00 24       	eor	r0, r0
    2454:	0a 94       	dec	r0
    2456:	16 16       	cp	r1, r22
    2458:	17 06       	cpc	r1, r23
    245a:	18 06       	cpc	r1, r24
    245c:	09 06       	cpc	r0, r25
    245e:	08 95       	ret

00002460 <__fp_pscB>:
    2460:	00 24       	eor	r0, r0
    2462:	0a 94       	dec	r0
    2464:	12 16       	cp	r1, r18
    2466:	13 06       	cpc	r1, r19
    2468:	14 06       	cpc	r1, r20
    246a:	05 06       	cpc	r0, r21
    246c:	08 95       	ret

0000246e <__fp_round>:
    246e:	09 2e       	mov	r0, r25
    2470:	03 94       	inc	r0
    2472:	00 0c       	add	r0, r0
    2474:	11 f4       	brne	.+4      	; 0x247a <__fp_round+0xc>
    2476:	88 23       	and	r24, r24
    2478:	52 f0       	brmi	.+20     	; 0x248e <__fp_round+0x20>
    247a:	bb 0f       	add	r27, r27
    247c:	40 f4       	brcc	.+16     	; 0x248e <__fp_round+0x20>
    247e:	bf 2b       	or	r27, r31
    2480:	11 f4       	brne	.+4      	; 0x2486 <__fp_round+0x18>
    2482:	60 ff       	sbrs	r22, 0
    2484:	04 c0       	rjmp	.+8      	; 0x248e <__fp_round+0x20>
    2486:	6f 5f       	subi	r22, 0xFF	; 255
    2488:	7f 4f       	sbci	r23, 0xFF	; 255
    248a:	8f 4f       	sbci	r24, 0xFF	; 255
    248c:	9f 4f       	sbci	r25, 0xFF	; 255
    248e:	08 95       	ret

00002490 <__fp_split3>:
    2490:	57 fd       	sbrc	r21, 7
    2492:	90 58       	subi	r25, 0x80	; 128
    2494:	44 0f       	add	r20, r20
    2496:	55 1f       	adc	r21, r21
    2498:	59 f0       	breq	.+22     	; 0x24b0 <__fp_splitA+0x10>
    249a:	5f 3f       	cpi	r21, 0xFF	; 255
    249c:	71 f0       	breq	.+28     	; 0x24ba <__fp_splitA+0x1a>
    249e:	47 95       	ror	r20

000024a0 <__fp_splitA>:
    24a0:	88 0f       	add	r24, r24
    24a2:	97 fb       	bst	r25, 7
    24a4:	99 1f       	adc	r25, r25
    24a6:	61 f0       	breq	.+24     	; 0x24c0 <__fp_splitA+0x20>
    24a8:	9f 3f       	cpi	r25, 0xFF	; 255
    24aa:	79 f0       	breq	.+30     	; 0x24ca <__fp_splitA+0x2a>
    24ac:	87 95       	ror	r24
    24ae:	08 95       	ret
    24b0:	12 16       	cp	r1, r18
    24b2:	13 06       	cpc	r1, r19
    24b4:	14 06       	cpc	r1, r20
    24b6:	55 1f       	adc	r21, r21
    24b8:	f2 cf       	rjmp	.-28     	; 0x249e <__fp_split3+0xe>
    24ba:	46 95       	lsr	r20
    24bc:	f1 df       	rcall	.-30     	; 0x24a0 <__fp_splitA>
    24be:	08 c0       	rjmp	.+16     	; 0x24d0 <__fp_splitA+0x30>
    24c0:	16 16       	cp	r1, r22
    24c2:	17 06       	cpc	r1, r23
    24c4:	18 06       	cpc	r1, r24
    24c6:	99 1f       	adc	r25, r25
    24c8:	f1 cf       	rjmp	.-30     	; 0x24ac <__fp_splitA+0xc>
    24ca:	86 95       	lsr	r24
    24cc:	71 05       	cpc	r23, r1
    24ce:	61 05       	cpc	r22, r1
    24d0:	08 94       	sec
    24d2:	08 95       	ret

000024d4 <__fp_zero>:
    24d4:	e8 94       	clt

000024d6 <__fp_szero>:
    24d6:	bb 27       	eor	r27, r27
    24d8:	66 27       	eor	r22, r22
    24da:	77 27       	eor	r23, r23
    24dc:	cb 01       	movw	r24, r22
    24de:	97 f9       	bld	r25, 7
    24e0:	08 95       	ret

000024e2 <inverse>:
    24e2:	9b 01       	movw	r18, r22
    24e4:	ac 01       	movw	r20, r24
    24e6:	60 e0       	ldi	r22, 0x00	; 0
    24e8:	70 e0       	ldi	r23, 0x00	; 0
    24ea:	80 e8       	ldi	r24, 0x80	; 128
    24ec:	9f e3       	ldi	r25, 0x3F	; 63
    24ee:	81 ce       	rjmp	.-766    	; 0x21f2 <__divsf3>

000024f0 <__mulsf3>:
    24f0:	0b d0       	rcall	.+22     	; 0x2508 <__mulsf3x>
    24f2:	bd cf       	rjmp	.-134    	; 0x246e <__fp_round>
    24f4:	ae df       	rcall	.-164    	; 0x2452 <__fp_pscA>
    24f6:	28 f0       	brcs	.+10     	; 0x2502 <__mulsf3+0x12>
    24f8:	b3 df       	rcall	.-154    	; 0x2460 <__fp_pscB>
    24fa:	18 f0       	brcs	.+6      	; 0x2502 <__mulsf3+0x12>
    24fc:	95 23       	and	r25, r21
    24fe:	09 f0       	breq	.+2      	; 0x2502 <__mulsf3+0x12>
    2500:	69 cf       	rjmp	.-302    	; 0x23d4 <__fp_inf>
    2502:	6e cf       	rjmp	.-292    	; 0x23e0 <__fp_nan>
    2504:	11 24       	eor	r1, r1
    2506:	e7 cf       	rjmp	.-50     	; 0x24d6 <__fp_szero>

00002508 <__mulsf3x>:
    2508:	c3 df       	rcall	.-122    	; 0x2490 <__fp_split3>
    250a:	a0 f3       	brcs	.-24     	; 0x24f4 <__mulsf3+0x4>

0000250c <__mulsf3_pse>:
    250c:	95 9f       	mul	r25, r21
    250e:	d1 f3       	breq	.-12     	; 0x2504 <__mulsf3+0x14>
    2510:	95 0f       	add	r25, r21
    2512:	50 e0       	ldi	r21, 0x00	; 0
    2514:	55 1f       	adc	r21, r21
    2516:	62 9f       	mul	r22, r18
    2518:	f0 01       	movw	r30, r0
    251a:	72 9f       	mul	r23, r18
    251c:	bb 27       	eor	r27, r27
    251e:	f0 0d       	add	r31, r0
    2520:	b1 1d       	adc	r27, r1
    2522:	63 9f       	mul	r22, r19
    2524:	aa 27       	eor	r26, r26
    2526:	f0 0d       	add	r31, r0
    2528:	b1 1d       	adc	r27, r1
    252a:	aa 1f       	adc	r26, r26
    252c:	64 9f       	mul	r22, r20
    252e:	66 27       	eor	r22, r22
    2530:	b0 0d       	add	r27, r0
    2532:	a1 1d       	adc	r26, r1
    2534:	66 1f       	adc	r22, r22
    2536:	82 9f       	mul	r24, r18
    2538:	22 27       	eor	r18, r18
    253a:	b0 0d       	add	r27, r0
    253c:	a1 1d       	adc	r26, r1
    253e:	62 1f       	adc	r22, r18
    2540:	73 9f       	mul	r23, r19
    2542:	b0 0d       	add	r27, r0
    2544:	a1 1d       	adc	r26, r1
    2546:	62 1f       	adc	r22, r18
    2548:	83 9f       	mul	r24, r19
    254a:	a0 0d       	add	r26, r0
    254c:	61 1d       	adc	r22, r1
    254e:	22 1f       	adc	r18, r18
    2550:	74 9f       	mul	r23, r20
    2552:	33 27       	eor	r19, r19
    2554:	a0 0d       	add	r26, r0
    2556:	61 1d       	adc	r22, r1
    2558:	23 1f       	adc	r18, r19
    255a:	84 9f       	mul	r24, r20
    255c:	60 0d       	add	r22, r0
    255e:	21 1d       	adc	r18, r1
    2560:	82 2f       	mov	r24, r18
    2562:	76 2f       	mov	r23, r22
    2564:	6a 2f       	mov	r22, r26
    2566:	11 24       	eor	r1, r1
    2568:	9f 57       	subi	r25, 0x7F	; 127
    256a:	50 40       	sbci	r21, 0x00	; 0
    256c:	8a f0       	brmi	.+34     	; 0x2590 <__mulsf3_pse+0x84>
    256e:	e1 f0       	breq	.+56     	; 0x25a8 <__mulsf3_pse+0x9c>
    2570:	88 23       	and	r24, r24
    2572:	4a f0       	brmi	.+18     	; 0x2586 <__mulsf3_pse+0x7a>
    2574:	ee 0f       	add	r30, r30
    2576:	ff 1f       	adc	r31, r31
    2578:	bb 1f       	adc	r27, r27
    257a:	66 1f       	adc	r22, r22
    257c:	77 1f       	adc	r23, r23
    257e:	88 1f       	adc	r24, r24
    2580:	91 50       	subi	r25, 0x01	; 1
    2582:	50 40       	sbci	r21, 0x00	; 0
    2584:	a9 f7       	brne	.-22     	; 0x2570 <__mulsf3_pse+0x64>
    2586:	9e 3f       	cpi	r25, 0xFE	; 254
    2588:	51 05       	cpc	r21, r1
    258a:	70 f0       	brcs	.+28     	; 0x25a8 <__mulsf3_pse+0x9c>
    258c:	23 cf       	rjmp	.-442    	; 0x23d4 <__fp_inf>
    258e:	a3 cf       	rjmp	.-186    	; 0x24d6 <__fp_szero>
    2590:	5f 3f       	cpi	r21, 0xFF	; 255
    2592:	ec f3       	brlt	.-6      	; 0x258e <__mulsf3_pse+0x82>
    2594:	98 3e       	cpi	r25, 0xE8	; 232
    2596:	dc f3       	brlt	.-10     	; 0x258e <__mulsf3_pse+0x82>
    2598:	86 95       	lsr	r24
    259a:	77 95       	ror	r23
    259c:	67 95       	ror	r22
    259e:	b7 95       	ror	r27
    25a0:	f7 95       	ror	r31
    25a2:	e7 95       	ror	r30
    25a4:	9f 5f       	subi	r25, 0xFF	; 255
    25a6:	c1 f7       	brne	.-16     	; 0x2598 <__mulsf3_pse+0x8c>
    25a8:	fe 2b       	or	r31, r30
    25aa:	88 0f       	add	r24, r24
    25ac:	91 1d       	adc	r25, r1
    25ae:	96 95       	lsr	r25
    25b0:	87 95       	ror	r24
    25b2:	97 f9       	bld	r25, 7
    25b4:	08 95       	ret
    25b6:	11 f4       	brne	.+4      	; 0x25bc <__mulsf3_pse+0xb0>
    25b8:	0e f4       	brtc	.+2      	; 0x25bc <__mulsf3_pse+0xb0>
    25ba:	12 cf       	rjmp	.-476    	; 0x23e0 <__fp_nan>
    25bc:	41 c0       	rjmp	.+130    	; 0x2640 <__fp_mpack>

000025be <sqrt>:
    25be:	70 df       	rcall	.-288    	; 0x24a0 <__fp_splitA>
    25c0:	d0 f3       	brcs	.-12     	; 0x25b6 <__mulsf3_pse+0xaa>
    25c2:	99 23       	and	r25, r25
    25c4:	d9 f3       	breq	.-10     	; 0x25bc <__mulsf3_pse+0xb0>
    25c6:	ce f3       	brts	.-14     	; 0x25ba <__mulsf3_pse+0xae>
    25c8:	9f 57       	subi	r25, 0x7F	; 127
    25ca:	55 0b       	sbc	r21, r21
    25cc:	87 ff       	sbrs	r24, 7
    25ce:	46 d0       	rcall	.+140    	; 0x265c <__fp_norm2>
    25d0:	00 24       	eor	r0, r0
    25d2:	a0 e6       	ldi	r26, 0x60	; 96
    25d4:	40 ea       	ldi	r20, 0xA0	; 160
    25d6:	90 01       	movw	r18, r0
    25d8:	80 58       	subi	r24, 0x80	; 128
    25da:	56 95       	lsr	r21
    25dc:	97 95       	ror	r25
    25de:	28 f4       	brcc	.+10     	; 0x25ea <sqrt+0x2c>
    25e0:	80 5c       	subi	r24, 0xC0	; 192
    25e2:	66 0f       	add	r22, r22
    25e4:	77 1f       	adc	r23, r23
    25e6:	88 1f       	adc	r24, r24
    25e8:	20 f0       	brcs	.+8      	; 0x25f2 <sqrt+0x34>
    25ea:	26 17       	cp	r18, r22
    25ec:	37 07       	cpc	r19, r23
    25ee:	48 07       	cpc	r20, r24
    25f0:	30 f4       	brcc	.+12     	; 0x25fe <sqrt+0x40>
    25f2:	62 1b       	sub	r22, r18
    25f4:	73 0b       	sbc	r23, r19
    25f6:	84 0b       	sbc	r24, r20
    25f8:	20 29       	or	r18, r0
    25fa:	31 29       	or	r19, r1
    25fc:	4a 2b       	or	r20, r26
    25fe:	a6 95       	lsr	r26
    2600:	17 94       	ror	r1
    2602:	07 94       	ror	r0
    2604:	20 25       	eor	r18, r0
    2606:	31 25       	eor	r19, r1
    2608:	4a 27       	eor	r20, r26
    260a:	58 f7       	brcc	.-42     	; 0x25e2 <sqrt+0x24>
    260c:	66 0f       	add	r22, r22
    260e:	77 1f       	adc	r23, r23
    2610:	88 1f       	adc	r24, r24
    2612:	20 f0       	brcs	.+8      	; 0x261c <sqrt+0x5e>
    2614:	26 17       	cp	r18, r22
    2616:	37 07       	cpc	r19, r23
    2618:	48 07       	cpc	r20, r24
    261a:	30 f4       	brcc	.+12     	; 0x2628 <sqrt+0x6a>
    261c:	62 0b       	sbc	r22, r18
    261e:	73 0b       	sbc	r23, r19
    2620:	84 0b       	sbc	r24, r20
    2622:	20 0d       	add	r18, r0
    2624:	31 1d       	adc	r19, r1
    2626:	41 1d       	adc	r20, r1
    2628:	a0 95       	com	r26
    262a:	81 f7       	brne	.-32     	; 0x260c <sqrt+0x4e>
    262c:	b9 01       	movw	r22, r18
    262e:	84 2f       	mov	r24, r20
    2630:	91 58       	subi	r25, 0x81	; 129
    2632:	88 0f       	add	r24, r24
    2634:	96 95       	lsr	r25
    2636:	87 95       	ror	r24
    2638:	08 95       	ret

0000263a <square>:
    263a:	9b 01       	movw	r18, r22
    263c:	ac 01       	movw	r20, r24
    263e:	58 cf       	rjmp	.-336    	; 0x24f0 <__mulsf3>

00002640 <__fp_mpack>:
    2640:	9f 3f       	cpi	r25, 0xFF	; 255
    2642:	31 f0       	breq	.+12     	; 0x2650 <__fp_mpack_finite+0xc>

00002644 <__fp_mpack_finite>:
    2644:	91 50       	subi	r25, 0x01	; 1
    2646:	20 f4       	brcc	.+8      	; 0x2650 <__fp_mpack_finite+0xc>
    2648:	87 95       	ror	r24
    264a:	77 95       	ror	r23
    264c:	67 95       	ror	r22
    264e:	b7 95       	ror	r27
    2650:	88 0f       	add	r24, r24
    2652:	91 1d       	adc	r25, r1
    2654:	96 95       	lsr	r25
    2656:	87 95       	ror	r24
    2658:	97 f9       	bld	r25, 7
    265a:	08 95       	ret

0000265c <__fp_norm2>:
    265c:	91 50       	subi	r25, 0x01	; 1
    265e:	50 40       	sbci	r21, 0x00	; 0
    2660:	66 0f       	add	r22, r22
    2662:	77 1f       	adc	r23, r23
    2664:	88 1f       	adc	r24, r24
    2666:	d2 f7       	brpl	.-12     	; 0x265c <__fp_norm2>
    2668:	08 95       	ret

0000266a <__divmodhi4>:
    266a:	97 fb       	bst	r25, 7
    266c:	07 2e       	mov	r0, r23
    266e:	16 f4       	brtc	.+4      	; 0x2674 <__divmodhi4+0xa>
    2670:	00 94       	com	r0
    2672:	07 d0       	rcall	.+14     	; 0x2682 <__divmodhi4_neg1>
    2674:	77 fd       	sbrc	r23, 7
    2676:	09 d0       	rcall	.+18     	; 0x268a <__divmodhi4_neg2>
    2678:	0e 94 49 13 	call	0x2692	; 0x2692 <__udivmodhi4>
    267c:	07 fc       	sbrc	r0, 7
    267e:	05 d0       	rcall	.+10     	; 0x268a <__divmodhi4_neg2>
    2680:	3e f4       	brtc	.+14     	; 0x2690 <__divmodhi4_exit>

00002682 <__divmodhi4_neg1>:
    2682:	90 95       	com	r25
    2684:	81 95       	neg	r24
    2686:	9f 4f       	sbci	r25, 0xFF	; 255
    2688:	08 95       	ret

0000268a <__divmodhi4_neg2>:
    268a:	70 95       	com	r23
    268c:	61 95       	neg	r22
    268e:	7f 4f       	sbci	r23, 0xFF	; 255

00002690 <__divmodhi4_exit>:
    2690:	08 95       	ret

00002692 <__udivmodhi4>:
    2692:	aa 1b       	sub	r26, r26
    2694:	bb 1b       	sub	r27, r27
    2696:	51 e1       	ldi	r21, 0x11	; 17
    2698:	07 c0       	rjmp	.+14     	; 0x26a8 <__udivmodhi4_ep>

0000269a <__udivmodhi4_loop>:
    269a:	aa 1f       	adc	r26, r26
    269c:	bb 1f       	adc	r27, r27
    269e:	a6 17       	cp	r26, r22
    26a0:	b7 07       	cpc	r27, r23
    26a2:	10 f0       	brcs	.+4      	; 0x26a8 <__udivmodhi4_ep>
    26a4:	a6 1b       	sub	r26, r22
    26a6:	b7 0b       	sbc	r27, r23

000026a8 <__udivmodhi4_ep>:
    26a8:	88 1f       	adc	r24, r24
    26aa:	99 1f       	adc	r25, r25
    26ac:	5a 95       	dec	r21
    26ae:	a9 f7       	brne	.-22     	; 0x269a <__udivmodhi4_loop>
    26b0:	80 95       	com	r24
    26b2:	90 95       	com	r25
    26b4:	bc 01       	movw	r22, r24
    26b6:	cd 01       	movw	r24, r26
    26b8:	08 95       	ret

000026ba <_exit>:
    26ba:	f8 94       	cli

000026bc <__stop_program>:
    26bc:	ff cf       	rjmp	.-2      	; 0x26bc <__stop_program>
