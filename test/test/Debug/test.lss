
test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000023ce  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000005fe  00800060  000023ce  00002462  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000c4  0080065e  0080065e  00002a60  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002a60  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000f0  00000000  00000000  00002a90  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001aac  00000000  00000000  00002b80  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000031d  00000000  00000000  0000462c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000590  00000000  00000000  00004949  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000478  00000000  00000000  00004edc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000490  00000000  00000000  00005354  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000024b9  00000000  00000000  000057e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e0  00000000  00000000  00007c9d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__ctors_end>
       4:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
       8:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
       c:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      10:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      14:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      18:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      1c:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      20:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      24:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      28:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      2c:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      30:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      34:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      38:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      3c:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      40:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      44:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      48:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      4c:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      50:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
      54:	03 6e       	ori	r16, 0xE3	; 227
      56:	db 36       	cpi	r29, 0x6B	; 107
      58:	3d 9a       	sbi	0x07, 5	; 7
      5a:	99 99       	sbic	0x13, 1	; 19
      5c:	99 3d       	cpi	r25, 0xD9	; 217
      5e:	ab aa       	std	Y+51, r10	; 0x33
      60:	aa 2a       	or	r10, r26
      62:	3e 00       	.word	0x003e	; ????
      64:	00 00       	nop
      66:	80 3f       	cpi	r24, 0xF0	; 240
      68:	08 4a       	sbci	r16, 0xA8	; 168
      6a:	d7 3b       	cpi	r29, 0xB7	; 183
      6c:	3b ce       	rjmp	.-906    	; 0xfffffce4 <__eeprom_end+0xff7efce4>
      6e:	01 6e       	ori	r16, 0xE1	; 225
      70:	84 bc       	out	0x24, r8	; 36
      72:	bf fd       	.word	0xfdbf	; ????
      74:	c1 2f       	mov	r28, r17
      76:	3d 6c       	ori	r19, 0xCD	; 205
      78:	74 31       	cpi	r23, 0x14	; 20
      7a:	9a bd       	out	0x2a, r25	; 42
      7c:	56 83       	std	Z+6, r21	; 0x06
      7e:	3d da       	rcall	.-2950   	; 0xfffff4fa <__eeprom_end+0xff7ef4fa>
      80:	3d 00       	.word	0x003d	; ????
      82:	c7 7f       	andi	r28, 0xF7	; 247
      84:	11 be       	out	0x31, r1	; 49
      86:	d9 e4       	ldi	r29, 0x49	; 73
      88:	bb 4c       	sbci	r27, 0xCB	; 203
      8a:	3e 91       	ld	r19, -X
      8c:	6b aa       	std	Y+51, r6	; 0x33
      8e:	aa be       	out	0x3a, r10	; 58
      90:	00 00       	nop
      92:	00 80       	ld	r0, Z
      94:	3f 07       	cpc	r19, r31
      96:	2c 7a       	andi	r18, 0xAC	; 172
      98:	a5 ba       	out	0x15, r10	; 21
      9a:	6c c5       	rjmp	.+2776   	; 0xb74 <__stack+0x315>
      9c:	90 da       	rcall	.-2784   	; 0xfffff5be <__eeprom_end+0xff7ef5be>
      9e:	3b 93       	.word	0x933b	; ????
      a0:	65 fc       	sbrc	r6, 5
      a2:	8b bc       	out	0x2b, r8	; 43
      a4:	53 f8       	bld	r5, 3
      a6:	10 fd       	sbrc	r17, 0
      a8:	3c 56       	subi	r19, 0x6C	; 108
      aa:	92 83       	std	Z+2, r25	; 0x02
      ac:	4d bd       	out	0x2d, r20	; 45
      ae:	87 9d       	mul	r24, r7
      b0:	3a b6       	in	r3, 0x3a	; 58
      b2:	3d cb       	rjmp	.-2438   	; 0xfffff72e <__eeprom_end+0xff7ef72e>
      b4:	c9 bf       	out	0x39, r28	; 57
      b6:	5b be       	out	0x3b, r5	; 59
      b8:	73 da       	rcall	.-2842   	; 0xfffff5a0 <__eeprom_end+0xff7ef5a0>
      ba:	0f c9       	rjmp	.-3554   	; 0xfffff2da <__eeprom_end+0xff7ef2da>
      bc:	3f 00       	.word	0x003f	; ????

000000be <__ctors_end>:
      be:	11 24       	eor	r1, r1
      c0:	1f be       	out	0x3f, r1	; 63
      c2:	cf e5       	ldi	r28, 0x5F	; 95
      c4:	d8 e0       	ldi	r29, 0x08	; 8
      c6:	de bf       	out	0x3e, r29	; 62
      c8:	cd bf       	out	0x3d, r28	; 61

000000ca <__do_copy_data>:
      ca:	16 e0       	ldi	r17, 0x06	; 6
      cc:	a0 e6       	ldi	r26, 0x60	; 96
      ce:	b0 e0       	ldi	r27, 0x00	; 0
      d0:	ee ec       	ldi	r30, 0xCE	; 206
      d2:	f3 e2       	ldi	r31, 0x23	; 35
      d4:	02 c0       	rjmp	.+4      	; 0xda <__do_copy_data+0x10>
      d6:	05 90       	lpm	r0, Z+
      d8:	0d 92       	st	X+, r0
      da:	ae 35       	cpi	r26, 0x5E	; 94
      dc:	b1 07       	cpc	r27, r17
      de:	d9 f7       	brne	.-10     	; 0xd6 <__do_copy_data+0xc>

000000e0 <__do_clear_bss>:
      e0:	27 e0       	ldi	r18, 0x07	; 7
      e2:	ae e5       	ldi	r26, 0x5E	; 94
      e4:	b6 e0       	ldi	r27, 0x06	; 6
      e6:	01 c0       	rjmp	.+2      	; 0xea <.do_clear_bss_start>

000000e8 <.do_clear_bss_loop>:
      e8:	1d 92       	st	X+, r1

000000ea <.do_clear_bss_start>:
      ea:	a2 32       	cpi	r26, 0x22	; 34
      ec:	b2 07       	cpc	r27, r18
      ee:	e1 f7       	brne	.-8      	; 0xe8 <.do_clear_bss_loop>
      f0:	0e 94 4d 0d 	call	0x1a9a	; 0x1a9a <main>
      f4:	0c 94 e5 11 	jmp	0x23ca	; 0x23ca <_exit>

000000f8 <__bad_interrupt>:
      f8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000fc <OledWriteByte>:
	Digit=Digit-d3*10;
	d4=Digit%10;
	
	xianshi1(d0,y,x);
	xianshi1(d1,y,x+6+i);
	xianshi1(d2,y,x+(6+i)*2);
      fc:	61 30       	cpi	r22, 0x01	; 1
      fe:	11 f4       	brne	.+4      	; 0x104 <OledWriteByte+0x8>
     100:	94 9a       	sbi	0x12, 4	; 18
     102:	0d c0       	rjmp	.+26     	; 0x11e <OledWriteByte+0x22>
	xianshi1(d3,y,x+(6+i)*3);
     104:	94 98       	cbi	0x12, 4	; 18
     106:	0b c0       	rjmp	.+22     	; 0x11e <OledWriteByte+0x22>
     108:	97 98       	cbi	0x12, 7	; 18
     10a:	88 23       	and	r24, r24
     10c:	14 f4       	brge	.+4      	; 0x112 <OledWriteByte+0x16>
     10e:	96 9a       	sbi	0x12, 6	; 18
	xianshi1(d4,y,x+(6+i)*4);
     110:	01 c0       	rjmp	.+2      	; 0x114 <OledWriteByte+0x18>
     112:	96 98       	cbi	0x12, 6	; 18
	d1=Digit/1000;
	Digit=Digit-d1*1000;
	d2=Digit/100;
	Digit=Digit-d2*100;
	d3=Digit/10;
	Digit=Digit-d3*10;
     114:	97 9a       	sbi	0x12, 7	; 18
     116:	88 0f       	add	r24, r24
     118:	91 50       	subi	r25, 0x01	; 1
     11a:	b1 f7       	brne	.-20     	; 0x108 <OledWriteByte+0xc>
     11c:	08 95       	ret
     11e:	98 e0       	ldi	r25, 0x08	; 8
     120:	f3 cf       	rjmp	.-26     	; 0x108 <OledWriteByte+0xc>

00000122 <OledClearn>:
     122:	cf 93       	push	r28
     124:	df 93       	push	r29
     126:	d0 eb       	ldi	r29, 0xB0	; 176
     128:	60 e0       	ldi	r22, 0x00	; 0
     12a:	8d 2f       	mov	r24, r29
     12c:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	d4=Digit%10;
     130:	60 e0       	ldi	r22, 0x00	; 0
     132:	80 e0       	ldi	r24, 0x00	; 0
     134:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
     138:	60 e0       	ldi	r22, 0x00	; 0
     13a:	80 e1       	ldi	r24, 0x10	; 16
     13c:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
     140:	c0 e0       	ldi	r28, 0x00	; 0
     142:	61 e0       	ldi	r22, 0x01	; 1
     144:	80 e0       	ldi	r24, 0x00	; 0
     146:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
     14a:	cf 5f       	subi	r28, 0xFF	; 255
     14c:	c0 38       	cpi	r28, 0x80	; 128
     14e:	c9 f7       	brne	.-14     	; 0x142 <OledClearn+0x20>
     150:	df 5f       	subi	r29, 0xFF	; 255
     152:	d8 3b       	cpi	r29, 0xB8	; 184
     154:	49 f7       	brne	.-46     	; 0x128 <OledClearn+0x6>
     156:	df 91       	pop	r29
     158:	cf 91       	pop	r28
	
	xianshi1(d0,y,x);
	xianshi1(d1,y,x+6+i);
	xianshi1(d2,y,x+(6+i)*2);
	xianshi1(d3,y,x+(6+i)*3);
	xianshi1(d4,y,x+(6+i)*4);
     15a:	08 95       	ret

0000015c <OledInit>:
     15c:	95 98       	cbi	0x12, 5	; 18
     15e:	95 9a       	sbi	0x12, 5	; 18
     160:	60 e0       	ldi	r22, 0x00	; 0
     162:	8e ea       	ldi	r24, 0xAE	; 174
     164:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
}
     168:	60 e0       	ldi	r22, 0x00	; 0
     16a:	85 ed       	ldi	r24, 0xD5	; 213
     16c:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
     170:	60 e0       	ldi	r22, 0x00	; 0
     172:	80 e8       	ldi	r24, 0x80	; 128
     174:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
     178:	60 e0       	ldi	r22, 0x00	; 0
     17a:	88 ea       	ldi	r24, 0xA8	; 168
     17c:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	OledWriteByte(SET_DISPLAY_CLOCK,OLED_CMD);
	OledWriteByte(0x80,OLED_CMD);
	
	/*设置驱动路数*/
	OledWriteByte(SET_MULTIPLEX_RATIO,OLED_CMD);			  //驱动路数设置命令
	OledWriteByte(0x3F,OLED_CMD);							  //驱动路数值
     180:	60 e0       	ldi	r22, 0x00	; 0
     182:	8f e3       	ldi	r24, 0x3F	; 63
     184:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>

	/*设置行显示偏移*/
	OledWriteByte(SET_DISPLAY_OFFSET,OLED_CMD);				  //显示偏移设置命令
     188:	60 e0       	ldi	r22, 0x00	; 0
     18a:	83 ed       	ldi	r24, 0xD3	; 211
     18c:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	OledWriteByte(0x00,OLED_CMD);							  //取值范围：0x00-->0x3F
     190:	60 e0       	ldi	r22, 0x00	; 0
     192:	80 e0       	ldi	r24, 0x00	; 0
     194:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>

	/*设置显示起始行*/
	OledWriteByte(0x40,OLED_CMD);							  //取值范围：0x40---0x7F
     198:	60 e0       	ldi	r22, 0x00	; 0
     19a:	80 e4       	ldi	r24, 0x40	; 64
     19c:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	
	/*设置电荷泵*/
	OledWriteByte(CHARGE_PUMP_SET,OLED_CMD); 				  //电荷泵设置命令
     1a0:	60 e0       	ldi	r22, 0x00	; 0
     1a2:	8d e8       	ldi	r24, 0x8D	; 141
     1a4:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	OledWriteByte(0x14,OLED_CMD);							  //开启电荷泵
     1a8:	60 e0       	ldi	r22, 0x00	; 0
     1aa:	84 e1       	ldi	r24, 0x14	; 20
     1ac:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>

	/*设置内存地址模式*/
	OledWriteByte(SET_MEMORY_ADDR_MODE,OLED_CMD);			  //内存地址模式设置命令
     1b0:	60 e0       	ldi	r22, 0x00	; 0
     1b2:	80 e2       	ldi	r24, 0x20	; 32
     1b4:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	OledWriteByte(0x10,OLED_CMD);							  //设置地址模式值：0x00,列地址模式；0x01,行地址模式；
     1b8:	60 e0       	ldi	r22, 0x00	; 0
     1ba:	80 e1       	ldi	r24, 0x10	; 16
     1bc:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	//0x10，页地址模式；
	/*设置列地址映射*/
	OledWriteByte(SET_SEGMENT_REMAP_A1,OLED_CMD); 			  //列地址0映射到SEG127
     1c0:	60 e0       	ldi	r22, 0x00	; 0
     1c2:	81 ea       	ldi	r24, 0xA1	; 161
     1c4:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>

	/*设置行地址映射*/
	OledWriteByte(SET_COM_SCAN_DIRECTION_C8,OLED_CMD); 		  //行地址0映射到COM63
     1c8:	60 e0       	ldi	r22, 0x00	; 0
     1ca:	88 ec       	ldi	r24, 0xC8	; 200
     1cc:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	
	/*设置COM硬件引脚配置*/
	OledWriteByte(SET_COM_PINS_CONFIG,OLED_CMD); 			  //设置COM硬件引脚配置命令
     1d0:	60 e0       	ldi	r22, 0x00	; 0
     1d2:	8a ed       	ldi	r24, 0xDA	; 218
     1d4:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	OledWriteByte(0x12,OLED_CMD);
     1d8:	60 e0       	ldi	r22, 0x00	; 0
     1da:	82 e1       	ldi	r24, 0x12	; 18
     1dc:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>

	/*对比度设置*/
	OledWriteByte(SET_CONTRAST_CONTROL,OLED_CMD); 			   //对比度设置命令
     1e0:	60 e0       	ldi	r22, 0x00	; 0
     1e2:	81 e8       	ldi	r24, 0x81	; 129
     1e4:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	OledWriteByte(0x8F,OLED_CMD); 							   //对比度值，取值范围1-255
     1e8:	60 e0       	ldi	r22, 0x00	; 0
     1ea:	8f e8       	ldi	r24, 0x8F	; 143
     1ec:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	
	/*设置预充电周期*/
	OledWriteByte(SET_PRECHARGE_PERIOD,OLED_CMD);
     1f0:	60 e0       	ldi	r22, 0x00	; 0
     1f2:	89 ed       	ldi	r24, 0xD9	; 217
     1f4:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	OledWriteByte(0xF1,OLED_CMD);
     1f8:	60 e0       	ldi	r22, 0x00	; 0
     1fa:	81 ef       	ldi	r24, 0xF1	; 241
     1fc:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	
	/*设置VCOMH电源倍率*/
	OledWriteByte(SET_VCOMH_DESELECT_L,OLED_CMD);
     200:	60 e0       	ldi	r22, 0x00	; 0
     202:	8b ed       	ldi	r24, 0xDB	; 219
     204:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	OledWriteByte(0x30,OLED_CMD);
     208:	60 e0       	ldi	r22, 0x00	; 0
     20a:	80 e3       	ldi	r24, 0x30	; 48
     20c:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>

	/*关闭全局显示*/
	OledWriteByte(ENTIRE_DISPLAY_ON_A4,OLED_CMD);
     210:	60 e0       	ldi	r22, 0x00	; 0
     212:	84 ea       	ldi	r24, 0xA4	; 164
     214:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>

	/*设置OLED点亮方式*/
	OledWriteByte(NORMAL_DISPLAY,OLED_CMD); 	 				//0：熄灭像素；1：点亮像素
     218:	60 e0       	ldi	r22, 0x00	; 0
     21a:	86 ea       	ldi	r24, 0xA6	; 166
     21c:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>

	/*打开OLED显示*/
	OledWriteByte(SET_DISPLAY_ON,OLED_CMD);
     220:	60 e0       	ldi	r22, 0x00	; 0
     222:	8f ea       	ldi	r24, 0xAF	; 175
     224:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	
	/*清屏操作*/
	OledClearn();
     228:	0e 94 91 00 	call	0x122	; 0x122 <OledClearn>
     22c:	08 95       	ret

0000022e <xianshi1>:
}
void xianshi1(char Digitchar ,char y,char x)
{uchar i,j,addyl,addyh;
     22e:	af 92       	push	r10
     230:	bf 92       	push	r11
     232:	cf 92       	push	r12
     234:	df 92       	push	r13
     236:	ef 92       	push	r14
     238:	ff 92       	push	r15
     23a:	0f 93       	push	r16
     23c:	1f 93       	push	r17
     23e:	cf 93       	push	r28
     240:	df 93       	push	r29
	uchar *databuf;
	

	databuf=(uchar *)(ASCII_1608+Digitchar+16);
     242:	20 e1       	ldi	r18, 0x10	; 16
     244:	82 9f       	mul	r24, r18
     246:	c0 01       	movw	r24, r0
     248:	11 24       	eor	r1, r1
     24a:	9c 01       	movw	r18, r24
     24c:	22 59       	subi	r18, 0x92	; 146
     24e:	3e 4f       	sbci	r19, 0xFE	; 254
     250:	79 01       	movw	r14, r18
	
	/*计算当前字符显示的起始列地址*/
	addyl=x%16;										//计算列低地址
     252:	34 2f       	mov	r19, r20
     254:	3f 70       	andi	r19, 0x0F	; 15
     256:	a3 2e       	mov	r10, r19
	addyh=x/16+0x10;								//计算列高地址
     258:	42 95       	swap	r20
     25a:	4f 70       	andi	r20, 0x0F	; 15
     25c:	68 94       	set
     25e:	bb 24       	eor	r11, r11
     260:	b4 f8       	bld	r11, 4
     262:	b4 0e       	add	r11, r20
     264:	0f 2e       	mov	r0, r31
     266:	f0 eb       	ldi	r31, 0xB0	; 176
     268:	df 2e       	mov	r13, r31
     26a:	f0 2d       	mov	r31, r0
     26c:	d6 0e       	add	r13, r22
     26e:	0f 2e       	mov	r0, r31
     270:	f2 eb       	ldi	r31, 0xB2	; 178
     272:	cf 2e       	mov	r12, r31
     274:	f0 2d       	mov	r31, r0
     276:	c6 0e       	add	r12, r22

	/*显示字符*/
	for(i=0;i<2;i++)
	{
		OledWriteByte(0xb0+y+i,OLED_CMD);			//设置页地址
     278:	60 e0       	ldi	r22, 0x00	; 0
     27a:	8d 2d       	mov	r24, r13
     27c:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
		OledWriteByte(addyl,OLED_CMD);				//设置列低地址
     280:	60 e0       	ldi	r22, 0x00	; 0
     282:	8a 2d       	mov	r24, r10
     284:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
		OledWriteByte(addyh,OLED_CMD);				//设置列高地址
     288:	60 e0       	ldi	r22, 0x00	; 0
     28a:	8b 2d       	mov	r24, r11
     28c:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
     290:	e7 01       	movw	r28, r14
     292:	87 01       	movw	r16, r14
     294:	08 5f       	subi	r16, 0xF8	; 248
     296:	1f 4f       	sbci	r17, 0xFF	; 255

		for(j=0;j<8;j++)
		{
			OledWriteByte(*(databuf++),OLED_DATA);
     298:	61 e0       	ldi	r22, 0x01	; 1
     29a:	89 91       	ld	r24, Y+
     29c:	0e 94 7e 00 	call	0xfc	; 0xfc <OledWriteByte>
	{
		OledWriteByte(0xb0+y+i,OLED_CMD);			//设置页地址
		OledWriteByte(addyl,OLED_CMD);				//设置列低地址
		OledWriteByte(addyh,OLED_CMD);				//设置列高地址

		for(j=0;j<8;j++)
     2a0:	c0 17       	cp	r28, r16
     2a2:	d1 07       	cpc	r29, r17
     2a4:	c9 f7       	brne	.-14     	; 0x298 <xianshi1+0x6a>
     2a6:	88 e0       	ldi	r24, 0x08	; 8
     2a8:	e8 0e       	add	r14, r24
     2aa:	f1 1c       	adc	r15, r1
     2ac:	d3 94       	inc	r13
	/*计算当前字符显示的起始列地址*/
	addyl=x%16;										//计算列低地址
	addyh=x/16+0x10;								//计算列高地址

	/*显示字符*/
	for(i=0;i<2;i++)
     2ae:	dc 10       	cpse	r13, r12
     2b0:	e3 cf       	rjmp	.-58     	; 0x278 <xianshi1+0x4a>
		}
	}


	
}
     2b2:	df 91       	pop	r29
     2b4:	cf 91       	pop	r28
     2b6:	1f 91       	pop	r17
     2b8:	0f 91       	pop	r16
     2ba:	ff 90       	pop	r15
     2bc:	ef 90       	pop	r14
     2be:	df 90       	pop	r13
     2c0:	cf 90       	pop	r12
     2c2:	bf 90       	pop	r11
     2c4:	af 90       	pop	r10
     2c6:	08 95       	ret

000002c8 <Cache_MDigit5_int>:
	xianshi1(d2,y,x+(6+i)*2);
	xianshi1(d3,y,x+(6+i)*3);
	xianshi1(d4,y,x+(6+i)*4);
}
void Cache_MDigit5_int(int Digit,char y,char x,char i )//5位数 y0-7 x0-127
{int d0,d1,d2,d3,d4;
     2c8:	6f 92       	push	r6
     2ca:	7f 92       	push	r7
     2cc:	8f 92       	push	r8
     2ce:	9f 92       	push	r9
     2d0:	af 92       	push	r10
     2d2:	bf 92       	push	r11
     2d4:	cf 92       	push	r12
     2d6:	df 92       	push	r13
     2d8:	ef 92       	push	r14
     2da:	ff 92       	push	r15
     2dc:	0f 93       	push	r16
     2de:	1f 93       	push	r17
     2e0:	cf 93       	push	r28
     2e2:	df 93       	push	r29
     2e4:	8c 01       	movw	r16, r24
     2e6:	76 2e       	mov	r7, r22
     2e8:	64 2e       	mov	r6, r20
     2ea:	c2 2f       	mov	r28, r18
if (Digit<0)
     2ec:	99 23       	and	r25, r25
     2ee:	3c f4       	brge	.+14     	; 0x2fe <Cache_MDigit5_int+0x36>
{xianshi1(-3,y,x);
     2f0:	8d ef       	ldi	r24, 0xFD	; 253
     2f2:	0e 94 17 01 	call	0x22e	; 0x22e <xianshi1>
	Digit=-Digit;
     2f6:	11 95       	neg	r17
     2f8:	01 95       	neg	r16
     2fa:	11 09       	sbc	r17, r1
     2fc:	03 c0       	rjmp	.+6      	; 0x304 <Cache_MDigit5_int+0x3c>
}
else{xianshi1(-5,y,x);}
     2fe:	8b ef       	ldi	r24, 0xFB	; 251
     300:	0e 94 17 01 	call	0x22e	; 0x22e <xianshi1>
	d0=Digit/10000;
     304:	c8 01       	movw	r24, r16
     306:	60 e1       	ldi	r22, 0x10	; 16
     308:	77 e2       	ldi	r23, 0x27	; 39
     30a:	0e 94 bd 11 	call	0x237a	; 0x237a <__divmodhi4>
     30e:	fb 01       	movw	r30, r22
	Digit=Digit-d0*10000;
     310:	80 ef       	ldi	r24, 0xF0	; 240
     312:	98 ed       	ldi	r25, 0xD8	; 216
     314:	68 9f       	mul	r22, r24
     316:	40 01       	movw	r8, r0
     318:	69 9f       	mul	r22, r25
     31a:	90 0c       	add	r9, r0
     31c:	78 9f       	mul	r23, r24
     31e:	90 0c       	add	r9, r0
     320:	11 24       	eor	r1, r1
     322:	08 0d       	add	r16, r8
     324:	19 1d       	adc	r17, r9
	d1=Digit/1000;
     326:	c8 01       	movw	r24, r16
     328:	68 ee       	ldi	r22, 0xE8	; 232
     32a:	73 e0       	ldi	r23, 0x03	; 3
     32c:	0e 94 bd 11 	call	0x237a	; 0x237a <__divmodhi4>
     330:	6b 01       	movw	r12, r22
	Digit=Digit-d1*1000;
     332:	88 e1       	ldi	r24, 0x18	; 24
     334:	9c ef       	ldi	r25, 0xFC	; 252
     336:	68 9f       	mul	r22, r24
     338:	40 01       	movw	r8, r0
     33a:	69 9f       	mul	r22, r25
     33c:	90 0c       	add	r9, r0
     33e:	78 9f       	mul	r23, r24
     340:	90 0c       	add	r9, r0
     342:	11 24       	eor	r1, r1
     344:	08 0d       	add	r16, r8
     346:	19 1d       	adc	r17, r9
	d2=Digit/100;
     348:	c8 01       	movw	r24, r16
     34a:	64 e6       	ldi	r22, 0x64	; 100
     34c:	70 e0       	ldi	r23, 0x00	; 0
     34e:	0e 94 bd 11 	call	0x237a	; 0x237a <__divmodhi4>
     352:	7b 01       	movw	r14, r22
	Digit=Digit-d2*100;
     354:	2c e9       	ldi	r18, 0x9C	; 156
     356:	26 03       	mulsu	r18, r22
     358:	40 01       	movw	r8, r0
     35a:	27 9f       	mul	r18, r23
     35c:	90 0c       	add	r9, r0
     35e:	11 24       	eor	r1, r1
     360:	80 0e       	add	r8, r16
     362:	91 1e       	adc	r9, r17
	d3=Digit/10;
     364:	0f 2e       	mov	r0, r31
     366:	fa e0       	ldi	r31, 0x0A	; 10
     368:	af 2e       	mov	r10, r31
     36a:	b1 2c       	mov	r11, r1
     36c:	f0 2d       	mov	r31, r0
     36e:	c4 01       	movw	r24, r8
     370:	b5 01       	movw	r22, r10
     372:	0e 94 bd 11 	call	0x237a	; 0x237a <__divmodhi4>
     376:	8b 01       	movw	r16, r22
	Digit=Digit-d3*10;
	d4=Digit%10;
	
	xianshi1(d0,y,x+6+i);
     378:	46 e0       	ldi	r20, 0x06	; 6
     37a:	4c 0f       	add	r20, r28
     37c:	46 0d       	add	r20, r6
     37e:	67 2d       	mov	r22, r7
     380:	8e 2f       	mov	r24, r30
     382:	0e 94 17 01 	call	0x22e	; 0x22e <xianshi1>
	xianshi1(d1,y,x+(6+i)*2);
     386:	d0 e0       	ldi	r29, 0x00	; 0
     388:	26 96       	adiw	r28, 0x06	; 6
     38a:	8c 2f       	mov	r24, r28
     38c:	88 0f       	add	r24, r24
     38e:	68 0e       	add	r6, r24
     390:	46 2d       	mov	r20, r6
     392:	67 2d       	mov	r22, r7
     394:	8c 2d       	mov	r24, r12
     396:	0e 94 17 01 	call	0x22e	; 0x22e <xianshi1>
	xianshi1(d2,y,x+(6+i)*3);
     39a:	6c 0e       	add	r6, r28
     39c:	46 2d       	mov	r20, r6
     39e:	67 2d       	mov	r22, r7
     3a0:	8e 2d       	mov	r24, r14
     3a2:	0e 94 17 01 	call	0x22e	; 0x22e <xianshi1>
	xianshi1(d3,y,x+(6+i)*4);
     3a6:	6c 0e       	add	r6, r28
     3a8:	46 2d       	mov	r20, r6
     3aa:	67 2d       	mov	r22, r7
     3ac:	80 2f       	mov	r24, r16
     3ae:	0e 94 17 01 	call	0x22e	; 0x22e <xianshi1>
	xianshi1(d4,y,x+(6+i)*5);
     3b2:	4c 2f       	mov	r20, r28
     3b4:	46 0d       	add	r20, r6
	d1=Digit/1000;
	Digit=Digit-d1*1000;
	d2=Digit/100;
	Digit=Digit-d2*100;
	d3=Digit/10;
	Digit=Digit-d3*10;
     3b6:	26 ef       	ldi	r18, 0xF6	; 246
     3b8:	20 03       	mulsu	r18, r16
     3ba:	c0 01       	movw	r24, r0
     3bc:	21 9f       	mul	r18, r17
     3be:	90 0d       	add	r25, r0
     3c0:	11 24       	eor	r1, r1
     3c2:	88 0d       	add	r24, r8
     3c4:	99 1d       	adc	r25, r9
	d4=Digit%10;
     3c6:	b5 01       	movw	r22, r10
     3c8:	0e 94 bd 11 	call	0x237a	; 0x237a <__divmodhi4>
	
	xianshi1(d0,y,x+6+i);
	xianshi1(d1,y,x+(6+i)*2);
	xianshi1(d2,y,x+(6+i)*3);
	xianshi1(d3,y,x+(6+i)*4);
	xianshi1(d4,y,x+(6+i)*5);
     3cc:	67 2d       	mov	r22, r7
     3ce:	0e 94 17 01 	call	0x22e	; 0x22e <xianshi1>
     3d2:	df 91       	pop	r29
     3d4:	cf 91       	pop	r28
     3d6:	1f 91       	pop	r17
     3d8:	0f 91       	pop	r16
     3da:	ff 90       	pop	r15
     3dc:	ef 90       	pop	r14
     3de:	df 90       	pop	r13
     3e0:	cf 90       	pop	r12
     3e2:	bf 90       	pop	r11
     3e4:	af 90       	pop	r10
     3e6:	9f 90       	pop	r9
     3e8:	8f 90       	pop	r8
     3ea:	7f 90       	pop	r7
     3ec:	6f 90       	pop	r6
     3ee:	08 95       	ret

000003f0 <SPI_write_9250>:

float AK8963_ASA[3];
int AK8963_offset[3]={30,-220,105};
void SPI_write_9250(unsigned char addr, unsigned char data)
{
	SS_L;
     3f0:	c0 98       	cbi	0x18, 0	; 24
	/* 启动数据传输 */
	SPDR = addr;
     3f2:	8f b9       	out	0x0f, r24	; 15
	/* 等待传输结束 */
	while(!(SPSR & (1<<SPIF)));
     3f4:	77 9b       	sbis	0x0e, 7	; 14
     3f6:	fe cf       	rjmp	.-4      	; 0x3f4 <SPI_write_9250+0x4>
	SPDR = data;
     3f8:	6f b9       	out	0x0f, r22	; 15
	/* 等待传输结束 */
	while(!(SPSR & (1<<SPIF)));
     3fa:	77 9b       	sbis	0x0e, 7	; 14
     3fc:	fe cf       	rjmp	.-4      	; 0x3fa <SPI_write_9250+0xa>
	SS_H;
     3fe:	c0 9a       	sbi	0x18, 0	; 24
     400:	08 95       	ret

00000402 <SPI_read_9250>:
}

uchar SPI_read_9250(unsigned char addr)
{  uchar readData=0;
	addr|=0x80;
     402:	80 68       	ori	r24, 0x80	; 128
	SS_L;
     404:	c0 98       	cbi	0x18, 0	; 24
	/* 启动数据传输 */
	SPDR = addr;
     406:	8f b9       	out	0x0f, r24	; 15
	/* 等待传输结束 */
	while(!(SPSR & (1<<SPIF)));
     408:	77 9b       	sbis	0x0e, 7	; 14
     40a:	fe cf       	rjmp	.-4      	; 0x408 <SPI_read_9250+0x6>
	
	SPDR = 0x00;
     40c:	1f b8       	out	0x0f, r1	; 15
	while(!(SPSR & (1<<SPIF)));
     40e:	77 9b       	sbis	0x0e, 7	; 14
     410:	fe cf       	rjmp	.-4      	; 0x40e <SPI_read_9250+0xc>
	/* 读返回数据 */
	readData=SPDR;
     412:	8f b1       	in	r24, 0x0f	; 15
	SS_H;
     414:	c0 9a       	sbi	0x18, 0	; 24
	
	return readData;//返回数据一定要写在最后
	
}
     416:	08 95       	ret

00000418 <SPI_MasterInit>:
	
	//DDRB = 0xb0;
	//PORTB=0xff;
	/* 使能SPI 主机模式，设置时钟速率为fck/8 */
	
	SPCR = 0X51;
     418:	81 e5       	ldi	r24, 0x51	; 81
     41a:	8d b9       	out	0x0d, r24	; 13
	SPSR=0X00;
     41c:	1e b8       	out	0x0e, r1	; 14
     41e:	08 95       	ret

00000420 <MPU9250_Mag_Write>:
   
	
}

void MPU9250_Mag_Write( uchar writeAddr, uchar writeData )
{
     420:	cf 93       	push	r28
     422:	df 93       	push	r29
     424:	d8 2f       	mov	r29, r24
     426:	c6 2f       	mov	r28, r22
	uchar  status = 0;
	

	SPI_write_9250(MPU9250_I2C_SLV4_ADDR, AK8963_I2C_ADDR);
     428:	6c e0       	ldi	r22, 0x0C	; 12
     42a:	81 e3       	ldi	r24, 0x31	; 49
     42c:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	SPI_write_9250(MPU9250_I2C_SLV4_REG, writeAddr);
     430:	6d 2f       	mov	r22, r29
     432:	82 e3       	ldi	r24, 0x32	; 50
     434:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	SPI_write_9250(MPU9250_I2C_SLV4_DO, writeData);
     438:	6c 2f       	mov	r22, r28
     43a:	83 e3       	ldi	r24, 0x33	; 51
     43c:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	SPI_write_9250(MPU9250_I2C_SLV4_CTRL, MPU9250_I2C_SLVx_EN);
     440:	60 e8       	ldi	r22, 0x80	; 128
     442:	84 e3       	ldi	r24, 0x34	; 52
     444:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>

	do {
		status = SPI_read_9250(MPU9250_I2C_MST_STATUS);
     448:	86 e3       	ldi	r24, 0x36	; 54
     44a:	0e 94 01 02 	call	0x402	; 0x402 <SPI_read_9250>
	   } while(((status & MPU9250_I2C_SLV4_DONE) == 0) );
     44e:	86 ff       	sbrs	r24, 6
     450:	fb cf       	rjmp	.-10     	; 0x448 <MPU9250_Mag_Write+0x28>
}
     452:	df 91       	pop	r29
     454:	cf 91       	pop	r28
     456:	08 95       	ret

00000458 <MPU9250_Mag_Read>:

uchar MPU9250_Mag_Read( uchar readAddr )
{
     458:	cf 93       	push	r28
     45a:	c8 2f       	mov	r28, r24
	uchar  status = 0;
	uchar readDate=0;
	
	SPI_write_9250(MPU9250_I2C_SLV4_ADDR,AK8963_I2C_ADDR | 0x80);
     45c:	6c e8       	ldi	r22, 0x8C	; 140
     45e:	81 e3       	ldi	r24, 0x31	; 49
     460:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	SPI_write_9250(MPU9250_I2C_SLV4_REG,readAddr);
     464:	6c 2f       	mov	r22, r28
     466:	82 e3       	ldi	r24, 0x32	; 50
     468:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	SPI_write_9250(MPU9250_I2C_SLV4_CTRL,MPU9250_I2C_SLVx_EN);
     46c:	60 e8       	ldi	r22, 0x80	; 128
     46e:	84 e3       	ldi	r24, 0x34	; 52
     470:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>

	do {
		status = SPI_read_9250(MPU9250_I2C_MST_STATUS);	
     474:	86 e3       	ldi	r24, 0x36	; 54
     476:	0e 94 01 02 	call	0x402	; 0x402 <SPI_read_9250>
	   } while(((status & MPU9250_I2C_SLV4_DONE) == 0) );
     47a:	86 ff       	sbrs	r24, 6
     47c:	fb cf       	rjmp	.-10     	; 0x474 <MPU9250_Mag_Read+0x1c>
	
	readDate= SPI_read_9250(MPU9250_I2C_SLV4_DI);
     47e:	85 e3       	ldi	r24, 0x35	; 53
     480:	0e 94 01 02 	call	0x402	; 0x402 <SPI_read_9250>
	return readDate;
}
     484:	cf 91       	pop	r28
     486:	08 95       	ret

00000488 <MPU9250_Init>:
	SPCR = 0X51;
	SPSR=0X00;
}

void MPU9250_Init(void)
{  
     488:	ff 92       	push	r15
     48a:	0f 93       	push	r16
     48c:	1f 93       	push	r17
     48e:	cf 93       	push	r28
     490:	df 93       	push	r29
     SPI_write_9250(MPU9250_PWR_MGMT_1     ,0x80);//复位
     492:	60 e8       	ldi	r22, 0x80	; 128
     494:	8b e6       	ldi	r24, 0x6B	; 107
     496:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	 SPI_write_9250(MPU9250_PWR_MGMT_1     ,0x01);
     49a:	61 e0       	ldi	r22, 0x01	; 1
     49c:	8b e6       	ldi	r24, 0x6B	; 107
     49e:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	 SPI_write_9250(MPU9250_PWR_MGMT_2     ,0x00);//使能 加速度计 角速度计
     4a2:	60 e0       	ldi	r22, 0x00	; 0
     4a4:	8c e6       	ldi	r24, 0x6C	; 108
     4a6:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	 SPI_write_9250(MPU9250_CONFIG         ,0x07);// 低通滤波
     4aa:	67 e0       	ldi	r22, 0x07	; 7
     4ac:	8a e1       	ldi	r24, 0x1A	; 26
     4ae:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
     // SPI_write_9250(MPU9250_GYRO_CONFIG  ,0x13);//角速度计 +-1000dps量程 ，低通滤波 
	 SPI_write_9250(MPU9250_GYRO_CONFIG    ,0x18);//角速度计 +-2000dps量程 ，低通滤波  
     4b2:	68 e1       	ldi	r22, 0x18	; 24
     4b4:	8b e1       	ldi	r24, 0x1B	; 27
     4b6:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
   //SPI_write_9250(MPU9250_ACCEL_CONFIG ,0x00);//加速度计+-2g
	 SPI_write_9250(MPU9250_ACCEL_CONFIG   ,0x08);//加速度计+-4g
     4ba:	68 e0       	ldi	r22, 0x08	; 8
     4bc:	8c e1       	ldi	r24, 0x1C	; 28
     4be:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	 SPI_write_9250(MPU9250_ACCEL_CONFIG_2 ,0x00);//加速度计低通滤波关闭 
     4c2:	60 e0       	ldi	r22, 0x00	; 0
     4c4:	8d e1       	ldi	r24, 0x1D	; 29
     4c6:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	 SPI_write_9250(MPU9250_INT_PIN_CFG    ,0x30);//开启中断 高电平 推举式 一直保持 读取清零
     4ca:	60 e3       	ldi	r22, 0x30	; 48
     4cc:	87 e3       	ldi	r24, 0x37	; 55
     4ce:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	 SPI_write_9250(MPU9250_I2C_MST_CTRL  ,0x40);// I2C Speed 
     4d2:	60 e4       	ldi	r22, 0x40	; 64
     4d4:	84 e2       	ldi	r24, 0x24	; 36
     4d6:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	 SPI_write_9250(MPU9250_USER_CTRL      ,0x20);// Enable AUX
     4da:	60 e2       	ldi	r22, 0x20	; 32
     4dc:	8a e6       	ldi	r24, 0x6A	; 106
     4de:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>


   MPU9250_Mag_Write(AK8963_CNTL2,0x01);//磁力计复位 
     4e2:	61 e0       	ldi	r22, 0x01	; 1
     4e4:	8b e0       	ldi	r24, 0x0B	; 11
     4e6:	0e 94 10 02 	call	0x420	; 0x420 <MPU9250_Mag_Write>
   MPU9250_Mag_Write(AK8963_CNTL1, 0x10);       // Power-down mode
     4ea:	60 e1       	ldi	r22, 0x10	; 16
     4ec:	8a e0       	ldi	r24, 0x0A	; 10
     4ee:	0e 94 10 02 	call	0x420	; 0x420 <MPU9250_Mag_Write>
   
   MPU9250_Mag_Write(AK8963_CNTL1, 0x1F);   // Fuse ROM access mode
     4f2:	6f e1       	ldi	r22, 0x1F	; 31
     4f4:	8a e0       	ldi	r24, 0x0A	; 10
     4f6:	0e 94 10 02 	call	0x420	; 0x420 <MPU9250_Mag_Write>
   
   AK8963_ASA[0]= MPU9250_Mag_Read(0x10);  // 读取磁传感器灵敏度的调整值
     4fa:	80 e1       	ldi	r24, 0x10	; 16
     4fc:	0e 94 2c 02 	call	0x458	; 0x458 <MPU9250_Mag_Read>
     500:	0a eb       	ldi	r16, 0xBA	; 186
     502:	16 e0       	ldi	r17, 0x06	; 6
     504:	68 2f       	mov	r22, r24
     506:	70 e0       	ldi	r23, 0x00	; 0
     508:	80 e0       	ldi	r24, 0x00	; 0
     50a:	90 e0       	ldi	r25, 0x00	; 0
     50c:	0e 94 1a 10 	call	0x2034	; 0x2034 <__floatunsisf>
     510:	f8 01       	movw	r30, r16
     512:	60 83       	st	Z, r22
     514:	71 83       	std	Z+1, r23	; 0x01
     516:	82 83       	std	Z+2, r24	; 0x02
     518:	93 83       	std	Z+3, r25	; 0x03
   AK8963_ASA[1]= MPU9250_Mag_Read(0x11);
     51a:	81 e1       	ldi	r24, 0x11	; 17
     51c:	0e 94 2c 02 	call	0x458	; 0x458 <MPU9250_Mag_Read>
     520:	ce eb       	ldi	r28, 0xBE	; 190
     522:	d6 e0       	ldi	r29, 0x06	; 6
     524:	68 2f       	mov	r22, r24
     526:	70 e0       	ldi	r23, 0x00	; 0
     528:	80 e0       	ldi	r24, 0x00	; 0
     52a:	90 e0       	ldi	r25, 0x00	; 0
     52c:	0e 94 1a 10 	call	0x2034	; 0x2034 <__floatunsisf>
     530:	68 83       	st	Y, r22
     532:	79 83       	std	Y+1, r23	; 0x01
     534:	8a 83       	std	Y+2, r24	; 0x02
     536:	9b 83       	std	Y+3, r25	; 0x03
   AK8963_ASA[2]= MPU9250_Mag_Read(0x12);
     538:	82 e1       	ldi	r24, 0x12	; 18
     53a:	0e 94 2c 02 	call	0x458	; 0x458 <MPU9250_Mag_Read>
     53e:	f8 2e       	mov	r15, r24
   
   AK8963_ASA[0]=((AK8963_ASA[0]-128)/256)+1; //计算灵敏度调整值
     540:	20 e0       	ldi	r18, 0x00	; 0
     542:	30 e0       	ldi	r19, 0x00	; 0
     544:	40 e0       	ldi	r20, 0x00	; 0
     546:	53 e4       	ldi	r21, 0x43	; 67
     548:	f8 01       	movw	r30, r16
     54a:	60 81       	ld	r22, Z
     54c:	71 81       	ldd	r23, Z+1	; 0x01
     54e:	82 81       	ldd	r24, Z+2	; 0x02
     550:	93 81       	ldd	r25, Z+3	; 0x03
     552:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__subsf3>
     556:	20 e0       	ldi	r18, 0x00	; 0
     558:	30 e0       	ldi	r19, 0x00	; 0
     55a:	40 e8       	ldi	r20, 0x80	; 128
     55c:	5b e3       	ldi	r21, 0x3B	; 59
     55e:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     562:	20 e0       	ldi	r18, 0x00	; 0
     564:	30 e0       	ldi	r19, 0x00	; 0
     566:	40 e8       	ldi	r20, 0x80	; 128
     568:	5f e3       	ldi	r21, 0x3F	; 63
     56a:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     56e:	f8 01       	movw	r30, r16
     570:	60 83       	st	Z, r22
     572:	71 83       	std	Z+1, r23	; 0x01
     574:	82 83       	std	Z+2, r24	; 0x02
     576:	93 83       	std	Z+3, r25	; 0x03
   AK8963_ASA[1]=((AK8963_ASA[1]-128)/256)+1;
     578:	20 e0       	ldi	r18, 0x00	; 0
     57a:	30 e0       	ldi	r19, 0x00	; 0
     57c:	40 e0       	ldi	r20, 0x00	; 0
     57e:	53 e4       	ldi	r21, 0x43	; 67
     580:	68 81       	ld	r22, Y
     582:	79 81       	ldd	r23, Y+1	; 0x01
     584:	8a 81       	ldd	r24, Y+2	; 0x02
     586:	9b 81       	ldd	r25, Y+3	; 0x03
     588:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__subsf3>
     58c:	20 e0       	ldi	r18, 0x00	; 0
     58e:	30 e0       	ldi	r19, 0x00	; 0
     590:	40 e8       	ldi	r20, 0x80	; 128
     592:	5b e3       	ldi	r21, 0x3B	; 59
     594:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     598:	20 e0       	ldi	r18, 0x00	; 0
     59a:	30 e0       	ldi	r19, 0x00	; 0
     59c:	40 e8       	ldi	r20, 0x80	; 128
     59e:	5f e3       	ldi	r21, 0x3F	; 63
     5a0:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     5a4:	68 83       	st	Y, r22
     5a6:	79 83       	std	Y+1, r23	; 0x01
     5a8:	8a 83       	std	Y+2, r24	; 0x02
     5aa:	9b 83       	std	Y+3, r25	; 0x03
   
   MPU9250_Mag_Write(AK8963_CNTL1, 0x1F);   // Fuse ROM access mode
   
   AK8963_ASA[0]= MPU9250_Mag_Read(0x10);  // 读取磁传感器灵敏度的调整值
   AK8963_ASA[1]= MPU9250_Mag_Read(0x11);
   AK8963_ASA[2]= MPU9250_Mag_Read(0x12);
     5ac:	6f 2d       	mov	r22, r15
     5ae:	70 e0       	ldi	r23, 0x00	; 0
     5b0:	80 e0       	ldi	r24, 0x00	; 0
     5b2:	90 e0       	ldi	r25, 0x00	; 0
     5b4:	0e 94 1a 10 	call	0x2034	; 0x2034 <__floatunsisf>
   
   AK8963_ASA[0]=((AK8963_ASA[0]-128)/256)+1; //计算灵敏度调整值
   AK8963_ASA[1]=((AK8963_ASA[1]-128)/256)+1;
   AK8963_ASA[2]=((AK8963_ASA[2]-128)/256)+1; 
     5b8:	20 e0       	ldi	r18, 0x00	; 0
     5ba:	30 e0       	ldi	r19, 0x00	; 0
     5bc:	40 e0       	ldi	r20, 0x00	; 0
     5be:	53 e4       	ldi	r21, 0x43	; 67
     5c0:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__subsf3>
     5c4:	20 e0       	ldi	r18, 0x00	; 0
     5c6:	30 e0       	ldi	r19, 0x00	; 0
     5c8:	40 e8       	ldi	r20, 0x80	; 128
     5ca:	5b e3       	ldi	r21, 0x3B	; 59
     5cc:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     5d0:	20 e0       	ldi	r18, 0x00	; 0
     5d2:	30 e0       	ldi	r19, 0x00	; 0
     5d4:	40 e8       	ldi	r20, 0x80	; 128
     5d6:	5f e3       	ldi	r21, 0x3F	; 63
     5d8:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     5dc:	60 93 c2 06 	sts	0x06C2, r22
     5e0:	70 93 c3 06 	sts	0x06C3, r23
     5e4:	80 93 c4 06 	sts	0x06C4, r24
     5e8:	90 93 c5 06 	sts	0x06C5, r25
   
   
   MPU9250_Mag_Write(AK8963_CNTL1, 0x10);       // Power-down mode 
     5ec:	60 e1       	ldi	r22, 0x10	; 16
     5ee:	8a e0       	ldi	r24, 0x0A	; 10
     5f0:	0e 94 10 02 	call	0x420	; 0x420 <MPU9250_Mag_Write>
   
   SPI_write_9250(MPU9250_I2C_MST_CTRL, 0x5D);
     5f4:	6d e5       	ldi	r22, 0x5D	; 93
     5f6:	84 e2       	ldi	r24, 0x24	; 36
     5f8:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
   SPI_write_9250(MPU9250_I2C_SLV0_ADDR, AK8963_I2C_ADDR | 0x80); //设置辅助iic读取 器件地址
     5fc:	6c e8       	ldi	r22, 0x8C	; 140
     5fe:	85 e2       	ldi	r24, 0x25	; 37
     600:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
   SPI_write_9250(MPU9250_I2C_SLV0_REG, AK8963_ST1);        //开始读的地址  
     604:	62 e0       	ldi	r22, 0x02	; 2
     606:	86 e2       	ldi	r24, 0x26	; 38
     608:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
   SPI_write_9250(MPU9250_I2C_SLV0_CTRL, MPU9250_I2C_SLVx_EN | 8); 
     60c:	68 e8       	ldi	r22, 0x88	; 136
     60e:	87 e2       	ldi	r24, 0x27	; 39
     610:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
  
   MPU9250_Mag_Write(AK8963_CNTL1, 0x16);       // Continuous measurement mode 2
     614:	66 e1       	ldi	r22, 0x16	; 22
     616:	8a e0       	ldi	r24, 0x0A	; 10
     618:	0e 94 10 02 	call	0x420	; 0x420 <MPU9250_Mag_Write>
   
   SPI_write_9250(MPU9250_I2C_SLV4_CTRL, 0x09);  //往后连续读的位数 一共读 9+1
     61c:	69 e0       	ldi	r22, 0x09	; 9
     61e:	84 e3       	ldi	r24, 0x34	; 52
     620:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
   
   SPI_write_9250(MPU9250_I2C_MST_DELAY_CTRL, 0x81);
     624:	61 e8       	ldi	r22, 0x81	; 129
     626:	87 e6       	ldi	r24, 0x67	; 103
     628:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
   
	
}
     62c:	df 91       	pop	r29
     62e:	cf 91       	pop	r28
     630:	1f 91       	pop	r17
     632:	0f 91       	pop	r16
     634:	ff 90       	pop	r15
     636:	08 95       	ret

00000638 <MPU9250_Read>:
	return readDate;
}
void MPU9250_Read( uchar readAddr, int *readData, uchar lens )
{
			
		readAddr|=0x80;
     638:	80 68       	ori	r24, 0x80	; 128
		
		SS_L;
     63a:	c0 98       	cbi	0x18, 0	; 24
		/* 启动数据传输 */
		SPDR =readAddr;
     63c:	8f b9       	out	0x0f, r24	; 15
		/* 等待传输结束 */
		while(!(SPSR & (1<<SPIF)));
     63e:	77 9b       	sbis	0x0e, 7	; 14
     640:	fe cf       	rjmp	.-4      	; 0x63e <MPU9250_Read+0x6>
		
		for(uchar i = 0; i < lens; i++)
     642:	44 23       	and	r20, r20
     644:	69 f0       	breq	.+26     	; 0x660 <MPU9250_Read+0x28>
     646:	e6 2f       	mov	r30, r22
     648:	f7 2f       	mov	r31, r23
     64a:	20 e0       	ldi	r18, 0x00	; 0
		{
		SPDR = 0x00;
     64c:	1f b8       	out	0x0f, r1	; 15
		while(!(SPSR & (1<<SPIF)));	
     64e:	77 9b       	sbis	0x0e, 7	; 14
     650:	fe cf       	rjmp	.-4      	; 0x64e <MPU9250_Read+0x16>
		
		readData[i] = SPDR;
     652:	8f b1       	in	r24, 0x0f	; 15
     654:	90 e0       	ldi	r25, 0x00	; 0
     656:	81 93       	st	Z+, r24
     658:	91 93       	st	Z+, r25
		/* 启动数据传输 */
		SPDR =readAddr;
		/* 等待传输结束 */
		while(!(SPSR & (1<<SPIF)));
		
		for(uchar i = 0; i < lens; i++)
     65a:	2f 5f       	subi	r18, 0xFF	; 255
     65c:	24 13       	cpse	r18, r20
     65e:	f6 cf       	rjmp	.-20     	; 0x64c <MPU9250_Read+0x14>
		
		readData[i] = SPDR;
		
		}
		
		SS_H;
     660:	c0 9a       	sbi	0x18, 0	; 24
     662:	08 95       	ret

00000664 <MPU9250_getData>:
}

void MPU9250_getData( int16_t *dataIMU )
{
     664:	cf 92       	push	r12
     666:	df 92       	push	r13
     668:	ef 92       	push	r14
     66a:	ff 92       	push	r15
     66c:	0f 93       	push	r16
     66e:	1f 93       	push	r17
     670:	cf 93       	push	r28
     672:	df 93       	push	r29
     674:	cd b7       	in	r28, 0x3d	; 61
     676:	de b7       	in	r29, 0x3e	; 62
     678:	ac 97       	sbiw	r28, 0x2c	; 44
     67a:	0f b6       	in	r0, 0x3f	; 63
     67c:	f8 94       	cli
     67e:	de bf       	out	0x3e, r29	; 62
     680:	0f be       	out	0x3f, r0	; 63
     682:	cd bf       	out	0x3d, r28	; 61
     684:	8c 01       	movw	r16, r24
	int tmpRead[22] = {0};
     686:	be 01       	movw	r22, r28
     688:	6f 5f       	subi	r22, 0xFF	; 255
     68a:	7f 4f       	sbci	r23, 0xFF	; 255
     68c:	8c e2       	ldi	r24, 0x2C	; 44
     68e:	fb 01       	movw	r30, r22
     690:	11 92       	st	Z+, r1
     692:	8a 95       	dec	r24
     694:	e9 f7       	brne	.-6      	; 0x690 <MPU9250_getData+0x2c>

	
	MPU9250_Read(MPU9250_ACCEL_XOUT_H, tmpRead, 22);
     696:	46 e1       	ldi	r20, 0x16	; 22
     698:	8b e3       	ldi	r24, 0x3B	; 59
     69a:	0e 94 1c 03 	call	0x638	; 0x638 <MPU9250_Read>


	dataIMU[0] =  (tmpRead[6]<<8)+tmpRead[7];     // Temp
     69e:	80 e0       	ldi	r24, 0x00	; 0
     6a0:	90 e0       	ldi	r25, 0x00	; 0
     6a2:	9d 85       	ldd	r25, Y+13	; 0x0d
     6a4:	2f 85       	ldd	r18, Y+15	; 0x0f
     6a6:	38 89       	ldd	r19, Y+16	; 0x10
     6a8:	82 0f       	add	r24, r18
     6aa:	93 1f       	adc	r25, r19
     6ac:	f8 01       	movw	r30, r16
     6ae:	91 83       	std	Z+1, r25	; 0x01
     6b0:	80 83       	st	Z, r24
	dataIMU[1] =  (tmpRead[0]<<8)+tmpRead[1];     // Acc.X
     6b2:	80 e0       	ldi	r24, 0x00	; 0
     6b4:	90 e0       	ldi	r25, 0x00	; 0
     6b6:	99 81       	ldd	r25, Y+1	; 0x01
     6b8:	2b 81       	ldd	r18, Y+3	; 0x03
     6ba:	3c 81       	ldd	r19, Y+4	; 0x04
     6bc:	82 0f       	add	r24, r18
     6be:	93 1f       	adc	r25, r19
     6c0:	93 83       	std	Z+3, r25	; 0x03
     6c2:	82 83       	std	Z+2, r24	; 0x02
	dataIMU[2] =  (tmpRead[2]<<8)+tmpRead[3];     // Acc.Y
     6c4:	80 e0       	ldi	r24, 0x00	; 0
     6c6:	90 e0       	ldi	r25, 0x00	; 0
     6c8:	9d 81       	ldd	r25, Y+5	; 0x05
     6ca:	2f 81       	ldd	r18, Y+7	; 0x07
     6cc:	38 85       	ldd	r19, Y+8	; 0x08
     6ce:	82 0f       	add	r24, r18
     6d0:	93 1f       	adc	r25, r19
     6d2:	95 83       	std	Z+5, r25	; 0x05
     6d4:	84 83       	std	Z+4, r24	; 0x04
	dataIMU[3] =  (tmpRead[4]<<8)+tmpRead[5];     // Acc.Z
     6d6:	80 e0       	ldi	r24, 0x00	; 0
     6d8:	90 e0       	ldi	r25, 0x00	; 0
     6da:	99 85       	ldd	r25, Y+9	; 0x09
     6dc:	2b 85       	ldd	r18, Y+11	; 0x0b
     6de:	3c 85       	ldd	r19, Y+12	; 0x0c
     6e0:	82 0f       	add	r24, r18
     6e2:	93 1f       	adc	r25, r19
     6e4:	97 83       	std	Z+7, r25	; 0x07
     6e6:	86 83       	std	Z+6, r24	; 0x06
	dataIMU[4] =  (tmpRead[8]<<8)+tmpRead[9];     // Gyr.X
     6e8:	80 e0       	ldi	r24, 0x00	; 0
     6ea:	90 e0       	ldi	r25, 0x00	; 0
     6ec:	99 89       	ldd	r25, Y+17	; 0x11
     6ee:	2b 89       	ldd	r18, Y+19	; 0x13
     6f0:	3c 89       	ldd	r19, Y+20	; 0x14
     6f2:	82 0f       	add	r24, r18
     6f4:	93 1f       	adc	r25, r19
     6f6:	91 87       	std	Z+9, r25	; 0x09
     6f8:	80 87       	std	Z+8, r24	; 0x08
	dataIMU[5] = (tmpRead[10]<<8)+tmpRead[11];    // Gyr.Y
     6fa:	80 e0       	ldi	r24, 0x00	; 0
     6fc:	90 e0       	ldi	r25, 0x00	; 0
     6fe:	9d 89       	ldd	r25, Y+21	; 0x15
     700:	2f 89       	ldd	r18, Y+23	; 0x17
     702:	38 8d       	ldd	r19, Y+24	; 0x18
     704:	82 0f       	add	r24, r18
     706:	93 1f       	adc	r25, r19
     708:	93 87       	std	Z+11, r25	; 0x0b
     70a:	82 87       	std	Z+10, r24	; 0x0a
	dataIMU[6] = (tmpRead[12]<<8)+tmpRead[13];    // Gyr.Z
     70c:	80 e0       	ldi	r24, 0x00	; 0
     70e:	90 e0       	ldi	r25, 0x00	; 0
     710:	99 8d       	ldd	r25, Y+25	; 0x19
     712:	2b 8d       	ldd	r18, Y+27	; 0x1b
     714:	3c 8d       	ldd	r19, Y+28	; 0x1c
     716:	82 0f       	add	r24, r18
     718:	93 1f       	adc	r25, r19
     71a:	95 87       	std	Z+13, r25	; 0x0d
     71c:	84 87       	std	Z+12, r24	; 0x0c
// 	dataIMU[7] = (tmpRead[16]<<8)+tmpRead[15];    // Mag.X
// 	dataIMU[8] = (tmpRead[18]<<8)+tmpRead[17];    // Mag.Y
//     dataIMU[9] = (tmpRead[20]<<8)+tmpRead[19];    // Mag.Z


	dataIMU[7] = ((tmpRead[16]<<8)+tmpRead[15])*AK8963_ASA[0]+ AK8963_offset[0];    // Mag.X
     71e:	80 e0       	ldi	r24, 0x00	; 0
     720:	90 e0       	ldi	r25, 0x00	; 0
     722:	99 a1       	ldd	r25, Y+33	; 0x21
     724:	6f 8d       	ldd	r22, Y+31	; 0x1f
     726:	78 a1       	ldd	r23, Y+32	; 0x20
     728:	68 0f       	add	r22, r24
     72a:	79 1f       	adc	r23, r25
     72c:	88 27       	eor	r24, r24
     72e:	77 fd       	sbrc	r23, 7
     730:	80 95       	com	r24
     732:	98 2f       	mov	r25, r24
     734:	0e 94 1c 10 	call	0x2038	; 0x2038 <__floatsisf>
     738:	20 91 ba 06 	lds	r18, 0x06BA
     73c:	30 91 bb 06 	lds	r19, 0x06BB
     740:	40 91 bc 06 	lds	r20, 0x06BC
     744:	50 91 bd 06 	lds	r21, 0x06BD
     748:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     74c:	6b 01       	movw	r12, r22
     74e:	7c 01       	movw	r14, r24
     750:	60 91 68 00 	lds	r22, 0x0068
     754:	70 91 69 00 	lds	r23, 0x0069
     758:	88 27       	eor	r24, r24
     75a:	77 fd       	sbrc	r23, 7
     75c:	80 95       	com	r24
     75e:	98 2f       	mov	r25, r24
     760:	0e 94 1c 10 	call	0x2038	; 0x2038 <__floatsisf>
     764:	9b 01       	movw	r18, r22
     766:	ac 01       	movw	r20, r24
     768:	c7 01       	movw	r24, r14
     76a:	b6 01       	movw	r22, r12
     76c:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     770:	0e 94 e9 0f 	call	0x1fd2	; 0x1fd2 <__fixsfsi>
     774:	f8 01       	movw	r30, r16
     776:	77 87       	std	Z+15, r23	; 0x0f
     778:	66 87       	std	Z+14, r22	; 0x0e
	dataIMU[8] = ((tmpRead[18]<<8)+tmpRead[17])*AK8963_ASA[1]+ AK8963_offset[1];    // Mag.Y
     77a:	80 e0       	ldi	r24, 0x00	; 0
     77c:	90 e0       	ldi	r25, 0x00	; 0
     77e:	9d a1       	ldd	r25, Y+37	; 0x25
     780:	6b a1       	ldd	r22, Y+35	; 0x23
     782:	7c a1       	ldd	r23, Y+36	; 0x24
     784:	68 0f       	add	r22, r24
     786:	79 1f       	adc	r23, r25
     788:	88 27       	eor	r24, r24
     78a:	77 fd       	sbrc	r23, 7
     78c:	80 95       	com	r24
     78e:	98 2f       	mov	r25, r24
     790:	0e 94 1c 10 	call	0x2038	; 0x2038 <__floatsisf>
     794:	20 91 be 06 	lds	r18, 0x06BE
     798:	30 91 bf 06 	lds	r19, 0x06BF
     79c:	40 91 c0 06 	lds	r20, 0x06C0
     7a0:	50 91 c1 06 	lds	r21, 0x06C1
     7a4:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     7a8:	6b 01       	movw	r12, r22
     7aa:	7c 01       	movw	r14, r24
     7ac:	60 91 6a 00 	lds	r22, 0x006A
     7b0:	70 91 6b 00 	lds	r23, 0x006B
     7b4:	88 27       	eor	r24, r24
     7b6:	77 fd       	sbrc	r23, 7
     7b8:	80 95       	com	r24
     7ba:	98 2f       	mov	r25, r24
     7bc:	0e 94 1c 10 	call	0x2038	; 0x2038 <__floatsisf>
     7c0:	9b 01       	movw	r18, r22
     7c2:	ac 01       	movw	r20, r24
     7c4:	c7 01       	movw	r24, r14
     7c6:	b6 01       	movw	r22, r12
     7c8:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     7cc:	0e 94 e9 0f 	call	0x1fd2	; 0x1fd2 <__fixsfsi>
     7d0:	f8 01       	movw	r30, r16
     7d2:	71 8b       	std	Z+17, r23	; 0x11
     7d4:	60 8b       	std	Z+16, r22	; 0x10
    dataIMU[9] = ((tmpRead[20]<<8)+tmpRead[19])*AK8963_ASA[2]+ AK8963_offset[2];    // Mag.Z
     7d6:	80 e0       	ldi	r24, 0x00	; 0
     7d8:	90 e0       	ldi	r25, 0x00	; 0
     7da:	99 a5       	ldd	r25, Y+41	; 0x29
     7dc:	6f a1       	ldd	r22, Y+39	; 0x27
     7de:	78 a5       	ldd	r23, Y+40	; 0x28
     7e0:	68 0f       	add	r22, r24
     7e2:	79 1f       	adc	r23, r25
     7e4:	88 27       	eor	r24, r24
     7e6:	77 fd       	sbrc	r23, 7
     7e8:	80 95       	com	r24
     7ea:	98 2f       	mov	r25, r24
     7ec:	0e 94 1c 10 	call	0x2038	; 0x2038 <__floatsisf>
     7f0:	20 91 c2 06 	lds	r18, 0x06C2
     7f4:	30 91 c3 06 	lds	r19, 0x06C3
     7f8:	40 91 c4 06 	lds	r20, 0x06C4
     7fc:	50 91 c5 06 	lds	r21, 0x06C5
     800:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     804:	6b 01       	movw	r12, r22
     806:	7c 01       	movw	r14, r24
     808:	60 91 6c 00 	lds	r22, 0x006C
     80c:	70 91 6d 00 	lds	r23, 0x006D
     810:	88 27       	eor	r24, r24
     812:	77 fd       	sbrc	r23, 7
     814:	80 95       	com	r24
     816:	98 2f       	mov	r25, r24
     818:	0e 94 1c 10 	call	0x2038	; 0x2038 <__floatsisf>
     81c:	9b 01       	movw	r18, r22
     81e:	ac 01       	movw	r20, r24
     820:	c7 01       	movw	r24, r14
     822:	b6 01       	movw	r22, r12
     824:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     828:	0e 94 e9 0f 	call	0x1fd2	; 0x1fd2 <__fixsfsi>
     82c:	f8 01       	movw	r30, r16
     82e:	73 8b       	std	Z+19, r23	; 0x13
     830:	62 8b       	std	Z+18, r22	; 0x12


     832:	ac 96       	adiw	r28, 0x2c	; 44
     834:	0f b6       	in	r0, 0x3f	; 63
     836:	f8 94       	cli
     838:	de bf       	out	0x3e, r29	; 62
     83a:	0f be       	out	0x3f, r0	; 63
     83c:	cd bf       	out	0x3d, r28	; 61
     83e:	df 91       	pop	r29
     840:	cf 91       	pop	r28
     842:	1f 91       	pop	r17
     844:	0f 91       	pop	r16
     846:	ff 90       	pop	r15
     848:	ef 90       	pop	r14
     84a:	df 90       	pop	r13
     84c:	cf 90       	pop	r12
     84e:	08 95       	ret

00000850 <Quaternions_Count>:

double  q0 = 1, q1 = 0, q2 = 0, q3 = 0; // 四元数元素方位估计
float exInt = 0, eyInt = 0, ezInt = 0; // 缩放积分误差
float yaw,pitch,roll;
void Quaternions_Count( float ax, float ay, float az,float gx, float gy, float gz, float mx, float my, float mz)
 {
     850:	4f 92       	push	r4
     852:	5f 92       	push	r5
     854:	6f 92       	push	r6
     856:	7f 92       	push	r7
     858:	8f 92       	push	r8
     85a:	9f 92       	push	r9
     85c:	af 92       	push	r10
     85e:	bf 92       	push	r11
     860:	cf 92       	push	r12
     862:	df 92       	push	r13
     864:	ef 92       	push	r14
     866:	ff 92       	push	r15
     868:	0f 93       	push	r16
     86a:	1f 93       	push	r17
     86c:	cf 93       	push	r28
     86e:	df 93       	push	r29
     870:	cd b7       	in	r28, 0x3d	; 61
     872:	de b7       	in	r29, 0x3e	; 62
     874:	c0 57       	subi	r28, 0x70	; 112
     876:	d1 09       	sbc	r29, r1
     878:	0f b6       	in	r0, 0x3f	; 63
     87a:	f8 94       	cli
     87c:	de bf       	out	0x3e, r29	; 62
     87e:	0f be       	out	0x3f, r0	; 63
     880:	cd bf       	out	0x3d, r28	; 61
     882:	6d 87       	std	Y+13, r22	; 0x0d
     884:	7e 87       	std	Y+14, r23	; 0x0e
     886:	8f 87       	std	Y+15, r24	; 0x0f
     888:	98 8b       	std	Y+16, r25	; 0x10
     88a:	29 01       	movw	r4, r18
     88c:	3a 01       	movw	r6, r20
     88e:	e9 86       	std	Y+9, r14	; 0x09
     890:	fa 86       	std	Y+10, r15	; 0x0a
     892:	0b 87       	std	Y+11, r16	; 0x0b
     894:	1c 87       	std	Y+12, r17	; 0x0c
	double norm;
	float hx, hy, hz, bx, bz;
	float vx, vy, vz, wx, wy, wz;
	float ex, ey, ez;
	///辅助变量，以减少重复操作次数
	float q0q0 = q0*q0;
     896:	80 91 60 00 	lds	r24, 0x0060
     89a:	90 91 61 00 	lds	r25, 0x0061
     89e:	a0 91 62 00 	lds	r26, 0x0062
     8a2:	b0 91 63 00 	lds	r27, 0x0063
     8a6:	89 ab       	std	Y+49, r24	; 0x31
     8a8:	9a ab       	std	Y+50, r25	; 0x32
     8aa:	ab ab       	std	Y+51, r26	; 0x33
     8ac:	bc ab       	std	Y+52, r27	; 0x34
	float q0q1 = q0*q1;
     8ae:	80 91 74 06 	lds	r24, 0x0674
     8b2:	90 91 75 06 	lds	r25, 0x0675
     8b6:	a0 91 76 06 	lds	r26, 0x0676
     8ba:	b0 91 77 06 	lds	r27, 0x0677
     8be:	8d 8f       	std	Y+29, r24	; 0x1d
     8c0:	9e 8f       	std	Y+30, r25	; 0x1e
     8c2:	af 8f       	std	Y+31, r26	; 0x1f
     8c4:	b8 a3       	std	Y+32, r27	; 0x20
     8c6:	9c 01       	movw	r18, r24
     8c8:	ad 01       	movw	r20, r26
     8ca:	69 a9       	ldd	r22, Y+49	; 0x31
     8cc:	7a a9       	ldd	r23, Y+50	; 0x32
     8ce:	8b a9       	ldd	r24, Y+51	; 0x33
     8d0:	9c a9       	ldd	r25, Y+52	; 0x34
     8d2:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     8d6:	6d a7       	std	Y+45, r22	; 0x2d
     8d8:	7e a7       	std	Y+46, r23	; 0x2e
     8da:	8f a7       	std	Y+47, r24	; 0x2f
     8dc:	98 ab       	std	Y+48, r25	; 0x30
	float q0q2 = q0*q2;
     8de:	80 91 70 06 	lds	r24, 0x0670
     8e2:	90 91 71 06 	lds	r25, 0x0671
     8e6:	a0 91 72 06 	lds	r26, 0x0672
     8ea:	b0 91 73 06 	lds	r27, 0x0673
     8ee:	89 8f       	std	Y+25, r24	; 0x19
     8f0:	9a 8f       	std	Y+26, r25	; 0x1a
     8f2:	ab 8f       	std	Y+27, r26	; 0x1b
     8f4:	bc 8f       	std	Y+28, r27	; 0x1c
     8f6:	9c 01       	movw	r18, r24
     8f8:	ad 01       	movw	r20, r26
     8fa:	69 a9       	ldd	r22, Y+49	; 0x31
     8fc:	7a a9       	ldd	r23, Y+50	; 0x32
     8fe:	8b a9       	ldd	r24, Y+51	; 0x33
     900:	9c a9       	ldd	r25, Y+52	; 0x34
     902:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     906:	21 96       	adiw	r28, 0x01	; 1
     908:	6c af       	std	Y+60, r22	; 0x3c
     90a:	7d af       	std	Y+61, r23	; 0x3d
     90c:	8e af       	std	Y+62, r24	; 0x3e
     90e:	9f af       	std	Y+63, r25	; 0x3f
     910:	21 97       	sbiw	r28, 0x01	; 1
	float q0q3 = q0*q3;
     912:	80 91 6c 06 	lds	r24, 0x066C
     916:	90 91 6d 06 	lds	r25, 0x066D
     91a:	a0 91 6e 06 	lds	r26, 0x066E
     91e:	b0 91 6f 06 	lds	r27, 0x066F
     922:	89 a3       	std	Y+33, r24	; 0x21
     924:	9a a3       	std	Y+34, r25	; 0x22
     926:	ab a3       	std	Y+35, r26	; 0x23
     928:	bc a3       	std	Y+36, r27	; 0x24
     92a:	9c 01       	movw	r18, r24
     92c:	ad 01       	movw	r20, r26
     92e:	69 a9       	ldd	r22, Y+49	; 0x31
     930:	7a a9       	ldd	r23, Y+50	; 0x32
     932:	8b a9       	ldd	r24, Y+51	; 0x33
     934:	9c a9       	ldd	r25, Y+52	; 0x34
     936:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     93a:	69 a7       	std	Y+41, r22	; 0x29
     93c:	7a a7       	std	Y+42, r23	; 0x2a
     93e:	8b a7       	std	Y+43, r24	; 0x2b
     940:	9c a7       	std	Y+44, r25	; 0x2c
	float q1q1 = q1*q1;
     942:	2d 8d       	ldd	r18, Y+29	; 0x1d
     944:	3e 8d       	ldd	r19, Y+30	; 0x1e
     946:	4f 8d       	ldd	r20, Y+31	; 0x1f
     948:	58 a1       	ldd	r21, Y+32	; 0x20
     94a:	ca 01       	movw	r24, r20
     94c:	b9 01       	movw	r22, r18
     94e:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     952:	29 96       	adiw	r28, 0x09	; 9
     954:	6c af       	std	Y+60, r22	; 0x3c
     956:	7d af       	std	Y+61, r23	; 0x3d
     958:	8e af       	std	Y+62, r24	; 0x3e
     95a:	9f af       	std	Y+63, r25	; 0x3f
     95c:	29 97       	sbiw	r28, 0x09	; 9
	float q1q2 = q1*q2;
     95e:	29 8d       	ldd	r18, Y+25	; 0x19
     960:	3a 8d       	ldd	r19, Y+26	; 0x1a
     962:	4b 8d       	ldd	r20, Y+27	; 0x1b
     964:	5c 8d       	ldd	r21, Y+28	; 0x1c
     966:	6d 8d       	ldd	r22, Y+29	; 0x1d
     968:	7e 8d       	ldd	r23, Y+30	; 0x1e
     96a:	8f 8d       	ldd	r24, Y+31	; 0x1f
     96c:	98 a1       	ldd	r25, Y+32	; 0x20
     96e:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     972:	25 96       	adiw	r28, 0x05	; 5
     974:	6c af       	std	Y+60, r22	; 0x3c
     976:	7d af       	std	Y+61, r23	; 0x3d
     978:	8e af       	std	Y+62, r24	; 0x3e
     97a:	9f af       	std	Y+63, r25	; 0x3f
     97c:	25 97       	sbiw	r28, 0x05	; 5
	float q1q3 = q1*q3;
     97e:	29 a1       	ldd	r18, Y+33	; 0x21
     980:	3a a1       	ldd	r19, Y+34	; 0x22
     982:	4b a1       	ldd	r20, Y+35	; 0x23
     984:	5c a1       	ldd	r21, Y+36	; 0x24
     986:	6d 8d       	ldd	r22, Y+29	; 0x1d
     988:	7e 8d       	ldd	r23, Y+30	; 0x1e
     98a:	8f 8d       	ldd	r24, Y+31	; 0x1f
     98c:	98 a1       	ldd	r25, Y+32	; 0x20
     98e:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     992:	2d 96       	adiw	r28, 0x0d	; 13
     994:	6c af       	std	Y+60, r22	; 0x3c
     996:	7d af       	std	Y+61, r23	; 0x3d
     998:	8e af       	std	Y+62, r24	; 0x3e
     99a:	9f af       	std	Y+63, r25	; 0x3f
     99c:	2d 97       	sbiw	r28, 0x0d	; 13
	float q2q2 = q2*q2;
     99e:	29 8d       	ldd	r18, Y+25	; 0x19
     9a0:	3a 8d       	ldd	r19, Y+26	; 0x1a
     9a2:	4b 8d       	ldd	r20, Y+27	; 0x1b
     9a4:	5c 8d       	ldd	r21, Y+28	; 0x1c
     9a6:	ca 01       	movw	r24, r20
     9a8:	b9 01       	movw	r22, r18
     9aa:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     9ae:	6d a3       	std	Y+37, r22	; 0x25
     9b0:	7e a3       	std	Y+38, r23	; 0x26
     9b2:	8f a3       	std	Y+39, r24	; 0x27
     9b4:	98 a7       	std	Y+40, r25	; 0x28
	float q2q3 = q2*q3;
     9b6:	29 a1       	ldd	r18, Y+33	; 0x21
     9b8:	3a a1       	ldd	r19, Y+34	; 0x22
     9ba:	4b a1       	ldd	r20, Y+35	; 0x23
     9bc:	5c a1       	ldd	r21, Y+36	; 0x24
     9be:	69 8d       	ldd	r22, Y+25	; 0x19
     9c0:	7a 8d       	ldd	r23, Y+26	; 0x1a
     9c2:	8b 8d       	ldd	r24, Y+27	; 0x1b
     9c4:	9c 8d       	ldd	r25, Y+28	; 0x1c
     9c6:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     9ca:	61 96       	adiw	r28, 0x11	; 17
     9cc:	6c af       	std	Y+60, r22	; 0x3c
     9ce:	7d af       	std	Y+61, r23	; 0x3d
     9d0:	8e af       	std	Y+62, r24	; 0x3e
     9d2:	9f af       	std	Y+63, r25	; 0x3f
     9d4:	61 97       	sbiw	r28, 0x11	; 17
	float q3q3 = q3*q3;
     9d6:	29 a1       	ldd	r18, Y+33	; 0x21
     9d8:	3a a1       	ldd	r19, Y+34	; 0x22
     9da:	4b a1       	ldd	r20, Y+35	; 0x23
     9dc:	5c a1       	ldd	r21, Y+36	; 0x24
     9de:	ca 01       	movw	r24, r20
     9e0:	b9 01       	movw	r22, r18
     9e2:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     9e6:	6d ab       	std	Y+53, r22	; 0x35
     9e8:	7e ab       	std	Y+54, r23	; 0x36
     9ea:	8f ab       	std	Y+55, r24	; 0x37
     9ec:	98 af       	std	Y+56, r25	; 0x38
	// 归一化测量
	norm = sqrt(ax*ax + ay*ay + az*az);
     9ee:	2d 85       	ldd	r18, Y+13	; 0x0d
     9f0:	3e 85       	ldd	r19, Y+14	; 0x0e
     9f2:	4f 85       	ldd	r20, Y+15	; 0x0f
     9f4:	58 89       	ldd	r21, Y+16	; 0x10
     9f6:	ca 01       	movw	r24, r20
     9f8:	b9 01       	movw	r22, r18
     9fa:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     9fe:	69 83       	std	Y+1, r22	; 0x01
     a00:	7a 83       	std	Y+2, r23	; 0x02
     a02:	8b 83       	std	Y+3, r24	; 0x03
     a04:	9c 83       	std	Y+4, r25	; 0x04
     a06:	a3 01       	movw	r20, r6
     a08:	92 01       	movw	r18, r4
     a0a:	c3 01       	movw	r24, r6
     a0c:	b2 01       	movw	r22, r4
     a0e:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     a12:	9b 01       	movw	r18, r22
     a14:	ac 01       	movw	r20, r24
     a16:	69 81       	ldd	r22, Y+1	; 0x01
     a18:	7a 81       	ldd	r23, Y+2	; 0x02
     a1a:	8b 81       	ldd	r24, Y+3	; 0x03
     a1c:	9c 81       	ldd	r25, Y+4	; 0x04
     a1e:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     a22:	69 83       	std	Y+1, r22	; 0x01
     a24:	7a 83       	std	Y+2, r23	; 0x02
     a26:	8b 83       	std	Y+3, r24	; 0x03
     a28:	9c 83       	std	Y+4, r25	; 0x04
     a2a:	a8 01       	movw	r20, r16
     a2c:	97 01       	movw	r18, r14
     a2e:	c8 01       	movw	r24, r16
     a30:	b7 01       	movw	r22, r14
     a32:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     a36:	9b 01       	movw	r18, r22
     a38:	ac 01       	movw	r20, r24
     a3a:	69 81       	ldd	r22, Y+1	; 0x01
     a3c:	7a 81       	ldd	r23, Y+2	; 0x02
     a3e:	8b 81       	ldd	r24, Y+3	; 0x03
     a40:	9c 81       	ldd	r25, Y+4	; 0x04
     a42:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     a46:	0e 94 67 11 	call	0x22ce	; 0x22ce <sqrt>
     a4a:	69 83       	std	Y+1, r22	; 0x01
     a4c:	7a 83       	std	Y+2, r23	; 0x02
     a4e:	8b 83       	std	Y+3, r24	; 0x03
     a50:	9c 83       	std	Y+4, r25	; 0x04
	ax = ax / norm;
     a52:	9b 01       	movw	r18, r22
     a54:	ac 01       	movw	r20, r24
     a56:	6d 85       	ldd	r22, Y+13	; 0x0d
     a58:	7e 85       	ldd	r23, Y+14	; 0x0e
     a5a:	8f 85       	ldd	r24, Y+15	; 0x0f
     a5c:	98 89       	ldd	r25, Y+16	; 0x10
     a5e:	0e 94 81 0f 	call	0x1f02	; 0x1f02 <__divsf3>
     a62:	65 96       	adiw	r28, 0x15	; 21
     a64:	6c af       	std	Y+60, r22	; 0x3c
     a66:	7d af       	std	Y+61, r23	; 0x3d
     a68:	8e af       	std	Y+62, r24	; 0x3e
     a6a:	9f af       	std	Y+63, r25	; 0x3f
     a6c:	65 97       	sbiw	r28, 0x15	; 21
	ay = ay / norm;
     a6e:	29 81       	ldd	r18, Y+1	; 0x01
     a70:	3a 81       	ldd	r19, Y+2	; 0x02
     a72:	4b 81       	ldd	r20, Y+3	; 0x03
     a74:	5c 81       	ldd	r21, Y+4	; 0x04
     a76:	c3 01       	movw	r24, r6
     a78:	b2 01       	movw	r22, r4
     a7a:	0e 94 81 0f 	call	0x1f02	; 0x1f02 <__divsf3>
     a7e:	69 96       	adiw	r28, 0x19	; 25
     a80:	6c af       	std	Y+60, r22	; 0x3c
     a82:	7d af       	std	Y+61, r23	; 0x3d
     a84:	8e af       	std	Y+62, r24	; 0x3e
     a86:	9f af       	std	Y+63, r25	; 0x3f
     a88:	69 97       	sbiw	r28, 0x19	; 25
	az = az / norm;
     a8a:	29 81       	ldd	r18, Y+1	; 0x01
     a8c:	3a 81       	ldd	r19, Y+2	; 0x02
     a8e:	4b 81       	ldd	r20, Y+3	; 0x03
     a90:	5c 81       	ldd	r21, Y+4	; 0x04
     a92:	c8 01       	movw	r24, r16
     a94:	b7 01       	movw	r22, r14
     a96:	0e 94 81 0f 	call	0x1f02	; 0x1f02 <__divsf3>
     a9a:	6d 96       	adiw	r28, 0x1d	; 29
     a9c:	6c af       	std	Y+60, r22	; 0x3c
     a9e:	7d af       	std	Y+61, r23	; 0x3d
     aa0:	8e af       	std	Y+62, r24	; 0x3e
     aa2:	9f af       	std	Y+63, r25	; 0x3f
     aa4:	6d 97       	sbiw	r28, 0x1d	; 29
	norm = sqrt(mx*mx + my*my + mz*mz);
     aa6:	c5 57       	subi	r28, 0x75	; 117
     aa8:	df 4f       	sbci	r29, 0xFF	; 255
     aaa:	28 81       	ld	r18, Y
     aac:	39 81       	ldd	r19, Y+1	; 0x01
     aae:	4a 81       	ldd	r20, Y+2	; 0x02
     ab0:	5b 81       	ldd	r21, Y+3	; 0x03
     ab2:	cb 58       	subi	r28, 0x8B	; 139
     ab4:	d0 40       	sbci	r29, 0x00	; 0
     ab6:	ca 01       	movw	r24, r20
     ab8:	b9 01       	movw	r22, r18
     aba:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     abe:	2b 01       	movw	r4, r22
     ac0:	3c 01       	movw	r6, r24
     ac2:	c1 57       	subi	r28, 0x71	; 113
     ac4:	df 4f       	sbci	r29, 0xFF	; 255
     ac6:	28 81       	ld	r18, Y
     ac8:	39 81       	ldd	r19, Y+1	; 0x01
     aca:	4a 81       	ldd	r20, Y+2	; 0x02
     acc:	5b 81       	ldd	r21, Y+3	; 0x03
     ace:	cf 58       	subi	r28, 0x8F	; 143
     ad0:	d0 40       	sbci	r29, 0x00	; 0
     ad2:	ca 01       	movw	r24, r20
     ad4:	b9 01       	movw	r22, r18
     ad6:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     ada:	9b 01       	movw	r18, r22
     adc:	ac 01       	movw	r20, r24
     ade:	c3 01       	movw	r24, r6
     ae0:	b2 01       	movw	r22, r4
     ae2:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     ae6:	2b 01       	movw	r4, r22
     ae8:	3c 01       	movw	r6, r24
     aea:	cd 56       	subi	r28, 0x6D	; 109
     aec:	df 4f       	sbci	r29, 0xFF	; 255
     aee:	28 81       	ld	r18, Y
     af0:	39 81       	ldd	r19, Y+1	; 0x01
     af2:	4a 81       	ldd	r20, Y+2	; 0x02
     af4:	5b 81       	ldd	r21, Y+3	; 0x03
     af6:	c3 59       	subi	r28, 0x93	; 147
     af8:	d0 40       	sbci	r29, 0x00	; 0
     afa:	ca 01       	movw	r24, r20
     afc:	b9 01       	movw	r22, r18
     afe:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     b02:	9b 01       	movw	r18, r22
     b04:	ac 01       	movw	r20, r24
     b06:	c3 01       	movw	r24, r6
     b08:	b2 01       	movw	r22, r4
     b0a:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     b0e:	0e 94 67 11 	call	0x22ce	; 0x22ce <sqrt>
     b12:	2b 01       	movw	r4, r22
     b14:	3c 01       	movw	r6, r24
	mx = mx / norm;
     b16:	9b 01       	movw	r18, r22
     b18:	ac 01       	movw	r20, r24
     b1a:	c5 57       	subi	r28, 0x75	; 117
     b1c:	df 4f       	sbci	r29, 0xFF	; 255
     b1e:	68 81       	ld	r22, Y
     b20:	79 81       	ldd	r23, Y+1	; 0x01
     b22:	8a 81       	ldd	r24, Y+2	; 0x02
     b24:	9b 81       	ldd	r25, Y+3	; 0x03
     b26:	cb 58       	subi	r28, 0x8B	; 139
     b28:	d0 40       	sbci	r29, 0x00	; 0
     b2a:	0e 94 81 0f 	call	0x1f02	; 0x1f02 <__divsf3>
     b2e:	69 83       	std	Y+1, r22	; 0x01
     b30:	7a 83       	std	Y+2, r23	; 0x02
     b32:	8b 83       	std	Y+3, r24	; 0x03
     b34:	9c 83       	std	Y+4, r25	; 0x04
	my = my / norm;
     b36:	a3 01       	movw	r20, r6
     b38:	92 01       	movw	r18, r4
     b3a:	c1 57       	subi	r28, 0x71	; 113
     b3c:	df 4f       	sbci	r29, 0xFF	; 255
     b3e:	68 81       	ld	r22, Y
     b40:	79 81       	ldd	r23, Y+1	; 0x01
     b42:	8a 81       	ldd	r24, Y+2	; 0x02
     b44:	9b 81       	ldd	r25, Y+3	; 0x03
     b46:	cf 58       	subi	r28, 0x8F	; 143
     b48:	d0 40       	sbci	r29, 0x00	; 0
     b4a:	0e 94 81 0f 	call	0x1f02	; 0x1f02 <__divsf3>
     b4e:	6d 87       	std	Y+13, r22	; 0x0d
     b50:	7e 87       	std	Y+14, r23	; 0x0e
     b52:	8f 87       	std	Y+15, r24	; 0x0f
     b54:	98 8b       	std	Y+16, r25	; 0x10
	mz = mz / norm;
     b56:	a3 01       	movw	r20, r6
     b58:	92 01       	movw	r18, r4
     b5a:	cd 56       	subi	r28, 0x6D	; 109
     b5c:	df 4f       	sbci	r29, 0xFF	; 255
     b5e:	68 81       	ld	r22, Y
     b60:	79 81       	ldd	r23, Y+1	; 0x01
     b62:	8a 81       	ldd	r24, Y+2	; 0x02
     b64:	9b 81       	ldd	r25, Y+3	; 0x03
     b66:	c3 59       	subi	r28, 0x93	; 147
     b68:	d0 40       	sbci	r29, 0x00	; 0
     b6a:	0e 94 81 0f 	call	0x1f02	; 0x1f02 <__divsf3>
     b6e:	69 87       	std	Y+9, r22	; 0x09
     b70:	7a 87       	std	Y+10, r23	; 0x0a
     b72:	8b 87       	std	Y+11, r24	; 0x0b
     b74:	9c 87       	std	Y+12, r25	; 0x0c
	//磁力计计算参考方向
	hx = 2*mx*(0.5 - q2q2 - q3q3) + 2*my*(q1q2 - q0q3) + 2*mz*(q1q3 + q0q2);
     b76:	29 81       	ldd	r18, Y+1	; 0x01
     b78:	3a 81       	ldd	r19, Y+2	; 0x02
     b7a:	4b 81       	ldd	r20, Y+3	; 0x03
     b7c:	5c 81       	ldd	r21, Y+4	; 0x04
     b7e:	ca 01       	movw	r24, r20
     b80:	b9 01       	movw	r22, r18
     b82:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     b86:	2b 01       	movw	r4, r22
     b88:	3c 01       	movw	r6, r24
     b8a:	2d a1       	ldd	r18, Y+37	; 0x25
     b8c:	3e a1       	ldd	r19, Y+38	; 0x26
     b8e:	4f a1       	ldd	r20, Y+39	; 0x27
     b90:	58 a5       	ldd	r21, Y+40	; 0x28
     b92:	60 e0       	ldi	r22, 0x00	; 0
     b94:	70 e0       	ldi	r23, 0x00	; 0
     b96:	80 e0       	ldi	r24, 0x00	; 0
     b98:	9f e3       	ldi	r25, 0x3F	; 63
     b9a:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__subsf3>
     b9e:	2d a9       	ldd	r18, Y+53	; 0x35
     ba0:	3e a9       	ldd	r19, Y+54	; 0x36
     ba2:	4f a9       	ldd	r20, Y+55	; 0x37
     ba4:	58 ad       	ldd	r21, Y+56	; 0x38
     ba6:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__subsf3>
     baa:	a1 96       	adiw	r28, 0x21	; 33
     bac:	6c af       	std	Y+60, r22	; 0x3c
     bae:	7d af       	std	Y+61, r23	; 0x3d
     bb0:	8e af       	std	Y+62, r24	; 0x3e
     bb2:	9f af       	std	Y+63, r25	; 0x3f
     bb4:	a1 97       	sbiw	r28, 0x21	; 33
     bb6:	2d 85       	ldd	r18, Y+13	; 0x0d
     bb8:	3e 85       	ldd	r19, Y+14	; 0x0e
     bba:	4f 85       	ldd	r20, Y+15	; 0x0f
     bbc:	58 89       	ldd	r21, Y+16	; 0x10
     bbe:	ca 01       	movw	r24, r20
     bc0:	b9 01       	movw	r22, r18
     bc2:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     bc6:	6d 8b       	std	Y+21, r22	; 0x15
     bc8:	7e 8b       	std	Y+22, r23	; 0x16
     bca:	8f 8b       	std	Y+23, r24	; 0x17
     bcc:	98 8f       	std	Y+24, r25	; 0x18
     bce:	29 a5       	ldd	r18, Y+41	; 0x29
     bd0:	3a a5       	ldd	r19, Y+42	; 0x2a
     bd2:	4b a5       	ldd	r20, Y+43	; 0x2b
     bd4:	5c a5       	ldd	r21, Y+44	; 0x2c
     bd6:	25 96       	adiw	r28, 0x05	; 5
     bd8:	6c ad       	ldd	r22, Y+60	; 0x3c
     bda:	7d ad       	ldd	r23, Y+61	; 0x3d
     bdc:	8e ad       	ldd	r24, Y+62	; 0x3e
     bde:	9f ad       	ldd	r25, Y+63	; 0x3f
     be0:	25 97       	sbiw	r28, 0x05	; 5
     be2:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__subsf3>
     be6:	a5 96       	adiw	r28, 0x25	; 37
     be8:	6c af       	std	Y+60, r22	; 0x3c
     bea:	7d af       	std	Y+61, r23	; 0x3d
     bec:	8e af       	std	Y+62, r24	; 0x3e
     bee:	9f af       	std	Y+63, r25	; 0x3f
     bf0:	a5 97       	sbiw	r28, 0x25	; 37
     bf2:	29 85       	ldd	r18, Y+9	; 0x09
     bf4:	3a 85       	ldd	r19, Y+10	; 0x0a
     bf6:	4b 85       	ldd	r20, Y+11	; 0x0b
     bf8:	5c 85       	ldd	r21, Y+12	; 0x0c
     bfa:	ca 01       	movw	r24, r20
     bfc:	b9 01       	movw	r22, r18
     bfe:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     c02:	69 af       	std	Y+57, r22	; 0x39
     c04:	7a af       	std	Y+58, r23	; 0x3a
     c06:	8b af       	std	Y+59, r24	; 0x3b
     c08:	9c af       	std	Y+60, r25	; 0x3c
     c0a:	21 96       	adiw	r28, 0x01	; 1
     c0c:	2c ad       	ldd	r18, Y+60	; 0x3c
     c0e:	3d ad       	ldd	r19, Y+61	; 0x3d
     c10:	4e ad       	ldd	r20, Y+62	; 0x3e
     c12:	5f ad       	ldd	r21, Y+63	; 0x3f
     c14:	21 97       	sbiw	r28, 0x01	; 1
     c16:	2d 96       	adiw	r28, 0x0d	; 13
     c18:	6c ad       	ldd	r22, Y+60	; 0x3c
     c1a:	7d ad       	ldd	r23, Y+61	; 0x3d
     c1c:	8e ad       	ldd	r24, Y+62	; 0x3e
     c1e:	9f ad       	ldd	r25, Y+63	; 0x3f
     c20:	2d 97       	sbiw	r28, 0x0d	; 13
     c22:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     c26:	a9 96       	adiw	r28, 0x29	; 41
     c28:	6c af       	std	Y+60, r22	; 0x3c
     c2a:	7d af       	std	Y+61, r23	; 0x3d
     c2c:	8e af       	std	Y+62, r24	; 0x3e
     c2e:	9f af       	std	Y+63, r25	; 0x3f
     c30:	a9 97       	sbiw	r28, 0x29	; 41
     c32:	a1 96       	adiw	r28, 0x21	; 33
     c34:	2c ad       	ldd	r18, Y+60	; 0x3c
     c36:	3d ad       	ldd	r19, Y+61	; 0x3d
     c38:	4e ad       	ldd	r20, Y+62	; 0x3e
     c3a:	5f ad       	ldd	r21, Y+63	; 0x3f
     c3c:	a1 97       	sbiw	r28, 0x21	; 33
     c3e:	c3 01       	movw	r24, r6
     c40:	b2 01       	movw	r22, r4
     c42:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     c46:	6d 83       	std	Y+5, r22	; 0x05
     c48:	7e 83       	std	Y+6, r23	; 0x06
     c4a:	8f 83       	std	Y+7, r24	; 0x07
     c4c:	98 87       	std	Y+8, r25	; 0x08
     c4e:	a5 96       	adiw	r28, 0x25	; 37
     c50:	2c ad       	ldd	r18, Y+60	; 0x3c
     c52:	3d ad       	ldd	r19, Y+61	; 0x3d
     c54:	4e ad       	ldd	r20, Y+62	; 0x3e
     c56:	5f ad       	ldd	r21, Y+63	; 0x3f
     c58:	a5 97       	sbiw	r28, 0x25	; 37
     c5a:	6d 89       	ldd	r22, Y+21	; 0x15
     c5c:	7e 89       	ldd	r23, Y+22	; 0x16
     c5e:	8f 89       	ldd	r24, Y+23	; 0x17
     c60:	98 8d       	ldd	r25, Y+24	; 0x18
     c62:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     c66:	9b 01       	movw	r18, r22
     c68:	ac 01       	movw	r20, r24
     c6a:	6d 81       	ldd	r22, Y+5	; 0x05
     c6c:	7e 81       	ldd	r23, Y+6	; 0x06
     c6e:	8f 81       	ldd	r24, Y+7	; 0x07
     c70:	98 85       	ldd	r25, Y+8	; 0x08
     c72:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     c76:	6d 83       	std	Y+5, r22	; 0x05
     c78:	7e 83       	std	Y+6, r23	; 0x06
     c7a:	8f 83       	std	Y+7, r24	; 0x07
     c7c:	98 87       	std	Y+8, r25	; 0x08
     c7e:	a9 96       	adiw	r28, 0x29	; 41
     c80:	2c ad       	ldd	r18, Y+60	; 0x3c
     c82:	3d ad       	ldd	r19, Y+61	; 0x3d
     c84:	4e ad       	ldd	r20, Y+62	; 0x3e
     c86:	5f ad       	ldd	r21, Y+63	; 0x3f
     c88:	a9 97       	sbiw	r28, 0x29	; 41
     c8a:	69 ad       	ldd	r22, Y+57	; 0x39
     c8c:	7a ad       	ldd	r23, Y+58	; 0x3a
     c8e:	8b ad       	ldd	r24, Y+59	; 0x3b
     c90:	9c ad       	ldd	r25, Y+60	; 0x3c
     c92:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     c96:	9b 01       	movw	r18, r22
     c98:	ac 01       	movw	r20, r24
     c9a:	6d 81       	ldd	r22, Y+5	; 0x05
     c9c:	7e 81       	ldd	r23, Y+6	; 0x06
     c9e:	8f 81       	ldd	r24, Y+7	; 0x07
     ca0:	98 85       	ldd	r25, Y+8	; 0x08
     ca2:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     ca6:	ad 96       	adiw	r28, 0x2d	; 45
     ca8:	6c af       	std	Y+60, r22	; 0x3c
     caa:	7d af       	std	Y+61, r23	; 0x3d
     cac:	8e af       	std	Y+62, r24	; 0x3e
     cae:	9f af       	std	Y+63, r25	; 0x3f
     cb0:	ad 97       	sbiw	r28, 0x2d	; 45
	hy = 2*mx*(q1q2 + q0q3) + 2*my*(0.5 - q1q1 - q3q3) + 2*mz*(q2q3 - q0q1);
     cb2:	29 96       	adiw	r28, 0x09	; 9
     cb4:	2c ad       	ldd	r18, Y+60	; 0x3c
     cb6:	3d ad       	ldd	r19, Y+61	; 0x3d
     cb8:	4e ad       	ldd	r20, Y+62	; 0x3e
     cba:	5f ad       	ldd	r21, Y+63	; 0x3f
     cbc:	29 97       	sbiw	r28, 0x09	; 9
     cbe:	60 e0       	ldi	r22, 0x00	; 0
     cc0:	70 e0       	ldi	r23, 0x00	; 0
     cc2:	80 e0       	ldi	r24, 0x00	; 0
     cc4:	9f e3       	ldi	r25, 0x3F	; 63
     cc6:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__subsf3>
     cca:	e1 96       	adiw	r28, 0x31	; 49
     ccc:	6c af       	std	Y+60, r22	; 0x3c
     cce:	7d af       	std	Y+61, r23	; 0x3d
     cd0:	8e af       	std	Y+62, r24	; 0x3e
     cd2:	9f af       	std	Y+63, r25	; 0x3f
     cd4:	e1 97       	sbiw	r28, 0x31	; 49
     cd6:	29 a5       	ldd	r18, Y+41	; 0x29
     cd8:	3a a5       	ldd	r19, Y+42	; 0x2a
     cda:	4b a5       	ldd	r20, Y+43	; 0x2b
     cdc:	5c a5       	ldd	r21, Y+44	; 0x2c
     cde:	25 96       	adiw	r28, 0x05	; 5
     ce0:	6c ad       	ldd	r22, Y+60	; 0x3c
     ce2:	7d ad       	ldd	r23, Y+61	; 0x3d
     ce4:	8e ad       	ldd	r24, Y+62	; 0x3e
     ce6:	9f ad       	ldd	r25, Y+63	; 0x3f
     ce8:	25 97       	sbiw	r28, 0x05	; 5
     cea:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     cee:	9b 01       	movw	r18, r22
     cf0:	ac 01       	movw	r20, r24
     cf2:	c3 01       	movw	r24, r6
     cf4:	b2 01       	movw	r22, r4
     cf6:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     cfa:	6d 83       	std	Y+5, r22	; 0x05
     cfc:	7e 83       	std	Y+6, r23	; 0x06
     cfe:	8f 83       	std	Y+7, r24	; 0x07
     d00:	98 87       	std	Y+8, r25	; 0x08
     d02:	2d a9       	ldd	r18, Y+53	; 0x35
     d04:	3e a9       	ldd	r19, Y+54	; 0x36
     d06:	4f a9       	ldd	r20, Y+55	; 0x37
     d08:	58 ad       	ldd	r21, Y+56	; 0x38
     d0a:	e1 96       	adiw	r28, 0x31	; 49
     d0c:	6c ad       	ldd	r22, Y+60	; 0x3c
     d0e:	7d ad       	ldd	r23, Y+61	; 0x3d
     d10:	8e ad       	ldd	r24, Y+62	; 0x3e
     d12:	9f ad       	ldd	r25, Y+63	; 0x3f
     d14:	e1 97       	sbiw	r28, 0x31	; 49
     d16:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__subsf3>
     d1a:	9b 01       	movw	r18, r22
     d1c:	ac 01       	movw	r20, r24
     d1e:	6d 89       	ldd	r22, Y+21	; 0x15
     d20:	7e 89       	ldd	r23, Y+22	; 0x16
     d22:	8f 89       	ldd	r24, Y+23	; 0x17
     d24:	98 8d       	ldd	r25, Y+24	; 0x18
     d26:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     d2a:	9b 01       	movw	r18, r22
     d2c:	ac 01       	movw	r20, r24
     d2e:	6d 81       	ldd	r22, Y+5	; 0x05
     d30:	7e 81       	ldd	r23, Y+6	; 0x06
     d32:	8f 81       	ldd	r24, Y+7	; 0x07
     d34:	98 85       	ldd	r25, Y+8	; 0x08
     d36:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     d3a:	6d 83       	std	Y+5, r22	; 0x05
     d3c:	7e 83       	std	Y+6, r23	; 0x06
     d3e:	8f 83       	std	Y+7, r24	; 0x07
     d40:	98 87       	std	Y+8, r25	; 0x08
     d42:	2d a5       	ldd	r18, Y+45	; 0x2d
     d44:	3e a5       	ldd	r19, Y+46	; 0x2e
     d46:	4f a5       	ldd	r20, Y+47	; 0x2f
     d48:	58 a9       	ldd	r21, Y+48	; 0x30
     d4a:	61 96       	adiw	r28, 0x11	; 17
     d4c:	6c ad       	ldd	r22, Y+60	; 0x3c
     d4e:	7d ad       	ldd	r23, Y+61	; 0x3d
     d50:	8e ad       	ldd	r24, Y+62	; 0x3e
     d52:	9f ad       	ldd	r25, Y+63	; 0x3f
     d54:	61 97       	sbiw	r28, 0x11	; 17
     d56:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__subsf3>
     d5a:	9b 01       	movw	r18, r22
     d5c:	ac 01       	movw	r20, r24
     d5e:	69 ad       	ldd	r22, Y+57	; 0x39
     d60:	7a ad       	ldd	r23, Y+58	; 0x3a
     d62:	8b ad       	ldd	r24, Y+59	; 0x3b
     d64:	9c ad       	ldd	r25, Y+60	; 0x3c
     d66:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     d6a:	9b 01       	movw	r18, r22
     d6c:	ac 01       	movw	r20, r24
     d6e:	6d 81       	ldd	r22, Y+5	; 0x05
     d70:	7e 81       	ldd	r23, Y+6	; 0x06
     d72:	8f 81       	ldd	r24, Y+7	; 0x07
     d74:	98 85       	ldd	r25, Y+8	; 0x08
     d76:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     d7a:	69 a7       	std	Y+41, r22	; 0x29
     d7c:	7a a7       	std	Y+42, r23	; 0x2a
     d7e:	8b a7       	std	Y+43, r24	; 0x2b
     d80:	9c a7       	std	Y+44, r25	; 0x2c
	hz = 2*mx*(q1q3 - q0q2) + 2*my*(q2q3 + q0q1) + 2*mz*(0.5 - q1q1 - q2q2);
     d82:	21 96       	adiw	r28, 0x01	; 1
     d84:	2c ad       	ldd	r18, Y+60	; 0x3c
     d86:	3d ad       	ldd	r19, Y+61	; 0x3d
     d88:	4e ad       	ldd	r20, Y+62	; 0x3e
     d8a:	5f ad       	ldd	r21, Y+63	; 0x3f
     d8c:	21 97       	sbiw	r28, 0x01	; 1
     d8e:	2d 96       	adiw	r28, 0x0d	; 13
     d90:	6c ad       	ldd	r22, Y+60	; 0x3c
     d92:	7d ad       	ldd	r23, Y+61	; 0x3d
     d94:	8e ad       	ldd	r24, Y+62	; 0x3e
     d96:	9f ad       	ldd	r25, Y+63	; 0x3f
     d98:	2d 97       	sbiw	r28, 0x0d	; 13
     d9a:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__subsf3>
     d9e:	6d 83       	std	Y+5, r22	; 0x05
     da0:	7e 83       	std	Y+6, r23	; 0x06
     da2:	8f 83       	std	Y+7, r24	; 0x07
     da4:	98 87       	std	Y+8, r25	; 0x08
     da6:	2d a5       	ldd	r18, Y+45	; 0x2d
     da8:	3e a5       	ldd	r19, Y+46	; 0x2e
     daa:	4f a5       	ldd	r20, Y+47	; 0x2f
     dac:	58 a9       	ldd	r21, Y+48	; 0x30
     dae:	61 96       	adiw	r28, 0x11	; 17
     db0:	6c ad       	ldd	r22, Y+60	; 0x3c
     db2:	7d ad       	ldd	r23, Y+61	; 0x3d
     db4:	8e ad       	ldd	r24, Y+62	; 0x3e
     db6:	9f ad       	ldd	r25, Y+63	; 0x3f
     db8:	61 97       	sbiw	r28, 0x11	; 17
     dba:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     dbe:	69 8b       	std	Y+17, r22	; 0x11
     dc0:	7a 8b       	std	Y+18, r23	; 0x12
     dc2:	8b 8b       	std	Y+19, r24	; 0x13
     dc4:	9c 8b       	std	Y+20, r25	; 0x14
     dc6:	2d a1       	ldd	r18, Y+37	; 0x25
     dc8:	3e a1       	ldd	r19, Y+38	; 0x26
     dca:	4f a1       	ldd	r20, Y+39	; 0x27
     dcc:	58 a5       	ldd	r21, Y+40	; 0x28
     dce:	e1 96       	adiw	r28, 0x31	; 49
     dd0:	6c ad       	ldd	r22, Y+60	; 0x3c
     dd2:	7d ad       	ldd	r23, Y+61	; 0x3d
     dd4:	8e ad       	ldd	r24, Y+62	; 0x3e
     dd6:	9f ad       	ldd	r25, Y+63	; 0x3f
     dd8:	e1 97       	sbiw	r28, 0x31	; 49
     dda:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__subsf3>
     dde:	21 96       	adiw	r28, 0x01	; 1
     de0:	6c af       	std	Y+60, r22	; 0x3c
     de2:	7d af       	std	Y+61, r23	; 0x3d
     de4:	8e af       	std	Y+62, r24	; 0x3e
     de6:	9f af       	std	Y+63, r25	; 0x3f
     de8:	21 97       	sbiw	r28, 0x01	; 1
	bx = sqrt((hx*hx) + (hy*hy));
     dea:	ad 96       	adiw	r28, 0x2d	; 45
     dec:	2c ad       	ldd	r18, Y+60	; 0x3c
     dee:	3d ad       	ldd	r19, Y+61	; 0x3d
     df0:	4e ad       	ldd	r20, Y+62	; 0x3e
     df2:	5f ad       	ldd	r21, Y+63	; 0x3f
     df4:	ad 97       	sbiw	r28, 0x2d	; 45
     df6:	ca 01       	movw	r24, r20
     df8:	b9 01       	movw	r22, r18
     dfa:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     dfe:	6d a7       	std	Y+45, r22	; 0x2d
     e00:	7e a7       	std	Y+46, r23	; 0x2e
     e02:	8f a7       	std	Y+47, r24	; 0x2f
     e04:	98 ab       	std	Y+48, r25	; 0x30
     e06:	29 a5       	ldd	r18, Y+41	; 0x29
     e08:	3a a5       	ldd	r19, Y+42	; 0x2a
     e0a:	4b a5       	ldd	r20, Y+43	; 0x2b
     e0c:	5c a5       	ldd	r21, Y+44	; 0x2c
     e0e:	ca 01       	movw	r24, r20
     e10:	b9 01       	movw	r22, r18
     e12:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     e16:	9b 01       	movw	r18, r22
     e18:	ac 01       	movw	r20, r24
     e1a:	6d a5       	ldd	r22, Y+45	; 0x2d
     e1c:	7e a5       	ldd	r23, Y+46	; 0x2e
     e1e:	8f a5       	ldd	r24, Y+47	; 0x2f
     e20:	98 a9       	ldd	r25, Y+48	; 0x30
     e22:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     e26:	0e 94 67 11 	call	0x22ce	; 0x22ce <sqrt>
     e2a:	6d a7       	std	Y+45, r22	; 0x2d
     e2c:	7e a7       	std	Y+46, r23	; 0x2e
     e2e:	8f a7       	std	Y+47, r24	; 0x2f
     e30:	98 ab       	std	Y+48, r25	; 0x30
	bz = hz;
	// 重力和磁链的估计方向(v and w)
	vx = 2*(q1q3 - q0q2);
     e32:	2d 81       	ldd	r18, Y+5	; 0x05
     e34:	3e 81       	ldd	r19, Y+6	; 0x06
     e36:	4f 81       	ldd	r20, Y+7	; 0x07
     e38:	58 85       	ldd	r21, Y+8	; 0x08
     e3a:	ca 01       	movw	r24, r20
     e3c:	b9 01       	movw	r22, r18
     e3e:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     e42:	69 a7       	std	Y+41, r22	; 0x29
     e44:	7a a7       	std	Y+42, r23	; 0x2a
     e46:	8b a7       	std	Y+43, r24	; 0x2b
     e48:	9c a7       	std	Y+44, r25	; 0x2c
	vy = 2*(q0q1 + q2q3);
     e4a:	29 89       	ldd	r18, Y+17	; 0x11
     e4c:	3a 89       	ldd	r19, Y+18	; 0x12
     e4e:	4b 89       	ldd	r20, Y+19	; 0x13
     e50:	5c 89       	ldd	r21, Y+20	; 0x14
     e52:	ca 01       	movw	r24, r20
     e54:	b9 01       	movw	r22, r18
     e56:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     e5a:	25 96       	adiw	r28, 0x05	; 5
     e5c:	6c af       	std	Y+60, r22	; 0x3c
     e5e:	7d af       	std	Y+61, r23	; 0x3d
     e60:	8e af       	std	Y+62, r24	; 0x3e
     e62:	9f af       	std	Y+63, r25	; 0x3f
     e64:	25 97       	sbiw	r28, 0x05	; 5
	double norm;
	float hx, hy, hz, bx, bz;
	float vx, vy, vz, wx, wy, wz;
	float ex, ey, ez;
	///辅助变量，以减少重复操作次数
	float q0q0 = q0*q0;
     e66:	29 a9       	ldd	r18, Y+49	; 0x31
     e68:	3a a9       	ldd	r19, Y+50	; 0x32
     e6a:	4b a9       	ldd	r20, Y+51	; 0x33
     e6c:	5c a9       	ldd	r21, Y+52	; 0x34
     e6e:	ca 01       	movw	r24, r20
     e70:	b9 01       	movw	r22, r18
     e72:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
	bx = sqrt((hx*hx) + (hy*hy));
	bz = hz;
	// 重力和磁链的估计方向(v and w)
	vx = 2*(q1q3 - q0q2);
	vy = 2*(q0q1 + q2q3);
	vz = q0q0 - q1q1 - q2q2 + q3q3;
     e76:	29 96       	adiw	r28, 0x09	; 9
     e78:	2c ad       	ldd	r18, Y+60	; 0x3c
     e7a:	3d ad       	ldd	r19, Y+61	; 0x3d
     e7c:	4e ad       	ldd	r20, Y+62	; 0x3e
     e7e:	5f ad       	ldd	r21, Y+63	; 0x3f
     e80:	29 97       	sbiw	r28, 0x09	; 9
     e82:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__subsf3>
     e86:	2d a1       	ldd	r18, Y+37	; 0x25
     e88:	3e a1       	ldd	r19, Y+38	; 0x26
     e8a:	4f a1       	ldd	r20, Y+39	; 0x27
     e8c:	58 a5       	ldd	r21, Y+40	; 0x28
     e8e:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__subsf3>
     e92:	2d a9       	ldd	r18, Y+53	; 0x35
     e94:	3e a9       	ldd	r19, Y+54	; 0x36
     e96:	4f a9       	ldd	r20, Y+55	; 0x37
     e98:	58 ad       	ldd	r21, Y+56	; 0x38
     e9a:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     e9e:	6d ab       	std	Y+53, r22	; 0x35
     ea0:	7e ab       	std	Y+54, r23	; 0x36
     ea2:	8f ab       	std	Y+55, r24	; 0x37
     ea4:	98 af       	std	Y+56, r25	; 0x38
	wx = 2*bx*(0.5 - q2q2 - q3q3) + 2*bz*(q1q3 - q0q2);
     ea6:	2d a5       	ldd	r18, Y+45	; 0x2d
     ea8:	3e a5       	ldd	r19, Y+46	; 0x2e
     eaa:	4f a5       	ldd	r20, Y+47	; 0x2f
     eac:	58 a9       	ldd	r21, Y+48	; 0x30
     eae:	ca 01       	movw	r24, r20
     eb0:	b9 01       	movw	r22, r18
     eb2:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     eb6:	6d a3       	std	Y+37, r22	; 0x25
     eb8:	7e a3       	std	Y+38, r23	; 0x26
     eba:	8f a3       	std	Y+39, r24	; 0x27
     ebc:	98 a7       	std	Y+40, r25	; 0x28
	my = my / norm;
	mz = mz / norm;
	//磁力计计算参考方向
	hx = 2*mx*(0.5 - q2q2 - q3q3) + 2*my*(q1q2 - q0q3) + 2*mz*(q1q3 + q0q2);
	hy = 2*mx*(q1q2 + q0q3) + 2*my*(0.5 - q1q1 - q3q3) + 2*mz*(q2q3 - q0q1);
	hz = 2*mx*(q1q3 - q0q2) + 2*my*(q2q3 + q0q1) + 2*mz*(0.5 - q1q1 - q2q2);
     ebe:	2d 81       	ldd	r18, Y+5	; 0x05
     ec0:	3e 81       	ldd	r19, Y+6	; 0x06
     ec2:	4f 81       	ldd	r20, Y+7	; 0x07
     ec4:	58 85       	ldd	r21, Y+8	; 0x08
     ec6:	c3 01       	movw	r24, r6
     ec8:	b2 01       	movw	r22, r4
     eca:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     ece:	2b 01       	movw	r4, r22
     ed0:	3c 01       	movw	r6, r24
     ed2:	29 89       	ldd	r18, Y+17	; 0x11
     ed4:	3a 89       	ldd	r19, Y+18	; 0x12
     ed6:	4b 89       	ldd	r20, Y+19	; 0x13
     ed8:	5c 89       	ldd	r21, Y+20	; 0x14
     eda:	6d 89       	ldd	r22, Y+21	; 0x15
     edc:	7e 89       	ldd	r23, Y+22	; 0x16
     ede:	8f 89       	ldd	r24, Y+23	; 0x17
     ee0:	98 8d       	ldd	r25, Y+24	; 0x18
     ee2:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     ee6:	9b 01       	movw	r18, r22
     ee8:	ac 01       	movw	r20, r24
     eea:	c3 01       	movw	r24, r6
     eec:	b2 01       	movw	r22, r4
     eee:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     ef2:	2b 01       	movw	r4, r22
     ef4:	3c 01       	movw	r6, r24
     ef6:	21 96       	adiw	r28, 0x01	; 1
     ef8:	2c ad       	ldd	r18, Y+60	; 0x3c
     efa:	3d ad       	ldd	r19, Y+61	; 0x3d
     efc:	4e ad       	ldd	r20, Y+62	; 0x3e
     efe:	5f ad       	ldd	r21, Y+63	; 0x3f
     f00:	21 97       	sbiw	r28, 0x01	; 1
     f02:	69 ad       	ldd	r22, Y+57	; 0x39
     f04:	7a ad       	ldd	r23, Y+58	; 0x3a
     f06:	8b ad       	ldd	r24, Y+59	; 0x3b
     f08:	9c ad       	ldd	r25, Y+60	; 0x3c
     f0a:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     f0e:	9b 01       	movw	r18, r22
     f10:	ac 01       	movw	r20, r24
     f12:	c3 01       	movw	r24, r6
     f14:	b2 01       	movw	r22, r4
     f16:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
	bz = hz;
	// 重力和磁链的估计方向(v and w)
	vx = 2*(q1q3 - q0q2);
	vy = 2*(q0q1 + q2q3);
	vz = q0q0 - q1q1 - q2q2 + q3q3;
	wx = 2*bx*(0.5 - q2q2 - q3q3) + 2*bz*(q1q3 - q0q2);
     f1a:	9b 01       	movw	r18, r22
     f1c:	ac 01       	movw	r20, r24
     f1e:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     f22:	6d 8b       	std	Y+21, r22	; 0x15
     f24:	7e 8b       	std	Y+22, r23	; 0x16
     f26:	8f 8b       	std	Y+23, r24	; 0x17
     f28:	98 8f       	std	Y+24, r25	; 0x18
     f2a:	2d a1       	ldd	r18, Y+37	; 0x25
     f2c:	3e a1       	ldd	r19, Y+38	; 0x26
     f2e:	4f a1       	ldd	r20, Y+39	; 0x27
     f30:	58 a5       	ldd	r21, Y+40	; 0x28
     f32:	a1 96       	adiw	r28, 0x21	; 33
     f34:	6c ad       	ldd	r22, Y+60	; 0x3c
     f36:	7d ad       	ldd	r23, Y+61	; 0x3d
     f38:	8e ad       	ldd	r24, Y+62	; 0x3e
     f3a:	9f ad       	ldd	r25, Y+63	; 0x3f
     f3c:	a1 97       	sbiw	r28, 0x21	; 33
     f3e:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     f42:	2b 01       	movw	r4, r22
     f44:	3c 01       	movw	r6, r24
     f46:	2d 89       	ldd	r18, Y+21	; 0x15
     f48:	3e 89       	ldd	r19, Y+22	; 0x16
     f4a:	4f 89       	ldd	r20, Y+23	; 0x17
     f4c:	58 8d       	ldd	r21, Y+24	; 0x18
     f4e:	6d 81       	ldd	r22, Y+5	; 0x05
     f50:	7e 81       	ldd	r23, Y+6	; 0x06
     f52:	8f 81       	ldd	r24, Y+7	; 0x07
     f54:	98 85       	ldd	r25, Y+8	; 0x08
     f56:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     f5a:	9b 01       	movw	r18, r22
     f5c:	ac 01       	movw	r20, r24
     f5e:	c3 01       	movw	r24, r6
     f60:	b2 01       	movw	r22, r4
     f62:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     f66:	69 af       	std	Y+57, r22	; 0x39
     f68:	7a af       	std	Y+58, r23	; 0x3a
     f6a:	8b af       	std	Y+59, r24	; 0x3b
     f6c:	9c af       	std	Y+60, r25	; 0x3c
	wy = 2*bx*(q1q2 - q0q3) + 2*bz*(q0q1 + q2q3); 
     f6e:	2d a1       	ldd	r18, Y+37	; 0x25
     f70:	3e a1       	ldd	r19, Y+38	; 0x26
     f72:	4f a1       	ldd	r20, Y+39	; 0x27
     f74:	58 a5       	ldd	r21, Y+40	; 0x28
     f76:	a5 96       	adiw	r28, 0x25	; 37
     f78:	6c ad       	ldd	r22, Y+60	; 0x3c
     f7a:	7d ad       	ldd	r23, Y+61	; 0x3d
     f7c:	8e ad       	ldd	r24, Y+62	; 0x3e
     f7e:	9f ad       	ldd	r25, Y+63	; 0x3f
     f80:	a5 97       	sbiw	r28, 0x25	; 37
     f82:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     f86:	2b 01       	movw	r4, r22
     f88:	3c 01       	movw	r6, r24
     f8a:	2d 89       	ldd	r18, Y+21	; 0x15
     f8c:	3e 89       	ldd	r19, Y+22	; 0x16
     f8e:	4f 89       	ldd	r20, Y+23	; 0x17
     f90:	58 8d       	ldd	r21, Y+24	; 0x18
     f92:	69 89       	ldd	r22, Y+17	; 0x11
     f94:	7a 89       	ldd	r23, Y+18	; 0x12
     f96:	8b 89       	ldd	r24, Y+19	; 0x13
     f98:	9c 89       	ldd	r25, Y+20	; 0x14
     f9a:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     f9e:	9b 01       	movw	r18, r22
     fa0:	ac 01       	movw	r20, r24
     fa2:	c3 01       	movw	r24, r6
     fa4:	b2 01       	movw	r22, r4
     fa6:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     faa:	69 8b       	std	Y+17, r22	; 0x11
     fac:	7a 8b       	std	Y+18, r23	; 0x12
     fae:	8b 8b       	std	Y+19, r24	; 0x13
     fb0:	9c 8b       	std	Y+20, r25	; 0x14
	wz =2*bx*(q0q2 + q1q3) + 2*bz*(0.5 - q1q1 - q2q2);
     fb2:	2d a1       	ldd	r18, Y+37	; 0x25
     fb4:	3e a1       	ldd	r19, Y+38	; 0x26
     fb6:	4f a1       	ldd	r20, Y+39	; 0x27
     fb8:	58 a5       	ldd	r21, Y+40	; 0x28
     fba:	a9 96       	adiw	r28, 0x29	; 41
     fbc:	6c ad       	ldd	r22, Y+60	; 0x3c
     fbe:	7d ad       	ldd	r23, Y+61	; 0x3d
     fc0:	8e ad       	ldd	r24, Y+62	; 0x3e
     fc2:	9f ad       	ldd	r25, Y+63	; 0x3f
     fc4:	a9 97       	sbiw	r28, 0x29	; 41
     fc6:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     fca:	2b 01       	movw	r4, r22
     fcc:	3c 01       	movw	r6, r24
     fce:	2d 89       	ldd	r18, Y+21	; 0x15
     fd0:	3e 89       	ldd	r19, Y+22	; 0x16
     fd2:	4f 89       	ldd	r20, Y+23	; 0x17
     fd4:	58 8d       	ldd	r21, Y+24	; 0x18
     fd6:	21 96       	adiw	r28, 0x01	; 1
     fd8:	6c ad       	ldd	r22, Y+60	; 0x3c
     fda:	7d ad       	ldd	r23, Y+61	; 0x3d
     fdc:	8e ad       	ldd	r24, Y+62	; 0x3e
     fde:	9f ad       	ldd	r25, Y+63	; 0x3f
     fe0:	21 97       	sbiw	r28, 0x01	; 1
     fe2:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
     fe6:	9b 01       	movw	r18, r22
     fe8:	ac 01       	movw	r20, r24
     fea:	c3 01       	movw	r24, r6
     fec:	b2 01       	movw	r22, r4
     fee:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
     ff2:	6d 8b       	std	Y+21, r22	; 0x15
     ff4:	7e 8b       	std	Y+22, r23	; 0x16
     ff6:	8f 8b       	std	Y+23, r24	; 0x17
     ff8:	98 8f       	std	Y+24, r25	; 0x18
	// 误差计算
	ex = (ay*vz - az*vy) + (my*wz - mz*wy);
     ffa:	2d a9       	ldd	r18, Y+53	; 0x35
     ffc:	3e a9       	ldd	r19, Y+54	; 0x36
     ffe:	4f a9       	ldd	r20, Y+55	; 0x37
    1000:	58 ad       	ldd	r21, Y+56	; 0x38
    1002:	69 96       	adiw	r28, 0x19	; 25
    1004:	6c ad       	ldd	r22, Y+60	; 0x3c
    1006:	7d ad       	ldd	r23, Y+61	; 0x3d
    1008:	8e ad       	ldd	r24, Y+62	; 0x3e
    100a:	9f ad       	ldd	r25, Y+63	; 0x3f
    100c:	69 97       	sbiw	r28, 0x19	; 25
    100e:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1012:	2b 01       	movw	r4, r22
    1014:	3c 01       	movw	r6, r24
    1016:	25 96       	adiw	r28, 0x05	; 5
    1018:	2c ad       	ldd	r18, Y+60	; 0x3c
    101a:	3d ad       	ldd	r19, Y+61	; 0x3d
    101c:	4e ad       	ldd	r20, Y+62	; 0x3e
    101e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1020:	25 97       	sbiw	r28, 0x05	; 5
    1022:	6d 96       	adiw	r28, 0x1d	; 29
    1024:	6c ad       	ldd	r22, Y+60	; 0x3c
    1026:	7d ad       	ldd	r23, Y+61	; 0x3d
    1028:	8e ad       	ldd	r24, Y+62	; 0x3e
    102a:	9f ad       	ldd	r25, Y+63	; 0x3f
    102c:	6d 97       	sbiw	r28, 0x1d	; 29
    102e:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1032:	9b 01       	movw	r18, r22
    1034:	ac 01       	movw	r20, r24
    1036:	c3 01       	movw	r24, r6
    1038:	b2 01       	movw	r22, r4
    103a:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__subsf3>
    103e:	6d 83       	std	Y+5, r22	; 0x05
    1040:	7e 83       	std	Y+6, r23	; 0x06
    1042:	8f 83       	std	Y+7, r24	; 0x07
    1044:	98 87       	std	Y+8, r25	; 0x08
    1046:	2d 89       	ldd	r18, Y+21	; 0x15
    1048:	3e 89       	ldd	r19, Y+22	; 0x16
    104a:	4f 89       	ldd	r20, Y+23	; 0x17
    104c:	58 8d       	ldd	r21, Y+24	; 0x18
    104e:	6d 85       	ldd	r22, Y+13	; 0x0d
    1050:	7e 85       	ldd	r23, Y+14	; 0x0e
    1052:	8f 85       	ldd	r24, Y+15	; 0x0f
    1054:	98 89       	ldd	r25, Y+16	; 0x10
    1056:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    105a:	2b 01       	movw	r4, r22
    105c:	3c 01       	movw	r6, r24
    105e:	29 89       	ldd	r18, Y+17	; 0x11
    1060:	3a 89       	ldd	r19, Y+18	; 0x12
    1062:	4b 89       	ldd	r20, Y+19	; 0x13
    1064:	5c 89       	ldd	r21, Y+20	; 0x14
    1066:	69 85       	ldd	r22, Y+9	; 0x09
    1068:	7a 85       	ldd	r23, Y+10	; 0x0a
    106a:	8b 85       	ldd	r24, Y+11	; 0x0b
    106c:	9c 85       	ldd	r25, Y+12	; 0x0c
    106e:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1072:	9b 01       	movw	r18, r22
    1074:	ac 01       	movw	r20, r24
    1076:	c3 01       	movw	r24, r6
    1078:	b2 01       	movw	r22, r4
    107a:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__subsf3>
    107e:	9b 01       	movw	r18, r22
    1080:	ac 01       	movw	r20, r24
    1082:	6d 81       	ldd	r22, Y+5	; 0x05
    1084:	7e 81       	ldd	r23, Y+6	; 0x06
    1086:	8f 81       	ldd	r24, Y+7	; 0x07
    1088:	98 85       	ldd	r25, Y+8	; 0x08
    108a:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    108e:	6d 83       	std	Y+5, r22	; 0x05
    1090:	7e 83       	std	Y+6, r23	; 0x06
    1092:	8f 83       	std	Y+7, r24	; 0x07
    1094:	98 87       	std	Y+8, r25	; 0x08
	ey = (az*vx - ax*vz) + (mz*wx - mx*wz);
    1096:	29 a5       	ldd	r18, Y+41	; 0x29
    1098:	3a a5       	ldd	r19, Y+42	; 0x2a
    109a:	4b a5       	ldd	r20, Y+43	; 0x2b
    109c:	5c a5       	ldd	r21, Y+44	; 0x2c
    109e:	6d 96       	adiw	r28, 0x1d	; 29
    10a0:	6c ad       	ldd	r22, Y+60	; 0x3c
    10a2:	7d ad       	ldd	r23, Y+61	; 0x3d
    10a4:	8e ad       	ldd	r24, Y+62	; 0x3e
    10a6:	9f ad       	ldd	r25, Y+63	; 0x3f
    10a8:	6d 97       	sbiw	r28, 0x1d	; 29
    10aa:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    10ae:	2b 01       	movw	r4, r22
    10b0:	3c 01       	movw	r6, r24
    10b2:	2d a9       	ldd	r18, Y+53	; 0x35
    10b4:	3e a9       	ldd	r19, Y+54	; 0x36
    10b6:	4f a9       	ldd	r20, Y+55	; 0x37
    10b8:	58 ad       	ldd	r21, Y+56	; 0x38
    10ba:	65 96       	adiw	r28, 0x15	; 21
    10bc:	6c ad       	ldd	r22, Y+60	; 0x3c
    10be:	7d ad       	ldd	r23, Y+61	; 0x3d
    10c0:	8e ad       	ldd	r24, Y+62	; 0x3e
    10c2:	9f ad       	ldd	r25, Y+63	; 0x3f
    10c4:	65 97       	sbiw	r28, 0x15	; 21
    10c6:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    10ca:	9b 01       	movw	r18, r22
    10cc:	ac 01       	movw	r20, r24
    10ce:	c3 01       	movw	r24, r6
    10d0:	b2 01       	movw	r22, r4
    10d2:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__subsf3>
    10d6:	6d a3       	std	Y+37, r22	; 0x25
    10d8:	7e a3       	std	Y+38, r23	; 0x26
    10da:	8f a3       	std	Y+39, r24	; 0x27
    10dc:	98 a7       	std	Y+40, r25	; 0x28
    10de:	29 ad       	ldd	r18, Y+57	; 0x39
    10e0:	3a ad       	ldd	r19, Y+58	; 0x3a
    10e2:	4b ad       	ldd	r20, Y+59	; 0x3b
    10e4:	5c ad       	ldd	r21, Y+60	; 0x3c
    10e6:	69 85       	ldd	r22, Y+9	; 0x09
    10e8:	7a 85       	ldd	r23, Y+10	; 0x0a
    10ea:	8b 85       	ldd	r24, Y+11	; 0x0b
    10ec:	9c 85       	ldd	r25, Y+12	; 0x0c
    10ee:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    10f2:	2b 01       	movw	r4, r22
    10f4:	3c 01       	movw	r6, r24
    10f6:	2d 89       	ldd	r18, Y+21	; 0x15
    10f8:	3e 89       	ldd	r19, Y+22	; 0x16
    10fa:	4f 89       	ldd	r20, Y+23	; 0x17
    10fc:	58 8d       	ldd	r21, Y+24	; 0x18
    10fe:	69 81       	ldd	r22, Y+1	; 0x01
    1100:	7a 81       	ldd	r23, Y+2	; 0x02
    1102:	8b 81       	ldd	r24, Y+3	; 0x03
    1104:	9c 81       	ldd	r25, Y+4	; 0x04
    1106:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    110a:	9b 01       	movw	r18, r22
    110c:	ac 01       	movw	r20, r24
    110e:	c3 01       	movw	r24, r6
    1110:	b2 01       	movw	r22, r4
    1112:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__subsf3>
    1116:	9b 01       	movw	r18, r22
    1118:	ac 01       	movw	r20, r24
    111a:	6d a1       	ldd	r22, Y+37	; 0x25
    111c:	7e a1       	ldd	r23, Y+38	; 0x26
    111e:	8f a1       	ldd	r24, Y+39	; 0x27
    1120:	98 a5       	ldd	r25, Y+40	; 0x28
    1122:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    1126:	2b 01       	movw	r4, r22
    1128:	3c 01       	movw	r6, r24
	ez = (ax*vy - ay*vx) + (mx*wy - my*wx);
    112a:	25 96       	adiw	r28, 0x05	; 5
    112c:	2c ad       	ldd	r18, Y+60	; 0x3c
    112e:	3d ad       	ldd	r19, Y+61	; 0x3d
    1130:	4e ad       	ldd	r20, Y+62	; 0x3e
    1132:	5f ad       	ldd	r21, Y+63	; 0x3f
    1134:	25 97       	sbiw	r28, 0x05	; 5
    1136:	65 96       	adiw	r28, 0x15	; 21
    1138:	6c ad       	ldd	r22, Y+60	; 0x3c
    113a:	7d ad       	ldd	r23, Y+61	; 0x3d
    113c:	8e ad       	ldd	r24, Y+62	; 0x3e
    113e:	9f ad       	ldd	r25, Y+63	; 0x3f
    1140:	65 97       	sbiw	r28, 0x15	; 21
    1142:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1146:	69 87       	std	Y+9, r22	; 0x09
    1148:	7a 87       	std	Y+10, r23	; 0x0a
    114a:	8b 87       	std	Y+11, r24	; 0x0b
    114c:	9c 87       	std	Y+12, r25	; 0x0c
    114e:	29 a5       	ldd	r18, Y+41	; 0x29
    1150:	3a a5       	ldd	r19, Y+42	; 0x2a
    1152:	4b a5       	ldd	r20, Y+43	; 0x2b
    1154:	5c a5       	ldd	r21, Y+44	; 0x2c
    1156:	69 96       	adiw	r28, 0x19	; 25
    1158:	6c ad       	ldd	r22, Y+60	; 0x3c
    115a:	7d ad       	ldd	r23, Y+61	; 0x3d
    115c:	8e ad       	ldd	r24, Y+62	; 0x3e
    115e:	9f ad       	ldd	r25, Y+63	; 0x3f
    1160:	69 97       	sbiw	r28, 0x19	; 25
    1162:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1166:	9b 01       	movw	r18, r22
    1168:	ac 01       	movw	r20, r24
    116a:	69 85       	ldd	r22, Y+9	; 0x09
    116c:	7a 85       	ldd	r23, Y+10	; 0x0a
    116e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1170:	9c 85       	ldd	r25, Y+12	; 0x0c
    1172:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__subsf3>
    1176:	69 87       	std	Y+9, r22	; 0x09
    1178:	7a 87       	std	Y+10, r23	; 0x0a
    117a:	8b 87       	std	Y+11, r24	; 0x0b
    117c:	9c 87       	std	Y+12, r25	; 0x0c
    117e:	29 89       	ldd	r18, Y+17	; 0x11
    1180:	3a 89       	ldd	r19, Y+18	; 0x12
    1182:	4b 89       	ldd	r20, Y+19	; 0x13
    1184:	5c 89       	ldd	r21, Y+20	; 0x14
    1186:	69 81       	ldd	r22, Y+1	; 0x01
    1188:	7a 81       	ldd	r23, Y+2	; 0x02
    118a:	8b 81       	ldd	r24, Y+3	; 0x03
    118c:	9c 81       	ldd	r25, Y+4	; 0x04
    118e:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1192:	69 83       	std	Y+1, r22	; 0x01
    1194:	7a 83       	std	Y+2, r23	; 0x02
    1196:	8b 83       	std	Y+3, r24	; 0x03
    1198:	9c 83       	std	Y+4, r25	; 0x04
    119a:	29 ad       	ldd	r18, Y+57	; 0x39
    119c:	3a ad       	ldd	r19, Y+58	; 0x3a
    119e:	4b ad       	ldd	r20, Y+59	; 0x3b
    11a0:	5c ad       	ldd	r21, Y+60	; 0x3c
    11a2:	6d 85       	ldd	r22, Y+13	; 0x0d
    11a4:	7e 85       	ldd	r23, Y+14	; 0x0e
    11a6:	8f 85       	ldd	r24, Y+15	; 0x0f
    11a8:	98 89       	ldd	r25, Y+16	; 0x10
    11aa:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    11ae:	9b 01       	movw	r18, r22
    11b0:	ac 01       	movw	r20, r24
    11b2:	69 81       	ldd	r22, Y+1	; 0x01
    11b4:	7a 81       	ldd	r23, Y+2	; 0x02
    11b6:	8b 81       	ldd	r24, Y+3	; 0x03
    11b8:	9c 81       	ldd	r25, Y+4	; 0x04
    11ba:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__subsf3>
    11be:	9b 01       	movw	r18, r22
    11c0:	ac 01       	movw	r20, r24
    11c2:	69 85       	ldd	r22, Y+9	; 0x09
    11c4:	7a 85       	ldd	r23, Y+10	; 0x0a
    11c6:	8b 85       	ldd	r24, Y+11	; 0x0b
    11c8:	9c 85       	ldd	r25, Y+12	; 0x0c
    11ca:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    11ce:	69 83       	std	Y+1, r22	; 0x01
    11d0:	7a 83       	std	Y+2, r23	; 0x02
    11d2:	8b 83       	std	Y+3, r24	; 0x03
    11d4:	9c 83       	std	Y+4, r25	; 0x04
	//积分误差比例积分增益
	exInt = exInt + ex*Ki;
    11d6:	2a e0       	ldi	r18, 0x0A	; 10
    11d8:	37 ed       	ldi	r19, 0xD7	; 215
    11da:	43 ea       	ldi	r20, 0xA3	; 163
    11dc:	5b e3       	ldi	r21, 0x3B	; 59
    11de:	6d 81       	ldd	r22, Y+5	; 0x05
    11e0:	7e 81       	ldd	r23, Y+6	; 0x06
    11e2:	8f 81       	ldd	r24, Y+7	; 0x07
    11e4:	98 85       	ldd	r25, Y+8	; 0x08
    11e6:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    11ea:	20 91 68 06 	lds	r18, 0x0668
    11ee:	30 91 69 06 	lds	r19, 0x0669
    11f2:	40 91 6a 06 	lds	r20, 0x066A
    11f6:	50 91 6b 06 	lds	r21, 0x066B
    11fa:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    11fe:	6d 87       	std	Y+13, r22	; 0x0d
    1200:	7e 87       	std	Y+14, r23	; 0x0e
    1202:	8f 87       	std	Y+15, r24	; 0x0f
    1204:	98 8b       	std	Y+16, r25	; 0x10
    1206:	60 93 68 06 	sts	0x0668, r22
    120a:	70 93 69 06 	sts	0x0669, r23
    120e:	80 93 6a 06 	sts	0x066A, r24
    1212:	90 93 6b 06 	sts	0x066B, r25
	eyInt = eyInt + ey*Ki;
    1216:	2a e0       	ldi	r18, 0x0A	; 10
    1218:	37 ed       	ldi	r19, 0xD7	; 215
    121a:	43 ea       	ldi	r20, 0xA3	; 163
    121c:	5b e3       	ldi	r21, 0x3B	; 59
    121e:	c3 01       	movw	r24, r6
    1220:	b2 01       	movw	r22, r4
    1222:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1226:	20 91 64 06 	lds	r18, 0x0664
    122a:	30 91 65 06 	lds	r19, 0x0665
    122e:	40 91 66 06 	lds	r20, 0x0666
    1232:	50 91 67 06 	lds	r21, 0x0667
    1236:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    123a:	69 87       	std	Y+9, r22	; 0x09
    123c:	7a 87       	std	Y+10, r23	; 0x0a
    123e:	8b 87       	std	Y+11, r24	; 0x0b
    1240:	9c 87       	std	Y+12, r25	; 0x0c
    1242:	60 93 64 06 	sts	0x0664, r22
    1246:	70 93 65 06 	sts	0x0665, r23
    124a:	80 93 66 06 	sts	0x0666, r24
    124e:	90 93 67 06 	sts	0x0667, r25
	ezInt = ezInt + ez*Ki;
    1252:	2a e0       	ldi	r18, 0x0A	; 10
    1254:	37 ed       	ldi	r19, 0xD7	; 215
    1256:	43 ea       	ldi	r20, 0xA3	; 163
    1258:	5b e3       	ldi	r21, 0x3B	; 59
    125a:	69 81       	ldd	r22, Y+1	; 0x01
    125c:	7a 81       	ldd	r23, Y+2	; 0x02
    125e:	8b 81       	ldd	r24, Y+3	; 0x03
    1260:	9c 81       	ldd	r25, Y+4	; 0x04
    1262:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1266:	20 91 60 06 	lds	r18, 0x0660
    126a:	30 91 61 06 	lds	r19, 0x0661
    126e:	40 91 62 06 	lds	r20, 0x0662
    1272:	50 91 63 06 	lds	r21, 0x0663
    1276:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    127a:	69 8b       	std	Y+17, r22	; 0x11
    127c:	7a 8b       	std	Y+18, r23	; 0x12
    127e:	8b 8b       	std	Y+19, r24	; 0x13
    1280:	9c 8b       	std	Y+20, r25	; 0x14
    1282:	60 93 60 06 	sts	0x0660, r22
    1286:	70 93 61 06 	sts	0x0661, r23
    128a:	80 93 62 06 	sts	0x0662, r24
    128e:	90 93 63 06 	sts	0x0663, r25
	//调整陀螺仪的测量
 	gx = gx + Kp*ex + exInt;
    1292:	2d 81       	ldd	r18, Y+5	; 0x05
    1294:	3e 81       	ldd	r19, Y+6	; 0x06
    1296:	4f 81       	ldd	r20, Y+7	; 0x07
    1298:	58 85       	ldd	r21, Y+8	; 0x08
    129a:	ca 01       	movw	r24, r20
    129c:	b9 01       	movw	r22, r18
    129e:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    12a2:	a6 01       	movw	r20, r12
    12a4:	95 01       	movw	r18, r10
    12a6:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    12aa:	9b 01       	movw	r18, r22
    12ac:	ac 01       	movw	r20, r24
    12ae:	6d 85       	ldd	r22, Y+13	; 0x0d
    12b0:	7e 85       	ldd	r23, Y+14	; 0x0e
    12b2:	8f 85       	ldd	r24, Y+15	; 0x0f
    12b4:	98 89       	ldd	r25, Y+16	; 0x10
    12b6:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    12ba:	6d 87       	std	Y+13, r22	; 0x0d
    12bc:	7e 87       	std	Y+14, r23	; 0x0e
    12be:	8f 87       	std	Y+15, r24	; 0x0f
    12c0:	98 8b       	std	Y+16, r25	; 0x10
  	gy = gy + Kp*ey + eyInt;
    12c2:	a3 01       	movw	r20, r6
    12c4:	92 01       	movw	r18, r4
    12c6:	c3 01       	movw	r24, r6
    12c8:	b2 01       	movw	r22, r4
    12ca:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    12ce:	cd 57       	subi	r28, 0x7D	; 125
    12d0:	df 4f       	sbci	r29, 0xFF	; 255
    12d2:	28 81       	ld	r18, Y
    12d4:	39 81       	ldd	r19, Y+1	; 0x01
    12d6:	4a 81       	ldd	r20, Y+2	; 0x02
    12d8:	5b 81       	ldd	r21, Y+3	; 0x03
    12da:	c3 58       	subi	r28, 0x83	; 131
    12dc:	d0 40       	sbci	r29, 0x00	; 0
    12de:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    12e2:	9b 01       	movw	r18, r22
    12e4:	ac 01       	movw	r20, r24
    12e6:	69 85       	ldd	r22, Y+9	; 0x09
    12e8:	7a 85       	ldd	r23, Y+10	; 0x0a
    12ea:	8b 85       	ldd	r24, Y+11	; 0x0b
    12ec:	9c 85       	ldd	r25, Y+12	; 0x0c
    12ee:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    12f2:	69 87       	std	Y+9, r22	; 0x09
    12f4:	7a 87       	std	Y+10, r23	; 0x0a
    12f6:	8b 87       	std	Y+11, r24	; 0x0b
    12f8:	9c 87       	std	Y+12, r25	; 0x0c
  	gz = gz + Kp*ez + ezInt;
    12fa:	29 81       	ldd	r18, Y+1	; 0x01
    12fc:	3a 81       	ldd	r19, Y+2	; 0x02
    12fe:	4b 81       	ldd	r20, Y+3	; 0x03
    1300:	5c 81       	ldd	r21, Y+4	; 0x04
    1302:	ca 01       	movw	r24, r20
    1304:	b9 01       	movw	r22, r18
    1306:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    130a:	c9 57       	subi	r28, 0x79	; 121
    130c:	df 4f       	sbci	r29, 0xFF	; 255
    130e:	28 81       	ld	r18, Y
    1310:	39 81       	ldd	r19, Y+1	; 0x01
    1312:	4a 81       	ldd	r20, Y+2	; 0x02
    1314:	5b 81       	ldd	r21, Y+3	; 0x03
    1316:	c7 58       	subi	r28, 0x87	; 135
    1318:	d0 40       	sbci	r29, 0x00	; 0
    131a:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    131e:	9b 01       	movw	r18, r22
    1320:	ac 01       	movw	r20, r24
    1322:	69 89       	ldd	r22, Y+17	; 0x11
    1324:	7a 89       	ldd	r23, Y+18	; 0x12
    1326:	8b 89       	ldd	r24, Y+19	; 0x13
    1328:	9c 89       	ldd	r25, Y+20	; 0x14
    132a:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    132e:	2b 01       	movw	r4, r22
    1330:	3c 01       	movw	r6, r24
	
	
	
	
	// 四元数整合和规范化
	q0 = q0 + (-q1*gx - q2*gy - q3*gz)*halfT;
    1332:	80 91 64 00 	lds	r24, 0x0064
    1336:	90 91 65 00 	lds	r25, 0x0065
    133a:	a0 91 66 00 	lds	r26, 0x0066
    133e:	b0 91 67 00 	lds	r27, 0x0067
    1342:	89 83       	std	Y+1, r24	; 0x01
    1344:	9a 83       	std	Y+2, r25	; 0x02
    1346:	ab 83       	std	Y+3, r26	; 0x03
    1348:	bc 83       	std	Y+4, r27	; 0x04
    134a:	6d 8d       	ldd	r22, Y+29	; 0x1d
    134c:	7e 8d       	ldd	r23, Y+30	; 0x1e
    134e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1350:	98 a1       	ldd	r25, Y+32	; 0x20
    1352:	90 58       	subi	r25, 0x80	; 128
    1354:	2d 85       	ldd	r18, Y+13	; 0x0d
    1356:	3e 85       	ldd	r19, Y+14	; 0x0e
    1358:	4f 85       	ldd	r20, Y+15	; 0x0f
    135a:	58 89       	ldd	r21, Y+16	; 0x10
    135c:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1360:	6b 01       	movw	r12, r22
    1362:	7c 01       	movw	r14, r24
    1364:	29 85       	ldd	r18, Y+9	; 0x09
    1366:	3a 85       	ldd	r19, Y+10	; 0x0a
    1368:	4b 85       	ldd	r20, Y+11	; 0x0b
    136a:	5c 85       	ldd	r21, Y+12	; 0x0c
    136c:	69 8d       	ldd	r22, Y+25	; 0x19
    136e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1370:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1372:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1374:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1378:	9b 01       	movw	r18, r22
    137a:	ac 01       	movw	r20, r24
    137c:	c7 01       	movw	r24, r14
    137e:	b6 01       	movw	r22, r12
    1380:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__subsf3>
    1384:	6b 01       	movw	r12, r22
    1386:	7c 01       	movw	r14, r24
    1388:	a3 01       	movw	r20, r6
    138a:	92 01       	movw	r18, r4
    138c:	69 a1       	ldd	r22, Y+33	; 0x21
    138e:	7a a1       	ldd	r23, Y+34	; 0x22
    1390:	8b a1       	ldd	r24, Y+35	; 0x23
    1392:	9c a1       	ldd	r25, Y+36	; 0x24
    1394:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1398:	9b 01       	movw	r18, r22
    139a:	ac 01       	movw	r20, r24
    139c:	c7 01       	movw	r24, r14
    139e:	b6 01       	movw	r22, r12
    13a0:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__subsf3>
    13a4:	29 81       	ldd	r18, Y+1	; 0x01
    13a6:	3a 81       	ldd	r19, Y+2	; 0x02
    13a8:	4b 81       	ldd	r20, Y+3	; 0x03
    13aa:	5c 81       	ldd	r21, Y+4	; 0x04
    13ac:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    13b0:	9b 01       	movw	r18, r22
    13b2:	ac 01       	movw	r20, r24
    13b4:	69 a9       	ldd	r22, Y+49	; 0x31
    13b6:	7a a9       	ldd	r23, Y+50	; 0x32
    13b8:	8b a9       	ldd	r24, Y+51	; 0x33
    13ba:	9c a9       	ldd	r25, Y+52	; 0x34
    13bc:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    13c0:	4b 01       	movw	r8, r22
    13c2:	5c 01       	movw	r10, r24
	q1 = q1 + (q0*gx + q2*gz - q3*gy)*halfT;
    13c4:	9b 01       	movw	r18, r22
    13c6:	ac 01       	movw	r20, r24
    13c8:	6d 85       	ldd	r22, Y+13	; 0x0d
    13ca:	7e 85       	ldd	r23, Y+14	; 0x0e
    13cc:	8f 85       	ldd	r24, Y+15	; 0x0f
    13ce:	98 89       	ldd	r25, Y+16	; 0x10
    13d0:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    13d4:	6b 01       	movw	r12, r22
    13d6:	7c 01       	movw	r14, r24
    13d8:	a3 01       	movw	r20, r6
    13da:	92 01       	movw	r18, r4
    13dc:	69 8d       	ldd	r22, Y+25	; 0x19
    13de:	7a 8d       	ldd	r23, Y+26	; 0x1a
    13e0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    13e2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    13e4:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    13e8:	9b 01       	movw	r18, r22
    13ea:	ac 01       	movw	r20, r24
    13ec:	c7 01       	movw	r24, r14
    13ee:	b6 01       	movw	r22, r12
    13f0:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    13f4:	6b 01       	movw	r12, r22
    13f6:	7c 01       	movw	r14, r24
    13f8:	29 85       	ldd	r18, Y+9	; 0x09
    13fa:	3a 85       	ldd	r19, Y+10	; 0x0a
    13fc:	4b 85       	ldd	r20, Y+11	; 0x0b
    13fe:	5c 85       	ldd	r21, Y+12	; 0x0c
    1400:	69 a1       	ldd	r22, Y+33	; 0x21
    1402:	7a a1       	ldd	r23, Y+34	; 0x22
    1404:	8b a1       	ldd	r24, Y+35	; 0x23
    1406:	9c a1       	ldd	r25, Y+36	; 0x24
    1408:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    140c:	9b 01       	movw	r18, r22
    140e:	ac 01       	movw	r20, r24
    1410:	c7 01       	movw	r24, r14
    1412:	b6 01       	movw	r22, r12
    1414:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__subsf3>
    1418:	9b 01       	movw	r18, r22
    141a:	ac 01       	movw	r20, r24
    141c:	69 81       	ldd	r22, Y+1	; 0x01
    141e:	7a 81       	ldd	r23, Y+2	; 0x02
    1420:	8b 81       	ldd	r24, Y+3	; 0x03
    1422:	9c 81       	ldd	r25, Y+4	; 0x04
    1424:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1428:	9b 01       	movw	r18, r22
    142a:	ac 01       	movw	r20, r24
    142c:	6d 8d       	ldd	r22, Y+29	; 0x1d
    142e:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1430:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1432:	98 a1       	ldd	r25, Y+32	; 0x20
    1434:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    1438:	6d 8f       	std	Y+29, r22	; 0x1d
    143a:	7e 8f       	std	Y+30, r23	; 0x1e
    143c:	8f 8f       	std	Y+31, r24	; 0x1f
    143e:	98 a3       	std	Y+32, r25	; 0x20
	q2 = q2 + (q0*gy - q1*gz + q3*gx)*halfT;
    1440:	a5 01       	movw	r20, r10
    1442:	94 01       	movw	r18, r8
    1444:	69 85       	ldd	r22, Y+9	; 0x09
    1446:	7a 85       	ldd	r23, Y+10	; 0x0a
    1448:	8b 85       	ldd	r24, Y+11	; 0x0b
    144a:	9c 85       	ldd	r25, Y+12	; 0x0c
    144c:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1450:	6b 01       	movw	r12, r22
    1452:	7c 01       	movw	r14, r24
    1454:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1456:	3e 8d       	ldd	r19, Y+30	; 0x1e
    1458:	4f 8d       	ldd	r20, Y+31	; 0x1f
    145a:	58 a1       	ldd	r21, Y+32	; 0x20
    145c:	c3 01       	movw	r24, r6
    145e:	b2 01       	movw	r22, r4
    1460:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1464:	9b 01       	movw	r18, r22
    1466:	ac 01       	movw	r20, r24
    1468:	c7 01       	movw	r24, r14
    146a:	b6 01       	movw	r22, r12
    146c:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__subsf3>
    1470:	6b 01       	movw	r12, r22
    1472:	7c 01       	movw	r14, r24
    1474:	2d 85       	ldd	r18, Y+13	; 0x0d
    1476:	3e 85       	ldd	r19, Y+14	; 0x0e
    1478:	4f 85       	ldd	r20, Y+15	; 0x0f
    147a:	58 89       	ldd	r21, Y+16	; 0x10
    147c:	69 a1       	ldd	r22, Y+33	; 0x21
    147e:	7a a1       	ldd	r23, Y+34	; 0x22
    1480:	8b a1       	ldd	r24, Y+35	; 0x23
    1482:	9c a1       	ldd	r25, Y+36	; 0x24
    1484:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1488:	9b 01       	movw	r18, r22
    148a:	ac 01       	movw	r20, r24
    148c:	c7 01       	movw	r24, r14
    148e:	b6 01       	movw	r22, r12
    1490:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    1494:	9b 01       	movw	r18, r22
    1496:	ac 01       	movw	r20, r24
    1498:	69 81       	ldd	r22, Y+1	; 0x01
    149a:	7a 81       	ldd	r23, Y+2	; 0x02
    149c:	8b 81       	ldd	r24, Y+3	; 0x03
    149e:	9c 81       	ldd	r25, Y+4	; 0x04
    14a0:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    14a4:	9b 01       	movw	r18, r22
    14a6:	ac 01       	movw	r20, r24
    14a8:	69 8d       	ldd	r22, Y+25	; 0x19
    14aa:	7a 8d       	ldd	r23, Y+26	; 0x1a
    14ac:	8b 8d       	ldd	r24, Y+27	; 0x1b
    14ae:	9c 8d       	ldd	r25, Y+28	; 0x1c
    14b0:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    14b4:	69 8f       	std	Y+25, r22	; 0x19
    14b6:	7a 8f       	std	Y+26, r23	; 0x1a
    14b8:	8b 8f       	std	Y+27, r24	; 0x1b
    14ba:	9c 8f       	std	Y+28, r25	; 0x1c
	q3 = q3 + (q0*gz + q1*gy - q2*gx)*halfT;
    14bc:	a5 01       	movw	r20, r10
    14be:	94 01       	movw	r18, r8
    14c0:	c3 01       	movw	r24, r6
    14c2:	b2 01       	movw	r22, r4
    14c4:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    14c8:	6b 01       	movw	r12, r22
    14ca:	7c 01       	movw	r14, r24
    14cc:	2d 8d       	ldd	r18, Y+29	; 0x1d
    14ce:	3e 8d       	ldd	r19, Y+30	; 0x1e
    14d0:	4f 8d       	ldd	r20, Y+31	; 0x1f
    14d2:	58 a1       	ldd	r21, Y+32	; 0x20
    14d4:	69 85       	ldd	r22, Y+9	; 0x09
    14d6:	7a 85       	ldd	r23, Y+10	; 0x0a
    14d8:	8b 85       	ldd	r24, Y+11	; 0x0b
    14da:	9c 85       	ldd	r25, Y+12	; 0x0c
    14dc:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    14e0:	9b 01       	movw	r18, r22
    14e2:	ac 01       	movw	r20, r24
    14e4:	c7 01       	movw	r24, r14
    14e6:	b6 01       	movw	r22, r12
    14e8:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    14ec:	6b 01       	movw	r12, r22
    14ee:	7c 01       	movw	r14, r24
    14f0:	29 8d       	ldd	r18, Y+25	; 0x19
    14f2:	3a 8d       	ldd	r19, Y+26	; 0x1a
    14f4:	4b 8d       	ldd	r20, Y+27	; 0x1b
    14f6:	5c 8d       	ldd	r21, Y+28	; 0x1c
    14f8:	6d 85       	ldd	r22, Y+13	; 0x0d
    14fa:	7e 85       	ldd	r23, Y+14	; 0x0e
    14fc:	8f 85       	ldd	r24, Y+15	; 0x0f
    14fe:	98 89       	ldd	r25, Y+16	; 0x10
    1500:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1504:	9b 01       	movw	r18, r22
    1506:	ac 01       	movw	r20, r24
    1508:	c7 01       	movw	r24, r14
    150a:	b6 01       	movw	r22, r12
    150c:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__subsf3>
    1510:	9b 01       	movw	r18, r22
    1512:	ac 01       	movw	r20, r24
    1514:	69 81       	ldd	r22, Y+1	; 0x01
    1516:	7a 81       	ldd	r23, Y+2	; 0x02
    1518:	8b 81       	ldd	r24, Y+3	; 0x03
    151a:	9c 81       	ldd	r25, Y+4	; 0x04
    151c:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1520:	9b 01       	movw	r18, r22
    1522:	ac 01       	movw	r20, r24
    1524:	69 a1       	ldd	r22, Y+33	; 0x21
    1526:	7a a1       	ldd	r23, Y+34	; 0x22
    1528:	8b a1       	ldd	r24, Y+35	; 0x23
    152a:	9c a1       	ldd	r25, Y+36	; 0x24
    152c:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    1530:	2b 01       	movw	r4, r22
    1532:	3c 01       	movw	r6, r24
	//ffff=q3;
	// 四元数规范化
	norm = sqrt(q0*q0 + q1*q1 + q2*q2 + q3*q3);
    1534:	a5 01       	movw	r20, r10
    1536:	94 01       	movw	r18, r8
    1538:	c5 01       	movw	r24, r10
    153a:	b4 01       	movw	r22, r8
    153c:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1540:	6b 01       	movw	r12, r22
    1542:	7c 01       	movw	r14, r24
    1544:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1546:	3e 8d       	ldd	r19, Y+30	; 0x1e
    1548:	4f 8d       	ldd	r20, Y+31	; 0x1f
    154a:	58 a1       	ldd	r21, Y+32	; 0x20
    154c:	ca 01       	movw	r24, r20
    154e:	b9 01       	movw	r22, r18
    1550:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1554:	9b 01       	movw	r18, r22
    1556:	ac 01       	movw	r20, r24
    1558:	c7 01       	movw	r24, r14
    155a:	b6 01       	movw	r22, r12
    155c:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    1560:	6b 01       	movw	r12, r22
    1562:	7c 01       	movw	r14, r24
    1564:	29 8d       	ldd	r18, Y+25	; 0x19
    1566:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1568:	4b 8d       	ldd	r20, Y+27	; 0x1b
    156a:	5c 8d       	ldd	r21, Y+28	; 0x1c
    156c:	ca 01       	movw	r24, r20
    156e:	b9 01       	movw	r22, r18
    1570:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1574:	9b 01       	movw	r18, r22
    1576:	ac 01       	movw	r20, r24
    1578:	c7 01       	movw	r24, r14
    157a:	b6 01       	movw	r22, r12
    157c:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    1580:	6b 01       	movw	r12, r22
    1582:	7c 01       	movw	r14, r24
    1584:	a3 01       	movw	r20, r6
    1586:	92 01       	movw	r18, r4
    1588:	c3 01       	movw	r24, r6
    158a:	b2 01       	movw	r22, r4
    158c:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1590:	9b 01       	movw	r18, r22
    1592:	ac 01       	movw	r20, r24
    1594:	c7 01       	movw	r24, r14
    1596:	b6 01       	movw	r22, r12
    1598:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    159c:	0e 94 67 11 	call	0x22ce	; 0x22ce <sqrt>
    15a0:	6b 01       	movw	r12, r22
    15a2:	7c 01       	movw	r14, r24
	q0 = q0 / norm;
    15a4:	9b 01       	movw	r18, r22
    15a6:	ac 01       	movw	r20, r24
    15a8:	c5 01       	movw	r24, r10
    15aa:	b4 01       	movw	r22, r8
    15ac:	0e 94 81 0f 	call	0x1f02	; 0x1f02 <__divsf3>
    15b0:	60 93 60 00 	sts	0x0060, r22
    15b4:	70 93 61 00 	sts	0x0061, r23
    15b8:	80 93 62 00 	sts	0x0062, r24
    15bc:	90 93 63 00 	sts	0x0063, r25
	q1 = q1 / norm;
    15c0:	a7 01       	movw	r20, r14
    15c2:	96 01       	movw	r18, r12
    15c4:	6d 8d       	ldd	r22, Y+29	; 0x1d
    15c6:	7e 8d       	ldd	r23, Y+30	; 0x1e
    15c8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    15ca:	98 a1       	ldd	r25, Y+32	; 0x20
    15cc:	0e 94 81 0f 	call	0x1f02	; 0x1f02 <__divsf3>
    15d0:	60 93 74 06 	sts	0x0674, r22
    15d4:	70 93 75 06 	sts	0x0675, r23
    15d8:	80 93 76 06 	sts	0x0676, r24
    15dc:	90 93 77 06 	sts	0x0677, r25
	q2 = q2 / norm;
    15e0:	a7 01       	movw	r20, r14
    15e2:	96 01       	movw	r18, r12
    15e4:	69 8d       	ldd	r22, Y+25	; 0x19
    15e6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    15e8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    15ea:	9c 8d       	ldd	r25, Y+28	; 0x1c
    15ec:	0e 94 81 0f 	call	0x1f02	; 0x1f02 <__divsf3>
    15f0:	60 93 70 06 	sts	0x0670, r22
    15f4:	70 93 71 06 	sts	0x0671, r23
    15f8:	80 93 72 06 	sts	0x0672, r24
    15fc:	90 93 73 06 	sts	0x0673, r25
	q3 = q3 / norm;
    1600:	a7 01       	movw	r20, r14
    1602:	96 01       	movw	r18, r12
    1604:	c3 01       	movw	r24, r6
    1606:	b2 01       	movw	r22, r4
    1608:	0e 94 81 0f 	call	0x1f02	; 0x1f02 <__divsf3>
    160c:	60 93 6c 06 	sts	0x066C, r22
    1610:	70 93 6d 06 	sts	0x066D, r23
    1614:	80 93 6e 06 	sts	0x066E, r24
    1618:	90 93 6f 06 	sts	0x066F, r25
}
    161c:	c0 59       	subi	r28, 0x90	; 144
    161e:	df 4f       	sbci	r29, 0xFF	; 255
    1620:	0f b6       	in	r0, 0x3f	; 63
    1622:	f8 94       	cli
    1624:	de bf       	out	0x3e, r29	; 62
    1626:	0f be       	out	0x3f, r0	; 63
    1628:	cd bf       	out	0x3d, r28	; 61
    162a:	df 91       	pop	r29
    162c:	cf 91       	pop	r28
    162e:	1f 91       	pop	r17
    1630:	0f 91       	pop	r16
    1632:	ff 90       	pop	r15
    1634:	ef 90       	pop	r14
    1636:	df 90       	pop	r13
    1638:	cf 90       	pop	r12
    163a:	bf 90       	pop	r11
    163c:	af 90       	pop	r10
    163e:	9f 90       	pop	r9
    1640:	8f 90       	pop	r8
    1642:	7f 90       	pop	r7
    1644:	6f 90       	pop	r6
    1646:	5f 90       	pop	r5
    1648:	4f 90       	pop	r4
    164a:	08 95       	ret

0000164c <Quaternions_to_EulerAngles>:

void Quaternions_to_EulerAngles()
{// x_EulerAngles=atan2(2*q0*q3,1-2*q2*q2-2*q3*q3);
    164c:	4f 92       	push	r4
    164e:	5f 92       	push	r5
    1650:	6f 92       	push	r6
    1652:	7f 92       	push	r7
    1654:	8f 92       	push	r8
    1656:	9f 92       	push	r9
    1658:	af 92       	push	r10
    165a:	bf 92       	push	r11
    165c:	cf 92       	push	r12
    165e:	df 92       	push	r13
    1660:	ef 92       	push	r14
    1662:	ff 92       	push	r15
    1664:	cf 93       	push	r28
    1666:	df 93       	push	r29
    1668:	cd b7       	in	r28, 0x3d	; 61
    166a:	de b7       	in	r29, 0x3e	; 62
    166c:	64 97       	sbiw	r28, 0x14	; 20
    166e:	0f b6       	in	r0, 0x3f	; 63
    1670:	f8 94       	cli
    1672:	de bf       	out	0x3e, r29	; 62
    1674:	0f be       	out	0x3f, r0	; 63
    1676:	cd bf       	out	0x3d, r28	; 61
	yaw=(atan2(2*q1*q2+2*q0*q3,1-2*q0*q0+2*q1*q1))*57.3;
    1678:	80 90 60 00 	lds	r8, 0x0060
    167c:	90 90 61 00 	lds	r9, 0x0061
    1680:	a0 90 62 00 	lds	r10, 0x0062
    1684:	b0 90 63 00 	lds	r11, 0x0063
    1688:	a5 01       	movw	r20, r10
    168a:	94 01       	movw	r18, r8
    168c:	c5 01       	movw	r24, r10
    168e:	b4 01       	movw	r22, r8
    1690:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    1694:	6d 83       	std	Y+5, r22	; 0x05
    1696:	7e 83       	std	Y+6, r23	; 0x06
    1698:	8f 83       	std	Y+7, r24	; 0x07
    169a:	98 87       	std	Y+8, r25	; 0x08
    169c:	9b 01       	movw	r18, r22
    169e:	ac 01       	movw	r20, r24
    16a0:	c5 01       	movw	r24, r10
    16a2:	b4 01       	movw	r22, r8
    16a4:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    16a8:	9b 01       	movw	r18, r22
    16aa:	ac 01       	movw	r20, r24
    16ac:	60 e0       	ldi	r22, 0x00	; 0
    16ae:	70 e0       	ldi	r23, 0x00	; 0
    16b0:	80 e8       	ldi	r24, 0x80	; 128
    16b2:	9f e3       	ldi	r25, 0x3F	; 63
    16b4:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__subsf3>
    16b8:	69 87       	std	Y+9, r22	; 0x09
    16ba:	7a 87       	std	Y+10, r23	; 0x0a
    16bc:	8b 87       	std	Y+11, r24	; 0x0b
    16be:	9c 87       	std	Y+12, r25	; 0x0c
    16c0:	40 90 74 06 	lds	r4, 0x0674
    16c4:	50 90 75 06 	lds	r5, 0x0675
    16c8:	60 90 76 06 	lds	r6, 0x0676
    16cc:	70 90 77 06 	lds	r7, 0x0677
    16d0:	a3 01       	movw	r20, r6
    16d2:	92 01       	movw	r18, r4
    16d4:	c3 01       	movw	r24, r6
    16d6:	b2 01       	movw	r22, r4
    16d8:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    16dc:	4b 01       	movw	r8, r22
    16de:	5c 01       	movw	r10, r24
    16e0:	80 91 70 06 	lds	r24, 0x0670
    16e4:	90 91 71 06 	lds	r25, 0x0671
    16e8:	a0 91 72 06 	lds	r26, 0x0672
    16ec:	b0 91 73 06 	lds	r27, 0x0673
    16f0:	89 83       	std	Y+1, r24	; 0x01
    16f2:	9a 83       	std	Y+2, r25	; 0x02
    16f4:	ab 83       	std	Y+3, r26	; 0x03
    16f6:	bc 83       	std	Y+4, r27	; 0x04
    16f8:	c0 90 6c 06 	lds	r12, 0x066C
    16fc:	d0 90 6d 06 	lds	r13, 0x066D
    1700:	e0 90 6e 06 	lds	r14, 0x066E
    1704:	f0 90 6f 06 	lds	r15, 0x066F
    1708:	a5 01       	movw	r20, r10
    170a:	94 01       	movw	r18, r8
    170c:	c3 01       	movw	r24, r6
    170e:	b2 01       	movw	r22, r4
    1710:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1714:	9b 01       	movw	r18, r22
    1716:	ac 01       	movw	r20, r24
    1718:	69 85       	ldd	r22, Y+9	; 0x09
    171a:	7a 85       	ldd	r23, Y+10	; 0x0a
    171c:	8b 85       	ldd	r24, Y+11	; 0x0b
    171e:	9c 85       	ldd	r25, Y+12	; 0x0c
    1720:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    1724:	6d 87       	std	Y+13, r22	; 0x0d
    1726:	7e 87       	std	Y+14, r23	; 0x0e
    1728:	8f 87       	std	Y+15, r24	; 0x0f
    172a:	98 8b       	std	Y+16, r25	; 0x10
    172c:	29 81       	ldd	r18, Y+1	; 0x01
    172e:	3a 81       	ldd	r19, Y+2	; 0x02
    1730:	4b 81       	ldd	r20, Y+3	; 0x03
    1732:	5c 81       	ldd	r21, Y+4	; 0x04
    1734:	c5 01       	movw	r24, r10
    1736:	b4 01       	movw	r22, r8
    1738:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    173c:	69 8b       	std	Y+17, r22	; 0x11
    173e:	7a 8b       	std	Y+18, r23	; 0x12
    1740:	8b 8b       	std	Y+19, r24	; 0x13
    1742:	9c 8b       	std	Y+20, r25	; 0x14
    1744:	a7 01       	movw	r20, r14
    1746:	96 01       	movw	r18, r12
    1748:	6d 81       	ldd	r22, Y+5	; 0x05
    174a:	7e 81       	ldd	r23, Y+6	; 0x06
    174c:	8f 81       	ldd	r24, Y+7	; 0x07
    174e:	98 85       	ldd	r25, Y+8	; 0x08
    1750:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1754:	9b 01       	movw	r18, r22
    1756:	ac 01       	movw	r20, r24
    1758:	69 89       	ldd	r22, Y+17	; 0x11
    175a:	7a 89       	ldd	r23, Y+18	; 0x12
    175c:	8b 89       	ldd	r24, Y+19	; 0x13
    175e:	9c 89       	ldd	r25, Y+20	; 0x14
    1760:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    1764:	2d 85       	ldd	r18, Y+13	; 0x0d
    1766:	3e 85       	ldd	r19, Y+14	; 0x0e
    1768:	4f 85       	ldd	r20, Y+15	; 0x0f
    176a:	58 89       	ldd	r21, Y+16	; 0x10
    176c:	0e 94 2e 0f 	call	0x1e5c	; 0x1e5c <atan2>
    1770:	23 e3       	ldi	r18, 0x33	; 51
    1772:	33 e3       	ldi	r19, 0x33	; 51
    1774:	45 e6       	ldi	r20, 0x65	; 101
    1776:	52 e4       	ldi	r21, 0x42	; 66
    1778:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    177c:	60 93 f0 06 	sts	0x06F0, r22
    1780:	70 93 f1 06 	sts	0x06F1, r23
    1784:	80 93 f2 06 	sts	0x06F2, r24
    1788:	90 93 f3 06 	sts	0x06F3, r25
	pitch=(-asin(2 * q1 * q3 - 2 * q0 * q2))*57.3;     
    178c:	a7 01       	movw	r20, r14
    178e:	96 01       	movw	r18, r12
    1790:	c5 01       	movw	r24, r10
    1792:	b4 01       	movw	r22, r8
    1794:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1798:	4b 01       	movw	r8, r22
    179a:	5c 01       	movw	r10, r24
    179c:	29 81       	ldd	r18, Y+1	; 0x01
    179e:	3a 81       	ldd	r19, Y+2	; 0x02
    17a0:	4b 81       	ldd	r20, Y+3	; 0x03
    17a2:	5c 81       	ldd	r21, Y+4	; 0x04
    17a4:	6d 81       	ldd	r22, Y+5	; 0x05
    17a6:	7e 81       	ldd	r23, Y+6	; 0x06
    17a8:	8f 81       	ldd	r24, Y+7	; 0x07
    17aa:	98 85       	ldd	r25, Y+8	; 0x08
    17ac:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    17b0:	9b 01       	movw	r18, r22
    17b2:	ac 01       	movw	r20, r24
    17b4:	c5 01       	movw	r24, r10
    17b6:	b4 01       	movw	r22, r8
    17b8:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__subsf3>
    17bc:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <asin>
    17c0:	90 58       	subi	r25, 0x80	; 128
    17c2:	23 e3       	ldi	r18, 0x33	; 51
    17c4:	33 e3       	ldi	r19, 0x33	; 51
    17c6:	45 e6       	ldi	r20, 0x65	; 101
    17c8:	52 e4       	ldi	r21, 0x42	; 66
    17ca:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    17ce:	60 93 f4 06 	sts	0x06F4, r22
    17d2:	70 93 f5 06 	sts	0x06F5, r23
    17d6:	80 93 f6 06 	sts	0x06F6, r24
    17da:	90 93 f7 06 	sts	0x06F7, r25
	 roll=(atan2(2 * q2 * q3 + 2 * q0 * q1,1- 2 * q0 * q0 + 2 * q3 * q3 ))*57.3; 
    17de:	a7 01       	movw	r20, r14
    17e0:	96 01       	movw	r18, r12
    17e2:	c7 01       	movw	r24, r14
    17e4:	b6 01       	movw	r22, r12
    17e6:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    17ea:	9b 01       	movw	r18, r22
    17ec:	ac 01       	movw	r20, r24
    17ee:	c7 01       	movw	r24, r14
    17f0:	b6 01       	movw	r22, r12
    17f2:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    17f6:	9b 01       	movw	r18, r22
    17f8:	ac 01       	movw	r20, r24
    17fa:	69 85       	ldd	r22, Y+9	; 0x09
    17fc:	7a 85       	ldd	r23, Y+10	; 0x0a
    17fe:	8b 85       	ldd	r24, Y+11	; 0x0b
    1800:	9c 85       	ldd	r25, Y+12	; 0x0c
    1802:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    1806:	4b 01       	movw	r8, r22
    1808:	5c 01       	movw	r10, r24
    180a:	29 81       	ldd	r18, Y+1	; 0x01
    180c:	3a 81       	ldd	r19, Y+2	; 0x02
    180e:	4b 81       	ldd	r20, Y+3	; 0x03
    1810:	5c 81       	ldd	r21, Y+4	; 0x04
    1812:	ca 01       	movw	r24, r20
    1814:	b9 01       	movw	r22, r18
    1816:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    181a:	9b 01       	movw	r18, r22
    181c:	ac 01       	movw	r20, r24
    181e:	c7 01       	movw	r24, r14
    1820:	b6 01       	movw	r22, r12
    1822:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1826:	6b 01       	movw	r12, r22
    1828:	7c 01       	movw	r14, r24
    182a:	a3 01       	movw	r20, r6
    182c:	92 01       	movw	r18, r4
    182e:	6d 81       	ldd	r22, Y+5	; 0x05
    1830:	7e 81       	ldd	r23, Y+6	; 0x06
    1832:	8f 81       	ldd	r24, Y+7	; 0x07
    1834:	98 85       	ldd	r25, Y+8	; 0x08
    1836:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    183a:	9b 01       	movw	r18, r22
    183c:	ac 01       	movw	r20, r24
    183e:	c7 01       	movw	r24, r14
    1840:	b6 01       	movw	r22, r12
    1842:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    1846:	a5 01       	movw	r20, r10
    1848:	94 01       	movw	r18, r8
    184a:	0e 94 2e 0f 	call	0x1e5c	; 0x1e5c <atan2>
    184e:	23 e3       	ldi	r18, 0x33	; 51
    1850:	33 e3       	ldi	r19, 0x33	; 51
    1852:	45 e6       	ldi	r20, 0x65	; 101
    1854:	52 e4       	ldi	r21, 0x42	; 66
    1856:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    185a:	60 93 f8 06 	sts	0x06F8, r22
    185e:	70 93 f9 06 	sts	0x06F9, r23
    1862:	80 93 fa 06 	sts	0x06FA, r24
    1866:	90 93 fb 06 	sts	0x06FB, r25
    186a:	64 96       	adiw	r28, 0x14	; 20
    186c:	0f b6       	in	r0, 0x3f	; 63
    186e:	f8 94       	cli
    1870:	de bf       	out	0x3e, r29	; 62
    1872:	0f be       	out	0x3f, r0	; 63
    1874:	cd bf       	out	0x3d, r28	; 61
    1876:	df 91       	pop	r29
    1878:	cf 91       	pop	r28
    187a:	ff 90       	pop	r15
    187c:	ef 90       	pop	r14
    187e:	df 90       	pop	r13
    1880:	cf 90       	pop	r12
    1882:	bf 90       	pop	r11
    1884:	af 90       	pop	r10
    1886:	9f 90       	pop	r9
    1888:	8f 90       	pop	r8
    188a:	7f 90       	pop	r7
    188c:	6f 90       	pop	r6
    188e:	5f 90       	pop	r5
    1890:	4f 90       	pop	r4
    1892:	08 95       	ret

00001894 <port_init>:
char s1=0,s2=0,s3=0,s4=0,bz=0,jpanStart=0;
//控制变量
int mx,my,mz,ax,ay,az,vv=0,vvv=0;
void port_init(void)
{
	DDRB = 0xbf;        //pb4 0 miso 输入11110111
    1894:	8f eb       	ldi	r24, 0xBF	; 191
    1896:	87 bb       	out	0x17, r24	; 23
	PORTB= 0x0f;
    1898:	8f e0       	ldi	r24, 0x0F	; 15
    189a:	88 bb       	out	0x18, r24	; 24
	DDRC = 0xff; 		   //PC输入
    189c:	8f ef       	ldi	r24, 0xFF	; 255
    189e:	84 bb       	out	0x14, r24	; 20
	PORTC= 0xff; 		   //无电阻 减少干扰
    18a0:	85 bb       	out	0x15, r24	; 21
	DDRD = 0xF7;              //端口3舵机信号输入
    18a2:	87 ef       	ldi	r24, 0xF7	; 247
    18a4:	81 bb       	out	0x11, r24	; 17
	PORTD=0x00;
    18a6:	12 ba       	out	0x12, r1	; 18
    18a8:	08 95       	ret

000018aa <offset>:
	read3=(read1<<8)+read2;
	return read3;
}

void offset(void)
{ int gx=0,gy=0,gz=0;
    18aa:	7f 92       	push	r7
    18ac:	8f 92       	push	r8
    18ae:	9f 92       	push	r9
    18b0:	af 92       	push	r10
    18b2:	bf 92       	push	r11
    18b4:	cf 92       	push	r12
    18b6:	df 92       	push	r13
    18b8:	ef 92       	push	r14
    18ba:	ff 92       	push	r15
    18bc:	0f 93       	push	r16
    18be:	1f 93       	push	r17
    18c0:	cf 93       	push	r28
    18c2:	df 93       	push	r29
	MPU9250_getData( original_data );
    18c4:	8c ef       	ldi	r24, 0xFC	; 252
    18c6:	96 e0       	ldi	r25, 0x06	; 6
    18c8:	0e 94 32 03 	call	0x664	; 0x664 <MPU9250_getData>
    18cc:	0f 2e       	mov	r0, r31
    18ce:	f4 e6       	ldi	r31, 0x64	; 100
    18d0:	7f 2e       	mov	r7, r31
    18d2:	f0 2d       	mov	r31, r0
	read3=(read1<<8)+read2;
	return read3;
}

void offset(void)
{ int gx=0,gy=0,gz=0;
    18d4:	c0 e0       	ldi	r28, 0x00	; 0
    18d6:	d0 e0       	ldi	r29, 0x00	; 0
    18d8:	00 e0       	ldi	r16, 0x00	; 0
    18da:	10 e0       	ldi	r17, 0x00	; 0
    18dc:	e1 2c       	mov	r14, r1
    18de:	f1 2c       	mov	r15, r1
	MPU9250_getData( original_data );
	for (uchar i=0;i<100;i++)
	{ _delay_us(50);
		MPU9250_getData( original_data );
	 gx+=original_data[4];
    18e0:	0f 2e       	mov	r0, r31
    18e2:	f4 e0       	ldi	r31, 0x04	; 4
    18e4:	af 2e       	mov	r10, r31
    18e6:	f7 e0       	ldi	r31, 0x07	; 7
    18e8:	bf 2e       	mov	r11, r31
    18ea:	f0 2d       	mov	r31, r0
	 gy+=original_data[5];
    18ec:	0f 2e       	mov	r0, r31
    18ee:	f6 e0       	ldi	r31, 0x06	; 6
    18f0:	cf 2e       	mov	r12, r31
    18f2:	f7 e0       	ldi	r31, 0x07	; 7
    18f4:	df 2e       	mov	r13, r31
    18f6:	f0 2d       	mov	r31, r0
	 gz+=original_data[6];
    18f8:	0f 2e       	mov	r0, r31
    18fa:	f8 e0       	ldi	r31, 0x08	; 8
    18fc:	8f 2e       	mov	r8, r31
    18fe:	f7 e0       	ldi	r31, 0x07	; 7
    1900:	9f 2e       	mov	r9, r31
    1902:	f0 2d       	mov	r31, r0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1904:	87 ec       	ldi	r24, 0xC7	; 199
    1906:	90 e0       	ldi	r25, 0x00	; 0
    1908:	01 97       	sbiw	r24, 0x01	; 1
    190a:	f1 f7       	brne	.-4      	; 0x1908 <offset+0x5e>
    190c:	00 c0       	rjmp	.+0      	; 0x190e <offset+0x64>
    190e:	00 00       	nop
void offset(void)
{ int gx=0,gy=0,gz=0;
	MPU9250_getData( original_data );
	for (uchar i=0;i<100;i++)
	{ _delay_us(50);
		MPU9250_getData( original_data );
    1910:	8c ef       	ldi	r24, 0xFC	; 252
    1912:	96 e0       	ldi	r25, 0x06	; 6
    1914:	0e 94 32 03 	call	0x664	; 0x664 <MPU9250_getData>
	 gx+=original_data[4];
    1918:	f5 01       	movw	r30, r10
    191a:	80 81       	ld	r24, Z
    191c:	91 81       	ldd	r25, Z+1	; 0x01
    191e:	e8 0e       	add	r14, r24
    1920:	f9 1e       	adc	r15, r25
	 gy+=original_data[5];
    1922:	f6 01       	movw	r30, r12
    1924:	80 81       	ld	r24, Z
    1926:	91 81       	ldd	r25, Z+1	; 0x01
    1928:	08 0f       	add	r16, r24
    192a:	19 1f       	adc	r17, r25
	 gz+=original_data[6];
    192c:	f4 01       	movw	r30, r8
    192e:	80 81       	ld	r24, Z
    1930:	91 81       	ldd	r25, Z+1	; 0x01
    1932:	c8 0f       	add	r28, r24
    1934:	d9 1f       	adc	r29, r25
    1936:	7a 94       	dec	r7
}

void offset(void)
{ int gx=0,gy=0,gz=0;
	MPU9250_getData( original_data );
	for (uchar i=0;i<100;i++)
    1938:	29 f7       	brne	.-54     	; 0x1904 <offset+0x5a>
		MPU9250_getData( original_data );
	 gx+=original_data[4];
	 gy+=original_data[5];
	 gz+=original_data[6];
	}
	xg_offset=-gx/100;
    193a:	88 27       	eor	r24, r24
    193c:	99 27       	eor	r25, r25
    193e:	8e 19       	sub	r24, r14
    1940:	9f 09       	sbc	r25, r15
    1942:	24 e6       	ldi	r18, 0x64	; 100
    1944:	30 e0       	ldi	r19, 0x00	; 0
    1946:	b9 01       	movw	r22, r18
    1948:	0e 94 bd 11 	call	0x237a	; 0x237a <__divmodhi4>
    194c:	47 2f       	mov	r20, r23
    194e:	60 93 b8 06 	sts	0x06B8, r22
    1952:	70 93 b9 06 	sts	0x06B9, r23
	yg_offset=-gy/100;
    1956:	88 27       	eor	r24, r24
    1958:	99 27       	eor	r25, r25
    195a:	80 1b       	sub	r24, r16
    195c:	91 0b       	sbc	r25, r17
    195e:	b9 01       	movw	r22, r18
    1960:	0e 94 bd 11 	call	0x237a	; 0x237a <__divmodhi4>
    1964:	70 93 b7 06 	sts	0x06B7, r23
    1968:	60 93 b6 06 	sts	0x06B6, r22
	zg_offset=-gz/100;
    196c:	88 27       	eor	r24, r24
    196e:	99 27       	eor	r25, r25
    1970:	8c 1b       	sub	r24, r28
    1972:	9d 0b       	sbc	r25, r29
    1974:	b9 01       	movw	r22, r18
    1976:	0e 94 bd 11 	call	0x237a	; 0x237a <__divmodhi4>
    197a:	70 93 a9 06 	sts	0x06A9, r23
    197e:	60 93 a8 06 	sts	0x06A8, r22
	 SPI_write_9250(0x13,(xg_offset>>8));//角速度偏移高位
    1982:	64 2f       	mov	r22, r20
    1984:	83 e1       	ldi	r24, 0x13	; 19
    1986:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	SPI_write_9250(0x14,((xg_offset<<8)>>8));
    198a:	60 91 b8 06 	lds	r22, 0x06B8
    198e:	84 e1       	ldi	r24, 0x14	; 20
    1990:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	 
	SPI_write_9250(0x15,(yg_offset>>8));//角速度偏移高位
    1994:	60 91 b7 06 	lds	r22, 0x06B7
    1998:	85 e1       	ldi	r24, 0x15	; 21
    199a:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	 SPI_write_9250(0x16,((yg_offset<<8)>>8));
    199e:	60 91 b6 06 	lds	r22, 0x06B6
    19a2:	86 e1       	ldi	r24, 0x16	; 22
    19a4:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	SPI_write_9250(0x17,(zg_offset>>8));//角速度偏移高位
    19a8:	60 91 a9 06 	lds	r22, 0x06A9
    19ac:	87 e1       	ldi	r24, 0x17	; 23
    19ae:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	 SPI_write_9250(0x18,((zg_offset<<8)>>8));
    19b2:	60 91 a8 06 	lds	r22, 0x06A8
    19b6:	88 e1       	ldi	r24, 0x18	; 24
    19b8:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <SPI_write_9250>
	}
    19bc:	df 91       	pop	r29
    19be:	cf 91       	pop	r28
    19c0:	1f 91       	pop	r17
    19c2:	0f 91       	pop	r16
    19c4:	ff 90       	pop	r15
    19c6:	ef 90       	pop	r14
    19c8:	df 90       	pop	r13
    19ca:	cf 90       	pop	r12
    19cc:	bf 90       	pop	r11
    19ce:	af 90       	pop	r10
    19d0:	9f 90       	pop	r9
    19d2:	8f 90       	pop	r8
    19d4:	7f 90       	pop	r7
    19d6:	08 95       	ret

000019d8 <Share_filter>:
	else if  (original_data[9]<max_m[5]){max_m[5]=original_data[9];}		 

	}

void Share_filter(int *indata,uchar lens,float Share,int *outdata )
{  for (uchar i=0;i<lens;i++)
    19d8:	4f 92       	push	r4
    19da:	5f 92       	push	r5
    19dc:	6f 92       	push	r6
    19de:	7f 92       	push	r7
    19e0:	8f 92       	push	r8
    19e2:	9f 92       	push	r9
    19e4:	af 92       	push	r10
    19e6:	bf 92       	push	r11
    19e8:	cf 92       	push	r12
    19ea:	df 92       	push	r13
    19ec:	ef 92       	push	r14
    19ee:	ff 92       	push	r15
    19f0:	0f 93       	push	r16
    19f2:	1f 93       	push	r17
    19f4:	cf 93       	push	r28
    19f6:	df 93       	push	r29
    19f8:	86 2e       	mov	r8, r22
    19fa:	69 01       	movw	r12, r18
    19fc:	7a 01       	movw	r14, r20
    19fe:	66 23       	and	r22, r22
    1a00:	d9 f1       	breq	.+118    	; 0x1a78 <Share_filter+0xa0>
    1a02:	a8 2e       	mov	r10, r24
    1a04:	b9 2e       	mov	r11, r25
    1a06:	c0 2f       	mov	r28, r16
    1a08:	d1 2f       	mov	r29, r17
    1a0a:	91 2c       	mov	r9, r1
{outdata[i]=(1-Share)*outdata[i]+Share*indata[i];
    1a0c:	f5 01       	movw	r30, r10
    1a0e:	01 91       	ld	r16, Z+
    1a10:	11 91       	ld	r17, Z+
    1a12:	5f 01       	movw	r10, r30
    1a14:	a7 01       	movw	r20, r14
    1a16:	96 01       	movw	r18, r12
    1a18:	60 e0       	ldi	r22, 0x00	; 0
    1a1a:	70 e0       	ldi	r23, 0x00	; 0
    1a1c:	80 e8       	ldi	r24, 0x80	; 128
    1a1e:	9f e3       	ldi	r25, 0x3F	; 63
    1a20:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__subsf3>
    1a24:	2b 01       	movw	r4, r22
    1a26:	3c 01       	movw	r6, r24
    1a28:	68 81       	ld	r22, Y
    1a2a:	79 81       	ldd	r23, Y+1	; 0x01
    1a2c:	88 27       	eor	r24, r24
    1a2e:	77 fd       	sbrc	r23, 7
    1a30:	80 95       	com	r24
    1a32:	98 2f       	mov	r25, r24
    1a34:	0e 94 1c 10 	call	0x2038	; 0x2038 <__floatsisf>
    1a38:	9b 01       	movw	r18, r22
    1a3a:	ac 01       	movw	r20, r24
    1a3c:	c3 01       	movw	r24, r6
    1a3e:	b2 01       	movw	r22, r4
    1a40:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1a44:	2b 01       	movw	r4, r22
    1a46:	3c 01       	movw	r6, r24
    1a48:	b8 01       	movw	r22, r16
    1a4a:	88 27       	eor	r24, r24
    1a4c:	77 fd       	sbrc	r23, 7
    1a4e:	80 95       	com	r24
    1a50:	98 2f       	mov	r25, r24
    1a52:	0e 94 1c 10 	call	0x2038	; 0x2038 <__floatsisf>
    1a56:	a7 01       	movw	r20, r14
    1a58:	96 01       	movw	r18, r12
    1a5a:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1a5e:	9b 01       	movw	r18, r22
    1a60:	ac 01       	movw	r20, r24
    1a62:	c3 01       	movw	r24, r6
    1a64:	b2 01       	movw	r22, r4
    1a66:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <__addsf3>
    1a6a:	0e 94 e9 0f 	call	0x1fd2	; 0x1fd2 <__fixsfsi>
    1a6e:	69 93       	st	Y+, r22
    1a70:	79 93       	st	Y+, r23
	else if  (original_data[9]<max_m[5]){max_m[5]=original_data[9];}		 

	}

void Share_filter(int *indata,uchar lens,float Share,int *outdata )
{  for (uchar i=0;i<lens;i++)
    1a72:	93 94       	inc	r9
    1a74:	98 10       	cpse	r9, r8
    1a76:	ca cf       	rjmp	.-108    	; 0x1a0c <Share_filter+0x34>
{outdata[i]=(1-Share)*outdata[i]+Share*indata[i];
}
	
}
    1a78:	df 91       	pop	r29
    1a7a:	cf 91       	pop	r28
    1a7c:	1f 91       	pop	r17
    1a7e:	0f 91       	pop	r16
    1a80:	ff 90       	pop	r15
    1a82:	ef 90       	pop	r14
    1a84:	df 90       	pop	r13
    1a86:	cf 90       	pop	r12
    1a88:	bf 90       	pop	r11
    1a8a:	af 90       	pop	r10
    1a8c:	9f 90       	pop	r9
    1a8e:	8f 90       	pop	r8
    1a90:	7f 90       	pop	r7
    1a92:	6f 90       	pop	r6
    1a94:	5f 90       	pop	r5
    1a96:	4f 90       	pop	r4
    1a98:	08 95       	ret

00001a9a <main>:

int main(void)
{   port_init();
    1a9a:	cf 93       	push	r28
    1a9c:	df 93       	push	r29
    1a9e:	cd b7       	in	r28, 0x3d	; 61
    1aa0:	de b7       	in	r29, 0x3e	; 62
    1aa2:	2a 97       	sbiw	r28, 0x0a	; 10
    1aa4:	0f b6       	in	r0, 0x3f	; 63
    1aa6:	f8 94       	cli
    1aa8:	de bf       	out	0x3e, r29	; 62
    1aaa:	0f be       	out	0x3f, r0	; 63
    1aac:	cd bf       	out	0x3d, r28	; 61
    1aae:	0e 94 4a 0c 	call	0x1894	; 0x1894 <port_init>
	OledInit ();
    1ab2:	0e 94 ae 00 	call	0x15c	; 0x15c <OledInit>
    SPI_MasterInit();
    1ab6:	0e 94 0c 02 	call	0x418	; 0x418 <SPI_MasterInit>
	MPU9250_Init();
    1aba:	0e 94 44 02 	call	0x488	; 0x488 <MPU9250_Init>
	offset();
    1abe:	0e 94 55 0c 	call	0x18aa	; 0x18aa <offset>

Quaternions_Count	( //0,0,1,
                     original_data[1],original_data[2],original_data[3],
                   GY[0],GY[1],GY[2],
	                         //        0,0,0,
					  original_data[8],original_data[7],-original_data[9]
    1ac2:	0f 2e       	mov	r0, r31
    1ac4:	fe e0       	ldi	r31, 0x0E	; 14
    1ac6:	2f 2e       	mov	r2, r31
    1ac8:	f7 e0       	ldi	r31, 0x07	; 7
    1aca:	3f 2e       	mov	r3, r31
    1acc:	f0 2d       	mov	r31, r0
 //	SREG = 0x80;        //使能全局中断
// 	TCCR2=0x05;
//	TCCR1A=0x00;
//	TCCR1B=0x02 ;
    while(1)
    {TimerRst() ;
    1ace:	1d bc       	out	0x2d, r1	; 45
    1ad0:	1c bc       	out	0x2c, r1	; 44
	MPU9250_getData( original_data );
    1ad2:	8c ef       	ldi	r24, 0xFC	; 252
    1ad4:	96 e0       	ldi	r25, 0x06	; 6
    1ad6:	0e 94 32 03 	call	0x664	; 0x664 <MPU9250_getData>
	
	Share_filter(original_data,10,0.06,guolv_data);
    1ada:	06 ec       	ldi	r16, 0xC6	; 198
    1adc:	16 e0       	ldi	r17, 0x06	; 6
    1ade:	2f e8       	ldi	r18, 0x8F	; 143
    1ae0:	32 ec       	ldi	r19, 0xC2	; 194
    1ae2:	45 e7       	ldi	r20, 0x75	; 117
    1ae4:	5d e3       	ldi	r21, 0x3D	; 61
    1ae6:	6a e0       	ldi	r22, 0x0A	; 10
    1ae8:	8c ef       	ldi	r24, 0xFC	; 252
    1aea:	96 e0       	ldi	r25, 0x06	; 6
    1aec:	0e 94 ec 0c 	call	0x19d8	; 0x19d8 <Share_filter>
	GY[0]=guolv_data[4]* MPU9250G_2000dps;
    1af0:	ee ec       	ldi	r30, 0xCE	; 206
    1af2:	f6 e0       	ldi	r31, 0x06	; 6
    1af4:	60 81       	ld	r22, Z
    1af6:	71 81       	ldd	r23, Z+1	; 0x01
    1af8:	88 27       	eor	r24, r24
    1afa:	77 fd       	sbrc	r23, 7
    1afc:	80 95       	com	r24
    1afe:	98 2f       	mov	r25, r24
    1b00:	0e 94 1c 10 	call	0x2038	; 0x2038 <__floatsisf>
    1b04:	20 e9       	ldi	r18, 0x90	; 144
    1b06:	31 ec       	ldi	r19, 0xC1	; 193
    1b08:	49 e7       	ldi	r20, 0x79	; 121
    1b0a:	5d e3       	ldi	r21, 0x3D	; 61
    1b0c:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1b10:	5b 01       	movw	r10, r22
    1b12:	6c 01       	movw	r12, r24
    1b14:	e2 e8       	ldi	r30, 0x82	; 130
    1b16:	f6 e0       	ldi	r31, 0x06	; 6
    1b18:	60 83       	st	Z, r22
    1b1a:	71 83       	std	Z+1, r23	; 0x01
    1b1c:	82 83       	std	Z+2, r24	; 0x02
    1b1e:	93 83       	std	Z+3, r25	; 0x03
	GY[1]=guolv_data[5]* MPU9250G_2000dps;
    1b20:	e0 ed       	ldi	r30, 0xD0	; 208
    1b22:	f6 e0       	ldi	r31, 0x06	; 6
    1b24:	60 81       	ld	r22, Z
    1b26:	71 81       	ldd	r23, Z+1	; 0x01
    1b28:	88 27       	eor	r24, r24
    1b2a:	77 fd       	sbrc	r23, 7
    1b2c:	80 95       	com	r24
    1b2e:	98 2f       	mov	r25, r24
    1b30:	0e 94 1c 10 	call	0x2038	; 0x2038 <__floatsisf>
    1b34:	20 e9       	ldi	r18, 0x90	; 144
    1b36:	31 ec       	ldi	r19, 0xC1	; 193
    1b38:	49 e7       	ldi	r20, 0x79	; 121
    1b3a:	5d e3       	ldi	r21, 0x3D	; 61
    1b3c:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1b40:	86 2e       	mov	r8, r22
    1b42:	97 2e       	mov	r9, r23
    1b44:	e8 2e       	mov	r14, r24
    1b46:	99 87       	std	Y+9, r25	; 0x09
    1b48:	29 2f       	mov	r18, r25
    1b4a:	86 2f       	mov	r24, r22
    1b4c:	99 2d       	mov	r25, r9
    1b4e:	ae 2d       	mov	r26, r14
    1b50:	b2 2f       	mov	r27, r18
    1b52:	e6 e8       	ldi	r30, 0x86	; 134
    1b54:	f6 e0       	ldi	r31, 0x06	; 6
    1b56:	80 83       	st	Z, r24
    1b58:	91 83       	std	Z+1, r25	; 0x01
    1b5a:	a2 83       	std	Z+2, r26	; 0x02
    1b5c:	b3 83       	std	Z+3, r27	; 0x03
	GY[2]=guolv_data[6]* MPU9250G_2000dps;
    1b5e:	e2 ed       	ldi	r30, 0xD2	; 210
    1b60:	f6 e0       	ldi	r31, 0x06	; 6
    1b62:	60 81       	ld	r22, Z
    1b64:	71 81       	ldd	r23, Z+1	; 0x01
    1b66:	88 27       	eor	r24, r24
    1b68:	77 fd       	sbrc	r23, 7
    1b6a:	80 95       	com	r24
    1b6c:	98 2f       	mov	r25, r24
    1b6e:	0e 94 1c 10 	call	0x2038	; 0x2038 <__floatsisf>
    1b72:	20 e9       	ldi	r18, 0x90	; 144
    1b74:	31 ec       	ldi	r19, 0xC1	; 193
    1b76:	49 e7       	ldi	r20, 0x79	; 121
    1b78:	5d e3       	ldi	r21, 0x3D	; 61
    1b7a:	0e 94 00 11 	call	0x2200	; 0x2200 <__mulsf3>
    1b7e:	6a 87       	std	Y+10, r22	; 0x0a
    1b80:	17 2f       	mov	r17, r23
    1b82:	08 2f       	mov	r16, r24
    1b84:	f9 2e       	mov	r15, r25
    1b86:	86 2f       	mov	r24, r22
    1b88:	91 2f       	mov	r25, r17
    1b8a:	a0 2f       	mov	r26, r16
    1b8c:	bf 2d       	mov	r27, r15
    1b8e:	ea e8       	ldi	r30, 0x8A	; 138
    1b90:	f6 e0       	ldi	r31, 0x06	; 6
    1b92:	80 83       	st	Z, r24
    1b94:	91 83       	std	Z+1, r25	; 0x01
    1b96:	a2 83       	std	Z+2, r26	; 0x02
    1b98:	b3 83       	std	Z+3, r27	; 0x03
//	max_min();


Quaternions_Count	( //0,0,1,
    1b9a:	e2 e0       	ldi	r30, 0x02	; 2
    1b9c:	f7 e0       	ldi	r31, 0x07	; 7
    1b9e:	60 81       	ld	r22, Z
    1ba0:	71 81       	ldd	r23, Z+1	; 0x01
    1ba2:	88 27       	eor	r24, r24
    1ba4:	77 fd       	sbrc	r23, 7
    1ba6:	80 95       	com	r24
    1ba8:	98 2f       	mov	r25, r24
    1baa:	0e 94 1c 10 	call	0x2038	; 0x2038 <__floatsisf>
    1bae:	69 83       	std	Y+1, r22	; 0x01
    1bb0:	7a 83       	std	Y+2, r23	; 0x02
    1bb2:	8b 83       	std	Y+3, r24	; 0x03
    1bb4:	9c 83       	std	Y+4, r25	; 0x04
    1bb6:	e0 e0       	ldi	r30, 0x00	; 0
    1bb8:	f7 e0       	ldi	r31, 0x07	; 7
    1bba:	80 81       	ld	r24, Z
    1bbc:	91 81       	ldd	r25, Z+1	; 0x01
    1bbe:	bc 01       	movw	r22, r24
    1bc0:	88 27       	eor	r24, r24
    1bc2:	77 fd       	sbrc	r23, 7
    1bc4:	80 95       	com	r24
    1bc6:	98 2f       	mov	r25, r24
    1bc8:	0e 94 1c 10 	call	0x2038	; 0x2038 <__floatsisf>
    1bcc:	6d 83       	std	Y+5, r22	; 0x05
    1bce:	7e 83       	std	Y+6, r23	; 0x06
    1bd0:	8f 83       	std	Y+7, r24	; 0x07
    1bd2:	98 87       	std	Y+8, r25	; 0x08
    1bd4:	ee ef       	ldi	r30, 0xFE	; 254
    1bd6:	f6 e0       	ldi	r31, 0x06	; 6
    1bd8:	80 81       	ld	r24, Z
    1bda:	91 81       	ldd	r25, Z+1	; 0x01
    1bdc:	bc 01       	movw	r22, r24
    1bde:	88 27       	eor	r24, r24
    1be0:	77 fd       	sbrc	r23, 7
    1be2:	80 95       	com	r24
    1be4:	98 2f       	mov	r25, r24
    1be6:	0e 94 1c 10 	call	0x2038	; 0x2038 <__floatsisf>
    1bea:	2b 01       	movw	r4, r22
    1bec:	3c 01       	movw	r6, r24
                     original_data[1],original_data[2],original_data[3],
                   GY[0],GY[1],GY[2],
	                         //        0,0,0,
					  original_data[8],original_data[7],-original_data[9]
    1bee:	f1 01       	movw	r30, r2
    1bf0:	80 81       	ld	r24, Z
    1bf2:	91 81       	ldd	r25, Z+1	; 0x01
    1bf4:	91 95       	neg	r25
    1bf6:	81 95       	neg	r24
    1bf8:	91 09       	sbc	r25, r1
	GY[1]=guolv_data[5]* MPU9250G_2000dps;
	GY[2]=guolv_data[6]* MPU9250G_2000dps;
//	max_min();


Quaternions_Count	( //0,0,1,
    1bfa:	bc 01       	movw	r22, r24
    1bfc:	88 27       	eor	r24, r24
    1bfe:	77 fd       	sbrc	r23, 7
    1c00:	80 95       	com	r24
    1c02:	98 2f       	mov	r25, r24
    1c04:	0e 94 1c 10 	call	0x2038	; 0x2038 <__floatsisf>
    1c08:	9f 93       	push	r25
    1c0a:	8f 93       	push	r24
    1c0c:	7f 93       	push	r23
    1c0e:	6f 93       	push	r22
    1c10:	ea e0       	ldi	r30, 0x0A	; 10
    1c12:	f7 e0       	ldi	r31, 0x07	; 7
    1c14:	80 81       	ld	r24, Z
    1c16:	91 81       	ldd	r25, Z+1	; 0x01
    1c18:	bc 01       	movw	r22, r24
    1c1a:	88 27       	eor	r24, r24
    1c1c:	77 fd       	sbrc	r23, 7
    1c1e:	80 95       	com	r24
    1c20:	98 2f       	mov	r25, r24
    1c22:	0e 94 1c 10 	call	0x2038	; 0x2038 <__floatsisf>
    1c26:	9f 93       	push	r25
    1c28:	8f 93       	push	r24
    1c2a:	7f 93       	push	r23
    1c2c:	6f 93       	push	r22
    1c2e:	ec e0       	ldi	r30, 0x0C	; 12
    1c30:	f7 e0       	ldi	r31, 0x07	; 7
    1c32:	80 81       	ld	r24, Z
    1c34:	91 81       	ldd	r25, Z+1	; 0x01
    1c36:	bc 01       	movw	r22, r24
    1c38:	88 27       	eor	r24, r24
    1c3a:	77 fd       	sbrc	r23, 7
    1c3c:	80 95       	com	r24
    1c3e:	98 2f       	mov	r25, r24
    1c40:	0e 94 1c 10 	call	0x2038	; 0x2038 <__floatsisf>
    1c44:	9f 93       	push	r25
    1c46:	8f 93       	push	r24
    1c48:	7f 93       	push	r23
    1c4a:	6f 93       	push	r22
    1c4c:	ff 92       	push	r15
    1c4e:	0f 93       	push	r16
    1c50:	1f 93       	push	r17
    1c52:	fa 85       	ldd	r31, Y+10	; 0x0a
    1c54:	ff 93       	push	r31
    1c56:	89 85       	ldd	r24, Y+9	; 0x09
    1c58:	8f 93       	push	r24
    1c5a:	ef 92       	push	r14
    1c5c:	9f 92       	push	r9
    1c5e:	8f 92       	push	r8
    1c60:	e9 80       	ldd	r14, Y+1	; 0x01
    1c62:	fa 80       	ldd	r15, Y+2	; 0x02
    1c64:	0b 81       	ldd	r16, Y+3	; 0x03
    1c66:	1c 81       	ldd	r17, Y+4	; 0x04
    1c68:	2d 81       	ldd	r18, Y+5	; 0x05
    1c6a:	3e 81       	ldd	r19, Y+6	; 0x06
    1c6c:	4f 81       	ldd	r20, Y+7	; 0x07
    1c6e:	58 85       	ldd	r21, Y+8	; 0x08
    1c70:	c3 01       	movw	r24, r6
    1c72:	b2 01       	movw	r22, r4
    1c74:	0e 94 28 04 	call	0x850	; 0x850 <Quaternions_Count>
	                         //        0,0,0,
					  original_data[8],original_data[7],-original_data[9]
		                //    1,0,0

);
Quaternions_to_EulerAngles();
    1c78:	0e 94 26 0b 	call	0x164c	; 0x164c <Quaternions_to_EulerAngles>
		
		Cache_MDigit5_int( yaw,0,0,1); 	Cache_MDigit5_int(original_data[7],0,50,1);
    1c7c:	60 91 f0 06 	lds	r22, 0x06F0
    1c80:	70 91 f1 06 	lds	r23, 0x06F1
    1c84:	80 91 f2 06 	lds	r24, 0x06F2
    1c88:	90 91 f3 06 	lds	r25, 0x06F3
    1c8c:	0e 94 e9 0f 	call	0x1fd2	; 0x1fd2 <__fixsfsi>
    1c90:	dc 01       	movw	r26, r24
    1c92:	cb 01       	movw	r24, r22
    1c94:	21 e0       	ldi	r18, 0x01	; 1
    1c96:	40 e0       	ldi	r20, 0x00	; 0
    1c98:	60 e0       	ldi	r22, 0x00	; 0
    1c9a:	0e 94 64 01 	call	0x2c8	; 0x2c8 <Cache_MDigit5_int>
    1c9e:	21 e0       	ldi	r18, 0x01	; 1
    1ca0:	42 e3       	ldi	r20, 0x32	; 50
    1ca2:	60 e0       	ldi	r22, 0x00	; 0
    1ca4:	ea e0       	ldi	r30, 0x0A	; 10
    1ca6:	f7 e0       	ldi	r31, 0x07	; 7
    1ca8:	80 81       	ld	r24, Z
    1caa:	91 81       	ldd	r25, Z+1	; 0x01
    1cac:	0e 94 64 01 	call	0x2c8	; 0x2c8 <Cache_MDigit5_int>
					Cache_MDigit5_int(pitch,2,0,1);	    Cache_MDigit5_int(original_data[8],2,50,1);
    1cb0:	60 91 f4 06 	lds	r22, 0x06F4
    1cb4:	70 91 f5 06 	lds	r23, 0x06F5
    1cb8:	80 91 f6 06 	lds	r24, 0x06F6
    1cbc:	90 91 f7 06 	lds	r25, 0x06F7
    1cc0:	0e 94 e9 0f 	call	0x1fd2	; 0x1fd2 <__fixsfsi>
    1cc4:	dc 01       	movw	r26, r24
    1cc6:	cb 01       	movw	r24, r22
    1cc8:	21 e0       	ldi	r18, 0x01	; 1
    1cca:	40 e0       	ldi	r20, 0x00	; 0
    1ccc:	62 e0       	ldi	r22, 0x02	; 2
    1cce:	0e 94 64 01 	call	0x2c8	; 0x2c8 <Cache_MDigit5_int>
    1cd2:	21 e0       	ldi	r18, 0x01	; 1
    1cd4:	42 e3       	ldi	r20, 0x32	; 50
    1cd6:	62 e0       	ldi	r22, 0x02	; 2
    1cd8:	ec e0       	ldi	r30, 0x0C	; 12
    1cda:	f7 e0       	ldi	r31, 0x07	; 7
    1cdc:	80 81       	ld	r24, Z
    1cde:	91 81       	ldd	r25, Z+1	; 0x01
    1ce0:	0e 94 64 01 	call	0x2c8	; 0x2c8 <Cache_MDigit5_int>
					Cache_MDigit5_int(roll,4,0,1);     Cache_MDigit5_int(original_data[9],4,50,1);
    1ce4:	60 91 f8 06 	lds	r22, 0x06F8
    1ce8:	70 91 f9 06 	lds	r23, 0x06F9
    1cec:	80 91 fa 06 	lds	r24, 0x06FA
    1cf0:	90 91 fb 06 	lds	r25, 0x06FB
    1cf4:	0e 94 e9 0f 	call	0x1fd2	; 0x1fd2 <__fixsfsi>
    1cf8:	dc 01       	movw	r26, r24
    1cfa:	cb 01       	movw	r24, r22
    1cfc:	21 e0       	ldi	r18, 0x01	; 1
    1cfe:	40 e0       	ldi	r20, 0x00	; 0
    1d00:	64 e0       	ldi	r22, 0x04	; 4
    1d02:	0e 94 64 01 	call	0x2c8	; 0x2c8 <Cache_MDigit5_int>
    1d06:	21 e0       	ldi	r18, 0x01	; 1
    1d08:	42 e3       	ldi	r20, 0x32	; 50
    1d0a:	64 e0       	ldi	r22, 0x04	; 4
    1d0c:	f1 01       	movw	r30, r2
    1d0e:	80 81       	ld	r24, Z
    1d10:	91 81       	ldd	r25, Z+1	; 0x01
    1d12:	0e 94 64 01 	call	0x2c8	; 0x2c8 <Cache_MDigit5_int>
	//	Cache_MDigit5_int(axis_x,0,0,1); 	
	//	Cache_MDigit5_int(axis_y,2,0,1);	    
	//	Cache_MDigit5_int(axis_z,4,0,1);     
	//	sss=TCNT1;
	//	halfT=sss/2000000;
		Cache_MDigit5_int(sss,6,0,1);Cache_MDigit5_int(sss1,6,50,1);
    1d16:	21 e0       	ldi	r18, 0x01	; 1
    1d18:	40 e0       	ldi	r20, 0x00	; 0
    1d1a:	66 e0       	ldi	r22, 0x06	; 6
    1d1c:	80 91 5e 06 	lds	r24, 0x065E
    1d20:	90 91 5f 06 	lds	r25, 0x065F
    1d24:	0e 94 64 01 	call	0x2c8	; 0x2c8 <Cache_MDigit5_int>
    1d28:	21 e0       	ldi	r18, 0x01	; 1
    1d2a:	42 e3       	ldi	r20, 0x32	; 50
    1d2c:	66 e0       	ldi	r22, 0x06	; 6
    1d2e:	80 91 7c 06 	lds	r24, 0x067C
    1d32:	90 91 7d 06 	lds	r25, 0x067D
    1d36:	0e 94 64 01 	call	0x2c8	; 0x2c8 <Cache_MDigit5_int>
    1d3a:	0f b6       	in	r0, 0x3f	; 63
    1d3c:	f8 94       	cli
    1d3e:	de bf       	out	0x3e, r29	; 62
    1d40:	0f be       	out	0x3f, r0	; 63
    1d42:	cd bf       	out	0x3d, r28	; 61
    1d44:	c4 ce       	rjmp	.-632    	; 0x1ace <main+0x34>

00001d46 <__subsf3>:
    1d46:	50 58       	subi	r21, 0x80	; 128

00001d48 <__addsf3>:
    1d48:	bb 27       	eor	r27, r27
    1d4a:	aa 27       	eor	r26, r26
    1d4c:	0e d0       	rcall	.+28     	; 0x1d6a <__addsf3x>
    1d4e:	17 c2       	rjmp	.+1070   	; 0x217e <__fp_round>
    1d50:	08 d2       	rcall	.+1040   	; 0x2162 <__fp_pscA>
    1d52:	30 f0       	brcs	.+12     	; 0x1d60 <__addsf3+0x18>
    1d54:	0d d2       	rcall	.+1050   	; 0x2170 <__fp_pscB>
    1d56:	20 f0       	brcs	.+8      	; 0x1d60 <__addsf3+0x18>
    1d58:	31 f4       	brne	.+12     	; 0x1d66 <__addsf3+0x1e>
    1d5a:	9f 3f       	cpi	r25, 0xFF	; 255
    1d5c:	11 f4       	brne	.+4      	; 0x1d62 <__addsf3+0x1a>
    1d5e:	1e f4       	brtc	.+6      	; 0x1d66 <__addsf3+0x1e>
    1d60:	c7 c1       	rjmp	.+910    	; 0x20f0 <__fp_nan>
    1d62:	0e f4       	brtc	.+2      	; 0x1d66 <__addsf3+0x1e>
    1d64:	e0 95       	com	r30
    1d66:	e7 fb       	bst	r30, 7
    1d68:	bd c1       	rjmp	.+890    	; 0x20e4 <__fp_inf>

00001d6a <__addsf3x>:
    1d6a:	e9 2f       	mov	r30, r25
    1d6c:	19 d2       	rcall	.+1074   	; 0x21a0 <__fp_split3>
    1d6e:	80 f3       	brcs	.-32     	; 0x1d50 <__addsf3+0x8>
    1d70:	ba 17       	cp	r27, r26
    1d72:	62 07       	cpc	r22, r18
    1d74:	73 07       	cpc	r23, r19
    1d76:	84 07       	cpc	r24, r20
    1d78:	95 07       	cpc	r25, r21
    1d7a:	18 f0       	brcs	.+6      	; 0x1d82 <__addsf3x+0x18>
    1d7c:	71 f4       	brne	.+28     	; 0x1d9a <__addsf3x+0x30>
    1d7e:	9e f5       	brtc	.+102    	; 0x1de6 <__addsf3x+0x7c>
    1d80:	31 c2       	rjmp	.+1122   	; 0x21e4 <__fp_zero>
    1d82:	0e f4       	brtc	.+2      	; 0x1d86 <__addsf3x+0x1c>
    1d84:	e0 95       	com	r30
    1d86:	0b 2e       	mov	r0, r27
    1d88:	ba 2f       	mov	r27, r26
    1d8a:	a0 2d       	mov	r26, r0
    1d8c:	0b 01       	movw	r0, r22
    1d8e:	b9 01       	movw	r22, r18
    1d90:	90 01       	movw	r18, r0
    1d92:	0c 01       	movw	r0, r24
    1d94:	ca 01       	movw	r24, r20
    1d96:	a0 01       	movw	r20, r0
    1d98:	11 24       	eor	r1, r1
    1d9a:	ff 27       	eor	r31, r31
    1d9c:	59 1b       	sub	r21, r25
    1d9e:	99 f0       	breq	.+38     	; 0x1dc6 <__addsf3x+0x5c>
    1da0:	59 3f       	cpi	r21, 0xF9	; 249
    1da2:	50 f4       	brcc	.+20     	; 0x1db8 <__addsf3x+0x4e>
    1da4:	50 3e       	cpi	r21, 0xE0	; 224
    1da6:	68 f1       	brcs	.+90     	; 0x1e02 <__addsf3x+0x98>
    1da8:	1a 16       	cp	r1, r26
    1daa:	f0 40       	sbci	r31, 0x00	; 0
    1dac:	a2 2f       	mov	r26, r18
    1dae:	23 2f       	mov	r18, r19
    1db0:	34 2f       	mov	r19, r20
    1db2:	44 27       	eor	r20, r20
    1db4:	58 5f       	subi	r21, 0xF8	; 248
    1db6:	f3 cf       	rjmp	.-26     	; 0x1d9e <__addsf3x+0x34>
    1db8:	46 95       	lsr	r20
    1dba:	37 95       	ror	r19
    1dbc:	27 95       	ror	r18
    1dbe:	a7 95       	ror	r26
    1dc0:	f0 40       	sbci	r31, 0x00	; 0
    1dc2:	53 95       	inc	r21
    1dc4:	c9 f7       	brne	.-14     	; 0x1db8 <__addsf3x+0x4e>
    1dc6:	7e f4       	brtc	.+30     	; 0x1de6 <__addsf3x+0x7c>
    1dc8:	1f 16       	cp	r1, r31
    1dca:	ba 0b       	sbc	r27, r26
    1dcc:	62 0b       	sbc	r22, r18
    1dce:	73 0b       	sbc	r23, r19
    1dd0:	84 0b       	sbc	r24, r20
    1dd2:	ba f0       	brmi	.+46     	; 0x1e02 <__addsf3x+0x98>
    1dd4:	91 50       	subi	r25, 0x01	; 1
    1dd6:	a1 f0       	breq	.+40     	; 0x1e00 <__addsf3x+0x96>
    1dd8:	ff 0f       	add	r31, r31
    1dda:	bb 1f       	adc	r27, r27
    1ddc:	66 1f       	adc	r22, r22
    1dde:	77 1f       	adc	r23, r23
    1de0:	88 1f       	adc	r24, r24
    1de2:	c2 f7       	brpl	.-16     	; 0x1dd4 <__addsf3x+0x6a>
    1de4:	0e c0       	rjmp	.+28     	; 0x1e02 <__addsf3x+0x98>
    1de6:	ba 0f       	add	r27, r26
    1de8:	62 1f       	adc	r22, r18
    1dea:	73 1f       	adc	r23, r19
    1dec:	84 1f       	adc	r24, r20
    1dee:	48 f4       	brcc	.+18     	; 0x1e02 <__addsf3x+0x98>
    1df0:	87 95       	ror	r24
    1df2:	77 95       	ror	r23
    1df4:	67 95       	ror	r22
    1df6:	b7 95       	ror	r27
    1df8:	f7 95       	ror	r31
    1dfa:	9e 3f       	cpi	r25, 0xFE	; 254
    1dfc:	08 f0       	brcs	.+2      	; 0x1e00 <__addsf3x+0x96>
    1dfe:	b3 cf       	rjmp	.-154    	; 0x1d66 <__addsf3+0x1e>
    1e00:	93 95       	inc	r25
    1e02:	88 0f       	add	r24, r24
    1e04:	08 f0       	brcs	.+2      	; 0x1e08 <__addsf3x+0x9e>
    1e06:	99 27       	eor	r25, r25
    1e08:	ee 0f       	add	r30, r30
    1e0a:	97 95       	ror	r25
    1e0c:	87 95       	ror	r24
    1e0e:	08 95       	ret

00001e10 <asin>:
    1e10:	9f 93       	push	r25
    1e12:	9f 77       	andi	r25, 0x7F	; 127
    1e14:	ee e3       	ldi	r30, 0x3E	; 62
    1e16:	89 37       	cpi	r24, 0x79	; 121
    1e18:	9e 07       	cpc	r25, r30
    1e1a:	20 f4       	brcc	.+8      	; 0x1e24 <asin+0x14>
    1e1c:	e4 e5       	ldi	r30, 0x54	; 84
    1e1e:	f0 e0       	ldi	r31, 0x00	; 0
    1e20:	8f d1       	rcall	.+798    	; 0x2140 <__fp_powsodd>
    1e22:	09 c0       	rjmp	.+18     	; 0x1e36 <asin+0x26>
    1e24:	44 d1       	rcall	.+648    	; 0x20ae <__fp_arccos>
    1e26:	90 58       	subi	r25, 0x80	; 128
    1e28:	a2 ea       	ldi	r26, 0xA2	; 162
    1e2a:	2a ed       	ldi	r18, 0xDA	; 218
    1e2c:	3f e0       	ldi	r19, 0x0F	; 15
    1e2e:	49 ec       	ldi	r20, 0xC9	; 201
    1e30:	5f e3       	ldi	r21, 0x3F	; 63
    1e32:	9b df       	rcall	.-202    	; 0x1d6a <__addsf3x>
    1e34:	a4 d1       	rcall	.+840    	; 0x217e <__fp_round>
    1e36:	0f 90       	pop	r0
    1e38:	07 fc       	sbrc	r0, 7
    1e3a:	90 58       	subi	r25, 0x80	; 128
    1e3c:	08 95       	ret
    1e3e:	91 d1       	rcall	.+802    	; 0x2162 <__fp_pscA>
    1e40:	58 f0       	brcs	.+22     	; 0x1e58 <asin+0x48>
    1e42:	80 e8       	ldi	r24, 0x80	; 128
    1e44:	91 e0       	ldi	r25, 0x01	; 1
    1e46:	09 f4       	brne	.+2      	; 0x1e4a <asin+0x3a>
    1e48:	9e ef       	ldi	r25, 0xFE	; 254
    1e4a:	92 d1       	rcall	.+804    	; 0x2170 <__fp_pscB>
    1e4c:	28 f0       	brcs	.+10     	; 0x1e58 <asin+0x48>
    1e4e:	40 e8       	ldi	r20, 0x80	; 128
    1e50:	51 e0       	ldi	r21, 0x01	; 1
    1e52:	59 f4       	brne	.+22     	; 0x1e6a <atan2+0xe>
    1e54:	5e ef       	ldi	r21, 0xFE	; 254
    1e56:	09 c0       	rjmp	.+18     	; 0x1e6a <atan2+0xe>
    1e58:	4b c1       	rjmp	.+662    	; 0x20f0 <__fp_nan>
    1e5a:	c4 c1       	rjmp	.+904    	; 0x21e4 <__fp_zero>

00001e5c <atan2>:
    1e5c:	e9 2f       	mov	r30, r25
    1e5e:	e0 78       	andi	r30, 0x80	; 128
    1e60:	9f d1       	rcall	.+830    	; 0x21a0 <__fp_split3>
    1e62:	68 f3       	brcs	.-38     	; 0x1e3e <asin+0x2e>
    1e64:	09 2e       	mov	r0, r25
    1e66:	05 2a       	or	r0, r21
    1e68:	c1 f3       	breq	.-16     	; 0x1e5a <asin+0x4a>
    1e6a:	26 17       	cp	r18, r22
    1e6c:	37 07       	cpc	r19, r23
    1e6e:	48 07       	cpc	r20, r24
    1e70:	59 07       	cpc	r21, r25
    1e72:	38 f0       	brcs	.+14     	; 0x1e82 <atan2+0x26>
    1e74:	0e 2e       	mov	r0, r30
    1e76:	07 f8       	bld	r0, 7
    1e78:	e0 25       	eor	r30, r0
    1e7a:	69 f0       	breq	.+26     	; 0x1e96 <atan2+0x3a>
    1e7c:	e0 25       	eor	r30, r0
    1e7e:	e0 64       	ori	r30, 0x40	; 64
    1e80:	0a c0       	rjmp	.+20     	; 0x1e96 <atan2+0x3a>
    1e82:	ef 63       	ori	r30, 0x3F	; 63
    1e84:	07 f8       	bld	r0, 7
    1e86:	00 94       	com	r0
    1e88:	07 fa       	bst	r0, 7
    1e8a:	db 01       	movw	r26, r22
    1e8c:	b9 01       	movw	r22, r18
    1e8e:	9d 01       	movw	r18, r26
    1e90:	dc 01       	movw	r26, r24
    1e92:	ca 01       	movw	r24, r20
    1e94:	ad 01       	movw	r20, r26
    1e96:	ef 93       	push	r30
    1e98:	43 d0       	rcall	.+134    	; 0x1f20 <__divsf3_pse>
    1e9a:	71 d1       	rcall	.+738    	; 0x217e <__fp_round>
    1e9c:	0a d0       	rcall	.+20     	; 0x1eb2 <atan>
    1e9e:	5f 91       	pop	r21
    1ea0:	55 23       	and	r21, r21
    1ea2:	31 f0       	breq	.+12     	; 0x1eb0 <atan2+0x54>
    1ea4:	2b ed       	ldi	r18, 0xDB	; 219
    1ea6:	3f e0       	ldi	r19, 0x0F	; 15
    1ea8:	49 e4       	ldi	r20, 0x49	; 73
    1eaa:	50 fd       	sbrc	r21, 0
    1eac:	49 ec       	ldi	r20, 0xC9	; 201
    1eae:	4c cf       	rjmp	.-360    	; 0x1d48 <__addsf3>
    1eb0:	08 95       	ret

00001eb2 <atan>:
    1eb2:	df 93       	push	r29
    1eb4:	dd 27       	eor	r29, r29
    1eb6:	b9 2f       	mov	r27, r25
    1eb8:	bf 77       	andi	r27, 0x7F	; 127
    1eba:	40 e8       	ldi	r20, 0x80	; 128
    1ebc:	5f e3       	ldi	r21, 0x3F	; 63
    1ebe:	16 16       	cp	r1, r22
    1ec0:	17 06       	cpc	r1, r23
    1ec2:	48 07       	cpc	r20, r24
    1ec4:	5b 07       	cpc	r21, r27
    1ec6:	10 f4       	brcc	.+4      	; 0x1ecc <atan+0x1a>
    1ec8:	d9 2f       	mov	r29, r25
    1eca:	93 d1       	rcall	.+806    	; 0x21f2 <inverse>
    1ecc:	9f 93       	push	r25
    1ece:	8f 93       	push	r24
    1ed0:	7f 93       	push	r23
    1ed2:	6f 93       	push	r22
    1ed4:	3a d2       	rcall	.+1140   	; 0x234a <square>
    1ed6:	e8 e6       	ldi	r30, 0x68	; 104
    1ed8:	f0 e0       	ldi	r31, 0x00	; 0
    1eda:	0d d1       	rcall	.+538    	; 0x20f6 <__fp_powser>
    1edc:	50 d1       	rcall	.+672    	; 0x217e <__fp_round>
    1ede:	2f 91       	pop	r18
    1ee0:	3f 91       	pop	r19
    1ee2:	4f 91       	pop	r20
    1ee4:	5f 91       	pop	r21
    1ee6:	98 d1       	rcall	.+816    	; 0x2218 <__mulsf3x>
    1ee8:	dd 23       	and	r29, r29
    1eea:	49 f0       	breq	.+18     	; 0x1efe <atan+0x4c>
    1eec:	90 58       	subi	r25, 0x80	; 128
    1eee:	a2 ea       	ldi	r26, 0xA2	; 162
    1ef0:	2a ed       	ldi	r18, 0xDA	; 218
    1ef2:	3f e0       	ldi	r19, 0x0F	; 15
    1ef4:	49 ec       	ldi	r20, 0xC9	; 201
    1ef6:	5f e3       	ldi	r21, 0x3F	; 63
    1ef8:	d0 78       	andi	r29, 0x80	; 128
    1efa:	5d 27       	eor	r21, r29
    1efc:	36 df       	rcall	.-404    	; 0x1d6a <__addsf3x>
    1efe:	df 91       	pop	r29
    1f00:	3e c1       	rjmp	.+636    	; 0x217e <__fp_round>

00001f02 <__divsf3>:
    1f02:	0c d0       	rcall	.+24     	; 0x1f1c <__divsf3x>
    1f04:	3c c1       	rjmp	.+632    	; 0x217e <__fp_round>
    1f06:	34 d1       	rcall	.+616    	; 0x2170 <__fp_pscB>
    1f08:	40 f0       	brcs	.+16     	; 0x1f1a <__divsf3+0x18>
    1f0a:	2b d1       	rcall	.+598    	; 0x2162 <__fp_pscA>
    1f0c:	30 f0       	brcs	.+12     	; 0x1f1a <__divsf3+0x18>
    1f0e:	21 f4       	brne	.+8      	; 0x1f18 <__divsf3+0x16>
    1f10:	5f 3f       	cpi	r21, 0xFF	; 255
    1f12:	19 f0       	breq	.+6      	; 0x1f1a <__divsf3+0x18>
    1f14:	e7 c0       	rjmp	.+462    	; 0x20e4 <__fp_inf>
    1f16:	51 11       	cpse	r21, r1
    1f18:	66 c1       	rjmp	.+716    	; 0x21e6 <__fp_szero>
    1f1a:	ea c0       	rjmp	.+468    	; 0x20f0 <__fp_nan>

00001f1c <__divsf3x>:
    1f1c:	41 d1       	rcall	.+642    	; 0x21a0 <__fp_split3>
    1f1e:	98 f3       	brcs	.-26     	; 0x1f06 <__divsf3+0x4>

00001f20 <__divsf3_pse>:
    1f20:	99 23       	and	r25, r25
    1f22:	c9 f3       	breq	.-14     	; 0x1f16 <__divsf3+0x14>
    1f24:	55 23       	and	r21, r21
    1f26:	b1 f3       	breq	.-20     	; 0x1f14 <__divsf3+0x12>
    1f28:	95 1b       	sub	r25, r21
    1f2a:	55 0b       	sbc	r21, r21
    1f2c:	bb 27       	eor	r27, r27
    1f2e:	aa 27       	eor	r26, r26
    1f30:	62 17       	cp	r22, r18
    1f32:	73 07       	cpc	r23, r19
    1f34:	84 07       	cpc	r24, r20
    1f36:	38 f0       	brcs	.+14     	; 0x1f46 <__divsf3_pse+0x26>
    1f38:	9f 5f       	subi	r25, 0xFF	; 255
    1f3a:	5f 4f       	sbci	r21, 0xFF	; 255
    1f3c:	22 0f       	add	r18, r18
    1f3e:	33 1f       	adc	r19, r19
    1f40:	44 1f       	adc	r20, r20
    1f42:	aa 1f       	adc	r26, r26
    1f44:	a9 f3       	breq	.-22     	; 0x1f30 <__divsf3_pse+0x10>
    1f46:	33 d0       	rcall	.+102    	; 0x1fae <__divsf3_pse+0x8e>
    1f48:	0e 2e       	mov	r0, r30
    1f4a:	3a f0       	brmi	.+14     	; 0x1f5a <__divsf3_pse+0x3a>
    1f4c:	e0 e8       	ldi	r30, 0x80	; 128
    1f4e:	30 d0       	rcall	.+96     	; 0x1fb0 <__divsf3_pse+0x90>
    1f50:	91 50       	subi	r25, 0x01	; 1
    1f52:	50 40       	sbci	r21, 0x00	; 0
    1f54:	e6 95       	lsr	r30
    1f56:	00 1c       	adc	r0, r0
    1f58:	ca f7       	brpl	.-14     	; 0x1f4c <__divsf3_pse+0x2c>
    1f5a:	29 d0       	rcall	.+82     	; 0x1fae <__divsf3_pse+0x8e>
    1f5c:	fe 2f       	mov	r31, r30
    1f5e:	27 d0       	rcall	.+78     	; 0x1fae <__divsf3_pse+0x8e>
    1f60:	66 0f       	add	r22, r22
    1f62:	77 1f       	adc	r23, r23
    1f64:	88 1f       	adc	r24, r24
    1f66:	bb 1f       	adc	r27, r27
    1f68:	26 17       	cp	r18, r22
    1f6a:	37 07       	cpc	r19, r23
    1f6c:	48 07       	cpc	r20, r24
    1f6e:	ab 07       	cpc	r26, r27
    1f70:	b0 e8       	ldi	r27, 0x80	; 128
    1f72:	09 f0       	breq	.+2      	; 0x1f76 <__divsf3_pse+0x56>
    1f74:	bb 0b       	sbc	r27, r27
    1f76:	80 2d       	mov	r24, r0
    1f78:	bf 01       	movw	r22, r30
    1f7a:	ff 27       	eor	r31, r31
    1f7c:	93 58       	subi	r25, 0x83	; 131
    1f7e:	5f 4f       	sbci	r21, 0xFF	; 255
    1f80:	2a f0       	brmi	.+10     	; 0x1f8c <__divsf3_pse+0x6c>
    1f82:	9e 3f       	cpi	r25, 0xFE	; 254
    1f84:	51 05       	cpc	r21, r1
    1f86:	68 f0       	brcs	.+26     	; 0x1fa2 <__divsf3_pse+0x82>
    1f88:	ad c0       	rjmp	.+346    	; 0x20e4 <__fp_inf>
    1f8a:	2d c1       	rjmp	.+602    	; 0x21e6 <__fp_szero>
    1f8c:	5f 3f       	cpi	r21, 0xFF	; 255
    1f8e:	ec f3       	brlt	.-6      	; 0x1f8a <__divsf3_pse+0x6a>
    1f90:	98 3e       	cpi	r25, 0xE8	; 232
    1f92:	dc f3       	brlt	.-10     	; 0x1f8a <__divsf3_pse+0x6a>
    1f94:	86 95       	lsr	r24
    1f96:	77 95       	ror	r23
    1f98:	67 95       	ror	r22
    1f9a:	b7 95       	ror	r27
    1f9c:	f7 95       	ror	r31
    1f9e:	9f 5f       	subi	r25, 0xFF	; 255
    1fa0:	c9 f7       	brne	.-14     	; 0x1f94 <__divsf3_pse+0x74>
    1fa2:	88 0f       	add	r24, r24
    1fa4:	91 1d       	adc	r25, r1
    1fa6:	96 95       	lsr	r25
    1fa8:	87 95       	ror	r24
    1faa:	97 f9       	bld	r25, 7
    1fac:	08 95       	ret
    1fae:	e1 e0       	ldi	r30, 0x01	; 1
    1fb0:	66 0f       	add	r22, r22
    1fb2:	77 1f       	adc	r23, r23
    1fb4:	88 1f       	adc	r24, r24
    1fb6:	bb 1f       	adc	r27, r27
    1fb8:	62 17       	cp	r22, r18
    1fba:	73 07       	cpc	r23, r19
    1fbc:	84 07       	cpc	r24, r20
    1fbe:	ba 07       	cpc	r27, r26
    1fc0:	20 f0       	brcs	.+8      	; 0x1fca <__divsf3_pse+0xaa>
    1fc2:	62 1b       	sub	r22, r18
    1fc4:	73 0b       	sbc	r23, r19
    1fc6:	84 0b       	sbc	r24, r20
    1fc8:	ba 0b       	sbc	r27, r26
    1fca:	ee 1f       	adc	r30, r30
    1fcc:	88 f7       	brcc	.-30     	; 0x1fb0 <__divsf3_pse+0x90>
    1fce:	e0 95       	com	r30
    1fd0:	08 95       	ret

00001fd2 <__fixsfsi>:
    1fd2:	04 d0       	rcall	.+8      	; 0x1fdc <__fixunssfsi>
    1fd4:	68 94       	set
    1fd6:	b1 11       	cpse	r27, r1
    1fd8:	06 c1       	rjmp	.+524    	; 0x21e6 <__fp_szero>
    1fda:	08 95       	ret

00001fdc <__fixunssfsi>:
    1fdc:	e9 d0       	rcall	.+466    	; 0x21b0 <__fp_splitA>
    1fde:	88 f0       	brcs	.+34     	; 0x2002 <__fixunssfsi+0x26>
    1fe0:	9f 57       	subi	r25, 0x7F	; 127
    1fe2:	90 f0       	brcs	.+36     	; 0x2008 <__fixunssfsi+0x2c>
    1fe4:	b9 2f       	mov	r27, r25
    1fe6:	99 27       	eor	r25, r25
    1fe8:	b7 51       	subi	r27, 0x17	; 23
    1fea:	a0 f0       	brcs	.+40     	; 0x2014 <__fixunssfsi+0x38>
    1fec:	d1 f0       	breq	.+52     	; 0x2022 <__fixunssfsi+0x46>
    1fee:	66 0f       	add	r22, r22
    1ff0:	77 1f       	adc	r23, r23
    1ff2:	88 1f       	adc	r24, r24
    1ff4:	99 1f       	adc	r25, r25
    1ff6:	1a f0       	brmi	.+6      	; 0x1ffe <__fixunssfsi+0x22>
    1ff8:	ba 95       	dec	r27
    1ffa:	c9 f7       	brne	.-14     	; 0x1fee <__fixunssfsi+0x12>
    1ffc:	12 c0       	rjmp	.+36     	; 0x2022 <__fixunssfsi+0x46>
    1ffe:	b1 30       	cpi	r27, 0x01	; 1
    2000:	81 f0       	breq	.+32     	; 0x2022 <__fixunssfsi+0x46>
    2002:	f0 d0       	rcall	.+480    	; 0x21e4 <__fp_zero>
    2004:	b1 e0       	ldi	r27, 0x01	; 1
    2006:	08 95       	ret
    2008:	ed c0       	rjmp	.+474    	; 0x21e4 <__fp_zero>
    200a:	67 2f       	mov	r22, r23
    200c:	78 2f       	mov	r23, r24
    200e:	88 27       	eor	r24, r24
    2010:	b8 5f       	subi	r27, 0xF8	; 248
    2012:	39 f0       	breq	.+14     	; 0x2022 <__fixunssfsi+0x46>
    2014:	b9 3f       	cpi	r27, 0xF9	; 249
    2016:	cc f3       	brlt	.-14     	; 0x200a <__fixunssfsi+0x2e>
    2018:	86 95       	lsr	r24
    201a:	77 95       	ror	r23
    201c:	67 95       	ror	r22
    201e:	b3 95       	inc	r27
    2020:	d9 f7       	brne	.-10     	; 0x2018 <__fixunssfsi+0x3c>
    2022:	3e f4       	brtc	.+14     	; 0x2032 <__fixunssfsi+0x56>
    2024:	90 95       	com	r25
    2026:	80 95       	com	r24
    2028:	70 95       	com	r23
    202a:	61 95       	neg	r22
    202c:	7f 4f       	sbci	r23, 0xFF	; 255
    202e:	8f 4f       	sbci	r24, 0xFF	; 255
    2030:	9f 4f       	sbci	r25, 0xFF	; 255
    2032:	08 95       	ret

00002034 <__floatunsisf>:
    2034:	e8 94       	clt
    2036:	09 c0       	rjmp	.+18     	; 0x204a <__floatsisf+0x12>

00002038 <__floatsisf>:
    2038:	97 fb       	bst	r25, 7
    203a:	3e f4       	brtc	.+14     	; 0x204a <__floatsisf+0x12>
    203c:	90 95       	com	r25
    203e:	80 95       	com	r24
    2040:	70 95       	com	r23
    2042:	61 95       	neg	r22
    2044:	7f 4f       	sbci	r23, 0xFF	; 255
    2046:	8f 4f       	sbci	r24, 0xFF	; 255
    2048:	9f 4f       	sbci	r25, 0xFF	; 255
    204a:	99 23       	and	r25, r25
    204c:	a9 f0       	breq	.+42     	; 0x2078 <__floatsisf+0x40>
    204e:	f9 2f       	mov	r31, r25
    2050:	96 e9       	ldi	r25, 0x96	; 150
    2052:	bb 27       	eor	r27, r27
    2054:	93 95       	inc	r25
    2056:	f6 95       	lsr	r31
    2058:	87 95       	ror	r24
    205a:	77 95       	ror	r23
    205c:	67 95       	ror	r22
    205e:	b7 95       	ror	r27
    2060:	f1 11       	cpse	r31, r1
    2062:	f8 cf       	rjmp	.-16     	; 0x2054 <__floatsisf+0x1c>
    2064:	fa f4       	brpl	.+62     	; 0x20a4 <__floatsisf+0x6c>
    2066:	bb 0f       	add	r27, r27
    2068:	11 f4       	brne	.+4      	; 0x206e <__floatsisf+0x36>
    206a:	60 ff       	sbrs	r22, 0
    206c:	1b c0       	rjmp	.+54     	; 0x20a4 <__floatsisf+0x6c>
    206e:	6f 5f       	subi	r22, 0xFF	; 255
    2070:	7f 4f       	sbci	r23, 0xFF	; 255
    2072:	8f 4f       	sbci	r24, 0xFF	; 255
    2074:	9f 4f       	sbci	r25, 0xFF	; 255
    2076:	16 c0       	rjmp	.+44     	; 0x20a4 <__floatsisf+0x6c>
    2078:	88 23       	and	r24, r24
    207a:	11 f0       	breq	.+4      	; 0x2080 <__floatsisf+0x48>
    207c:	96 e9       	ldi	r25, 0x96	; 150
    207e:	11 c0       	rjmp	.+34     	; 0x20a2 <__floatsisf+0x6a>
    2080:	77 23       	and	r23, r23
    2082:	21 f0       	breq	.+8      	; 0x208c <__floatsisf+0x54>
    2084:	9e e8       	ldi	r25, 0x8E	; 142
    2086:	87 2f       	mov	r24, r23
    2088:	76 2f       	mov	r23, r22
    208a:	05 c0       	rjmp	.+10     	; 0x2096 <__floatsisf+0x5e>
    208c:	66 23       	and	r22, r22
    208e:	71 f0       	breq	.+28     	; 0x20ac <__floatsisf+0x74>
    2090:	96 e8       	ldi	r25, 0x86	; 134
    2092:	86 2f       	mov	r24, r22
    2094:	70 e0       	ldi	r23, 0x00	; 0
    2096:	60 e0       	ldi	r22, 0x00	; 0
    2098:	2a f0       	brmi	.+10     	; 0x20a4 <__floatsisf+0x6c>
    209a:	9a 95       	dec	r25
    209c:	66 0f       	add	r22, r22
    209e:	77 1f       	adc	r23, r23
    20a0:	88 1f       	adc	r24, r24
    20a2:	da f7       	brpl	.-10     	; 0x209a <__floatsisf+0x62>
    20a4:	88 0f       	add	r24, r24
    20a6:	96 95       	lsr	r25
    20a8:	87 95       	ror	r24
    20aa:	97 f9       	bld	r25, 7
    20ac:	08 95       	ret

000020ae <__fp_arccos>:
    20ae:	df 93       	push	r29
    20b0:	cf 93       	push	r28
    20b2:	1f 93       	push	r17
    20b4:	0f 93       	push	r16
    20b6:	8b 01       	movw	r16, r22
    20b8:	ec 01       	movw	r28, r24
    20ba:	e5 e9       	ldi	r30, 0x95	; 149
    20bc:	f0 e0       	ldi	r31, 0x00	; 0
    20be:	1b d0       	rcall	.+54     	; 0x20f6 <__fp_powser>
    20c0:	5e d0       	rcall	.+188    	; 0x217e <__fp_round>
    20c2:	98 01       	movw	r18, r16
    20c4:	ae 01       	movw	r20, r28
    20c6:	8b 01       	movw	r16, r22
    20c8:	ec 01       	movw	r28, r24
    20ca:	60 e0       	ldi	r22, 0x00	; 0
    20cc:	70 e0       	ldi	r23, 0x00	; 0
    20ce:	80 e8       	ldi	r24, 0x80	; 128
    20d0:	9f e3       	ldi	r25, 0x3F	; 63
    20d2:	39 de       	rcall	.-910    	; 0x1d46 <__subsf3>
    20d4:	fc d0       	rcall	.+504    	; 0x22ce <sqrt>
    20d6:	98 01       	movw	r18, r16
    20d8:	ae 01       	movw	r20, r28
    20da:	0f 91       	pop	r16
    20dc:	1f 91       	pop	r17
    20de:	cf 91       	pop	r28
    20e0:	df 91       	pop	r29
    20e2:	9a c0       	rjmp	.+308    	; 0x2218 <__mulsf3x>

000020e4 <__fp_inf>:
    20e4:	97 f9       	bld	r25, 7
    20e6:	9f 67       	ori	r25, 0x7F	; 127
    20e8:	80 e8       	ldi	r24, 0x80	; 128
    20ea:	70 e0       	ldi	r23, 0x00	; 0
    20ec:	60 e0       	ldi	r22, 0x00	; 0
    20ee:	08 95       	ret

000020f0 <__fp_nan>:
    20f0:	9f ef       	ldi	r25, 0xFF	; 255
    20f2:	80 ec       	ldi	r24, 0xC0	; 192
    20f4:	08 95       	ret

000020f6 <__fp_powser>:
    20f6:	df 93       	push	r29
    20f8:	cf 93       	push	r28
    20fa:	1f 93       	push	r17
    20fc:	0f 93       	push	r16
    20fe:	ff 92       	push	r15
    2100:	ef 92       	push	r14
    2102:	df 92       	push	r13
    2104:	7b 01       	movw	r14, r22
    2106:	8c 01       	movw	r16, r24
    2108:	68 94       	set
    210a:	05 c0       	rjmp	.+10     	; 0x2116 <__fp_powser+0x20>
    210c:	da 2e       	mov	r13, r26
    210e:	ef 01       	movw	r28, r30
    2110:	83 d0       	rcall	.+262    	; 0x2218 <__mulsf3x>
    2112:	fe 01       	movw	r30, r28
    2114:	e8 94       	clt
    2116:	a5 91       	lpm	r26, Z+
    2118:	25 91       	lpm	r18, Z+
    211a:	35 91       	lpm	r19, Z+
    211c:	45 91       	lpm	r20, Z+
    211e:	55 91       	lpm	r21, Z+
    2120:	ae f3       	brts	.-22     	; 0x210c <__fp_powser+0x16>
    2122:	ef 01       	movw	r28, r30
    2124:	22 de       	rcall	.-956    	; 0x1d6a <__addsf3x>
    2126:	fe 01       	movw	r30, r28
    2128:	97 01       	movw	r18, r14
    212a:	a8 01       	movw	r20, r16
    212c:	da 94       	dec	r13
    212e:	79 f7       	brne	.-34     	; 0x210e <__fp_powser+0x18>
    2130:	df 90       	pop	r13
    2132:	ef 90       	pop	r14
    2134:	ff 90       	pop	r15
    2136:	0f 91       	pop	r16
    2138:	1f 91       	pop	r17
    213a:	cf 91       	pop	r28
    213c:	df 91       	pop	r29
    213e:	08 95       	ret

00002140 <__fp_powsodd>:
    2140:	9f 93       	push	r25
    2142:	8f 93       	push	r24
    2144:	7f 93       	push	r23
    2146:	6f 93       	push	r22
    2148:	ff 93       	push	r31
    214a:	ef 93       	push	r30
    214c:	9b 01       	movw	r18, r22
    214e:	ac 01       	movw	r20, r24
    2150:	57 d0       	rcall	.+174    	; 0x2200 <__mulsf3>
    2152:	ef 91       	pop	r30
    2154:	ff 91       	pop	r31
    2156:	cf df       	rcall	.-98     	; 0x20f6 <__fp_powser>
    2158:	2f 91       	pop	r18
    215a:	3f 91       	pop	r19
    215c:	4f 91       	pop	r20
    215e:	5f 91       	pop	r21
    2160:	4f c0       	rjmp	.+158    	; 0x2200 <__mulsf3>

00002162 <__fp_pscA>:
    2162:	00 24       	eor	r0, r0
    2164:	0a 94       	dec	r0
    2166:	16 16       	cp	r1, r22
    2168:	17 06       	cpc	r1, r23
    216a:	18 06       	cpc	r1, r24
    216c:	09 06       	cpc	r0, r25
    216e:	08 95       	ret

00002170 <__fp_pscB>:
    2170:	00 24       	eor	r0, r0
    2172:	0a 94       	dec	r0
    2174:	12 16       	cp	r1, r18
    2176:	13 06       	cpc	r1, r19
    2178:	14 06       	cpc	r1, r20
    217a:	05 06       	cpc	r0, r21
    217c:	08 95       	ret

0000217e <__fp_round>:
    217e:	09 2e       	mov	r0, r25
    2180:	03 94       	inc	r0
    2182:	00 0c       	add	r0, r0
    2184:	11 f4       	brne	.+4      	; 0x218a <__fp_round+0xc>
    2186:	88 23       	and	r24, r24
    2188:	52 f0       	brmi	.+20     	; 0x219e <__fp_round+0x20>
    218a:	bb 0f       	add	r27, r27
    218c:	40 f4       	brcc	.+16     	; 0x219e <__fp_round+0x20>
    218e:	bf 2b       	or	r27, r31
    2190:	11 f4       	brne	.+4      	; 0x2196 <__fp_round+0x18>
    2192:	60 ff       	sbrs	r22, 0
    2194:	04 c0       	rjmp	.+8      	; 0x219e <__fp_round+0x20>
    2196:	6f 5f       	subi	r22, 0xFF	; 255
    2198:	7f 4f       	sbci	r23, 0xFF	; 255
    219a:	8f 4f       	sbci	r24, 0xFF	; 255
    219c:	9f 4f       	sbci	r25, 0xFF	; 255
    219e:	08 95       	ret

000021a0 <__fp_split3>:
    21a0:	57 fd       	sbrc	r21, 7
    21a2:	90 58       	subi	r25, 0x80	; 128
    21a4:	44 0f       	add	r20, r20
    21a6:	55 1f       	adc	r21, r21
    21a8:	59 f0       	breq	.+22     	; 0x21c0 <__fp_splitA+0x10>
    21aa:	5f 3f       	cpi	r21, 0xFF	; 255
    21ac:	71 f0       	breq	.+28     	; 0x21ca <__fp_splitA+0x1a>
    21ae:	47 95       	ror	r20

000021b0 <__fp_splitA>:
    21b0:	88 0f       	add	r24, r24
    21b2:	97 fb       	bst	r25, 7
    21b4:	99 1f       	adc	r25, r25
    21b6:	61 f0       	breq	.+24     	; 0x21d0 <__fp_splitA+0x20>
    21b8:	9f 3f       	cpi	r25, 0xFF	; 255
    21ba:	79 f0       	breq	.+30     	; 0x21da <__fp_splitA+0x2a>
    21bc:	87 95       	ror	r24
    21be:	08 95       	ret
    21c0:	12 16       	cp	r1, r18
    21c2:	13 06       	cpc	r1, r19
    21c4:	14 06       	cpc	r1, r20
    21c6:	55 1f       	adc	r21, r21
    21c8:	f2 cf       	rjmp	.-28     	; 0x21ae <__fp_split3+0xe>
    21ca:	46 95       	lsr	r20
    21cc:	f1 df       	rcall	.-30     	; 0x21b0 <__fp_splitA>
    21ce:	08 c0       	rjmp	.+16     	; 0x21e0 <__fp_splitA+0x30>
    21d0:	16 16       	cp	r1, r22
    21d2:	17 06       	cpc	r1, r23
    21d4:	18 06       	cpc	r1, r24
    21d6:	99 1f       	adc	r25, r25
    21d8:	f1 cf       	rjmp	.-30     	; 0x21bc <__fp_splitA+0xc>
    21da:	86 95       	lsr	r24
    21dc:	71 05       	cpc	r23, r1
    21de:	61 05       	cpc	r22, r1
    21e0:	08 94       	sec
    21e2:	08 95       	ret

000021e4 <__fp_zero>:
    21e4:	e8 94       	clt

000021e6 <__fp_szero>:
    21e6:	bb 27       	eor	r27, r27
    21e8:	66 27       	eor	r22, r22
    21ea:	77 27       	eor	r23, r23
    21ec:	cb 01       	movw	r24, r22
    21ee:	97 f9       	bld	r25, 7
    21f0:	08 95       	ret

000021f2 <inverse>:
    21f2:	9b 01       	movw	r18, r22
    21f4:	ac 01       	movw	r20, r24
    21f6:	60 e0       	ldi	r22, 0x00	; 0
    21f8:	70 e0       	ldi	r23, 0x00	; 0
    21fa:	80 e8       	ldi	r24, 0x80	; 128
    21fc:	9f e3       	ldi	r25, 0x3F	; 63
    21fe:	81 ce       	rjmp	.-766    	; 0x1f02 <__divsf3>

00002200 <__mulsf3>:
    2200:	0b d0       	rcall	.+22     	; 0x2218 <__mulsf3x>
    2202:	bd cf       	rjmp	.-134    	; 0x217e <__fp_round>
    2204:	ae df       	rcall	.-164    	; 0x2162 <__fp_pscA>
    2206:	28 f0       	brcs	.+10     	; 0x2212 <__mulsf3+0x12>
    2208:	b3 df       	rcall	.-154    	; 0x2170 <__fp_pscB>
    220a:	18 f0       	brcs	.+6      	; 0x2212 <__mulsf3+0x12>
    220c:	95 23       	and	r25, r21
    220e:	09 f0       	breq	.+2      	; 0x2212 <__mulsf3+0x12>
    2210:	69 cf       	rjmp	.-302    	; 0x20e4 <__fp_inf>
    2212:	6e cf       	rjmp	.-292    	; 0x20f0 <__fp_nan>
    2214:	11 24       	eor	r1, r1
    2216:	e7 cf       	rjmp	.-50     	; 0x21e6 <__fp_szero>

00002218 <__mulsf3x>:
    2218:	c3 df       	rcall	.-122    	; 0x21a0 <__fp_split3>
    221a:	a0 f3       	brcs	.-24     	; 0x2204 <__mulsf3+0x4>

0000221c <__mulsf3_pse>:
    221c:	95 9f       	mul	r25, r21
    221e:	d1 f3       	breq	.-12     	; 0x2214 <__mulsf3+0x14>
    2220:	95 0f       	add	r25, r21
    2222:	50 e0       	ldi	r21, 0x00	; 0
    2224:	55 1f       	adc	r21, r21
    2226:	62 9f       	mul	r22, r18
    2228:	f0 01       	movw	r30, r0
    222a:	72 9f       	mul	r23, r18
    222c:	bb 27       	eor	r27, r27
    222e:	f0 0d       	add	r31, r0
    2230:	b1 1d       	adc	r27, r1
    2232:	63 9f       	mul	r22, r19
    2234:	aa 27       	eor	r26, r26
    2236:	f0 0d       	add	r31, r0
    2238:	b1 1d       	adc	r27, r1
    223a:	aa 1f       	adc	r26, r26
    223c:	64 9f       	mul	r22, r20
    223e:	66 27       	eor	r22, r22
    2240:	b0 0d       	add	r27, r0
    2242:	a1 1d       	adc	r26, r1
    2244:	66 1f       	adc	r22, r22
    2246:	82 9f       	mul	r24, r18
    2248:	22 27       	eor	r18, r18
    224a:	b0 0d       	add	r27, r0
    224c:	a1 1d       	adc	r26, r1
    224e:	62 1f       	adc	r22, r18
    2250:	73 9f       	mul	r23, r19
    2252:	b0 0d       	add	r27, r0
    2254:	a1 1d       	adc	r26, r1
    2256:	62 1f       	adc	r22, r18
    2258:	83 9f       	mul	r24, r19
    225a:	a0 0d       	add	r26, r0
    225c:	61 1d       	adc	r22, r1
    225e:	22 1f       	adc	r18, r18
    2260:	74 9f       	mul	r23, r20
    2262:	33 27       	eor	r19, r19
    2264:	a0 0d       	add	r26, r0
    2266:	61 1d       	adc	r22, r1
    2268:	23 1f       	adc	r18, r19
    226a:	84 9f       	mul	r24, r20
    226c:	60 0d       	add	r22, r0
    226e:	21 1d       	adc	r18, r1
    2270:	82 2f       	mov	r24, r18
    2272:	76 2f       	mov	r23, r22
    2274:	6a 2f       	mov	r22, r26
    2276:	11 24       	eor	r1, r1
    2278:	9f 57       	subi	r25, 0x7F	; 127
    227a:	50 40       	sbci	r21, 0x00	; 0
    227c:	8a f0       	brmi	.+34     	; 0x22a0 <__mulsf3_pse+0x84>
    227e:	e1 f0       	breq	.+56     	; 0x22b8 <__mulsf3_pse+0x9c>
    2280:	88 23       	and	r24, r24
    2282:	4a f0       	brmi	.+18     	; 0x2296 <__mulsf3_pse+0x7a>
    2284:	ee 0f       	add	r30, r30
    2286:	ff 1f       	adc	r31, r31
    2288:	bb 1f       	adc	r27, r27
    228a:	66 1f       	adc	r22, r22
    228c:	77 1f       	adc	r23, r23
    228e:	88 1f       	adc	r24, r24
    2290:	91 50       	subi	r25, 0x01	; 1
    2292:	50 40       	sbci	r21, 0x00	; 0
    2294:	a9 f7       	brne	.-22     	; 0x2280 <__mulsf3_pse+0x64>
    2296:	9e 3f       	cpi	r25, 0xFE	; 254
    2298:	51 05       	cpc	r21, r1
    229a:	70 f0       	brcs	.+28     	; 0x22b8 <__mulsf3_pse+0x9c>
    229c:	23 cf       	rjmp	.-442    	; 0x20e4 <__fp_inf>
    229e:	a3 cf       	rjmp	.-186    	; 0x21e6 <__fp_szero>
    22a0:	5f 3f       	cpi	r21, 0xFF	; 255
    22a2:	ec f3       	brlt	.-6      	; 0x229e <__mulsf3_pse+0x82>
    22a4:	98 3e       	cpi	r25, 0xE8	; 232
    22a6:	dc f3       	brlt	.-10     	; 0x229e <__mulsf3_pse+0x82>
    22a8:	86 95       	lsr	r24
    22aa:	77 95       	ror	r23
    22ac:	67 95       	ror	r22
    22ae:	b7 95       	ror	r27
    22b0:	f7 95       	ror	r31
    22b2:	e7 95       	ror	r30
    22b4:	9f 5f       	subi	r25, 0xFF	; 255
    22b6:	c1 f7       	brne	.-16     	; 0x22a8 <__mulsf3_pse+0x8c>
    22b8:	fe 2b       	or	r31, r30
    22ba:	88 0f       	add	r24, r24
    22bc:	91 1d       	adc	r25, r1
    22be:	96 95       	lsr	r25
    22c0:	87 95       	ror	r24
    22c2:	97 f9       	bld	r25, 7
    22c4:	08 95       	ret
    22c6:	11 f4       	brne	.+4      	; 0x22cc <__mulsf3_pse+0xb0>
    22c8:	0e f4       	brtc	.+2      	; 0x22cc <__mulsf3_pse+0xb0>
    22ca:	12 cf       	rjmp	.-476    	; 0x20f0 <__fp_nan>
    22cc:	41 c0       	rjmp	.+130    	; 0x2350 <__fp_mpack>

000022ce <sqrt>:
    22ce:	70 df       	rcall	.-288    	; 0x21b0 <__fp_splitA>
    22d0:	d0 f3       	brcs	.-12     	; 0x22c6 <__mulsf3_pse+0xaa>
    22d2:	99 23       	and	r25, r25
    22d4:	d9 f3       	breq	.-10     	; 0x22cc <__mulsf3_pse+0xb0>
    22d6:	ce f3       	brts	.-14     	; 0x22ca <__mulsf3_pse+0xae>
    22d8:	9f 57       	subi	r25, 0x7F	; 127
    22da:	55 0b       	sbc	r21, r21
    22dc:	87 ff       	sbrs	r24, 7
    22de:	46 d0       	rcall	.+140    	; 0x236c <__fp_norm2>
    22e0:	00 24       	eor	r0, r0
    22e2:	a0 e6       	ldi	r26, 0x60	; 96
    22e4:	40 ea       	ldi	r20, 0xA0	; 160
    22e6:	90 01       	movw	r18, r0
    22e8:	80 58       	subi	r24, 0x80	; 128
    22ea:	56 95       	lsr	r21
    22ec:	97 95       	ror	r25
    22ee:	28 f4       	brcc	.+10     	; 0x22fa <sqrt+0x2c>
    22f0:	80 5c       	subi	r24, 0xC0	; 192
    22f2:	66 0f       	add	r22, r22
    22f4:	77 1f       	adc	r23, r23
    22f6:	88 1f       	adc	r24, r24
    22f8:	20 f0       	brcs	.+8      	; 0x2302 <sqrt+0x34>
    22fa:	26 17       	cp	r18, r22
    22fc:	37 07       	cpc	r19, r23
    22fe:	48 07       	cpc	r20, r24
    2300:	30 f4       	brcc	.+12     	; 0x230e <sqrt+0x40>
    2302:	62 1b       	sub	r22, r18
    2304:	73 0b       	sbc	r23, r19
    2306:	84 0b       	sbc	r24, r20
    2308:	20 29       	or	r18, r0
    230a:	31 29       	or	r19, r1
    230c:	4a 2b       	or	r20, r26
    230e:	a6 95       	lsr	r26
    2310:	17 94       	ror	r1
    2312:	07 94       	ror	r0
    2314:	20 25       	eor	r18, r0
    2316:	31 25       	eor	r19, r1
    2318:	4a 27       	eor	r20, r26
    231a:	58 f7       	brcc	.-42     	; 0x22f2 <sqrt+0x24>
    231c:	66 0f       	add	r22, r22
    231e:	77 1f       	adc	r23, r23
    2320:	88 1f       	adc	r24, r24
    2322:	20 f0       	brcs	.+8      	; 0x232c <sqrt+0x5e>
    2324:	26 17       	cp	r18, r22
    2326:	37 07       	cpc	r19, r23
    2328:	48 07       	cpc	r20, r24
    232a:	30 f4       	brcc	.+12     	; 0x2338 <sqrt+0x6a>
    232c:	62 0b       	sbc	r22, r18
    232e:	73 0b       	sbc	r23, r19
    2330:	84 0b       	sbc	r24, r20
    2332:	20 0d       	add	r18, r0
    2334:	31 1d       	adc	r19, r1
    2336:	41 1d       	adc	r20, r1
    2338:	a0 95       	com	r26
    233a:	81 f7       	brne	.-32     	; 0x231c <sqrt+0x4e>
    233c:	b9 01       	movw	r22, r18
    233e:	84 2f       	mov	r24, r20
    2340:	91 58       	subi	r25, 0x81	; 129
    2342:	88 0f       	add	r24, r24
    2344:	96 95       	lsr	r25
    2346:	87 95       	ror	r24
    2348:	08 95       	ret

0000234a <square>:
    234a:	9b 01       	movw	r18, r22
    234c:	ac 01       	movw	r20, r24
    234e:	58 cf       	rjmp	.-336    	; 0x2200 <__mulsf3>

00002350 <__fp_mpack>:
    2350:	9f 3f       	cpi	r25, 0xFF	; 255
    2352:	31 f0       	breq	.+12     	; 0x2360 <__fp_mpack_finite+0xc>

00002354 <__fp_mpack_finite>:
    2354:	91 50       	subi	r25, 0x01	; 1
    2356:	20 f4       	brcc	.+8      	; 0x2360 <__fp_mpack_finite+0xc>
    2358:	87 95       	ror	r24
    235a:	77 95       	ror	r23
    235c:	67 95       	ror	r22
    235e:	b7 95       	ror	r27
    2360:	88 0f       	add	r24, r24
    2362:	91 1d       	adc	r25, r1
    2364:	96 95       	lsr	r25
    2366:	87 95       	ror	r24
    2368:	97 f9       	bld	r25, 7
    236a:	08 95       	ret

0000236c <__fp_norm2>:
    236c:	91 50       	subi	r25, 0x01	; 1
    236e:	50 40       	sbci	r21, 0x00	; 0
    2370:	66 0f       	add	r22, r22
    2372:	77 1f       	adc	r23, r23
    2374:	88 1f       	adc	r24, r24
    2376:	d2 f7       	brpl	.-12     	; 0x236c <__fp_norm2>
    2378:	08 95       	ret

0000237a <__divmodhi4>:
    237a:	97 fb       	bst	r25, 7
    237c:	07 2e       	mov	r0, r23
    237e:	16 f4       	brtc	.+4      	; 0x2384 <__divmodhi4+0xa>
    2380:	00 94       	com	r0
    2382:	07 d0       	rcall	.+14     	; 0x2392 <__divmodhi4_neg1>
    2384:	77 fd       	sbrc	r23, 7
    2386:	09 d0       	rcall	.+18     	; 0x239a <__divmodhi4_neg2>
    2388:	0e 94 d1 11 	call	0x23a2	; 0x23a2 <__udivmodhi4>
    238c:	07 fc       	sbrc	r0, 7
    238e:	05 d0       	rcall	.+10     	; 0x239a <__divmodhi4_neg2>
    2390:	3e f4       	brtc	.+14     	; 0x23a0 <__divmodhi4_exit>

00002392 <__divmodhi4_neg1>:
    2392:	90 95       	com	r25
    2394:	81 95       	neg	r24
    2396:	9f 4f       	sbci	r25, 0xFF	; 255
    2398:	08 95       	ret

0000239a <__divmodhi4_neg2>:
    239a:	70 95       	com	r23
    239c:	61 95       	neg	r22
    239e:	7f 4f       	sbci	r23, 0xFF	; 255

000023a0 <__divmodhi4_exit>:
    23a0:	08 95       	ret

000023a2 <__udivmodhi4>:
    23a2:	aa 1b       	sub	r26, r26
    23a4:	bb 1b       	sub	r27, r27
    23a6:	51 e1       	ldi	r21, 0x11	; 17
    23a8:	07 c0       	rjmp	.+14     	; 0x23b8 <__udivmodhi4_ep>

000023aa <__udivmodhi4_loop>:
    23aa:	aa 1f       	adc	r26, r26
    23ac:	bb 1f       	adc	r27, r27
    23ae:	a6 17       	cp	r26, r22
    23b0:	b7 07       	cpc	r27, r23
    23b2:	10 f0       	brcs	.+4      	; 0x23b8 <__udivmodhi4_ep>
    23b4:	a6 1b       	sub	r26, r22
    23b6:	b7 0b       	sbc	r27, r23

000023b8 <__udivmodhi4_ep>:
    23b8:	88 1f       	adc	r24, r24
    23ba:	99 1f       	adc	r25, r25
    23bc:	5a 95       	dec	r21
    23be:	a9 f7       	brne	.-22     	; 0x23aa <__udivmodhi4_loop>
    23c0:	80 95       	com	r24
    23c2:	90 95       	com	r25
    23c4:	bc 01       	movw	r22, r24
    23c6:	cd 01       	movw	r24, r26
    23c8:	08 95       	ret

000023ca <_exit>:
    23ca:	f8 94       	cli

000023cc <__stop_program>:
    23cc:	ff cf       	rjmp	.-2      	; 0x23cc <__stop_program>
